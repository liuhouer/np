<?xml version="1.0" encoding="UTF-8"?>
<!-- dao数据库相关配置 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 
		由db.properties改为*.properties, 这样也会加载其他的属性文件 可以使用 @Value
		由于父子容器关系，service层（父）的属性文件在springmvc层（子）是读取不到的，子只能读取对象，属性是读取不到的
	 -->
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:config.properties" />

	<!-- HikariCP configuration mysql-->
	<bean id="mysqlConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="poolName" value="springHikariCP" />
		<property name="dataSourceClassName" value="${hibernate.hikari.dataSourceClassName}" />
	    <property name="connectionTestQuery" value="SELECT 1" />
	    <property name="maximumPoolSize" value="${hibernate.hikari.maximumPoolSize}" />
	    <property name="minimumIdle" value="${hibernate.hikari.minimumIdle}" />
	    <property name="idleTimeout" value="${hibernate.hikari.idleTimeout}" />
	    <property name="connectionTimeout" value="${hibernate.hikari.connection-timeout}" />
		<property name="maxLifetime" value="${hibernate.hikari.maxLifetime}" />
	
	    <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${hibernate.hikari.dataSource.url}</prop>
	            <prop key="user">${hibernate.hikari.dataSource.user}</prop>
	            <prop key="password">${hibernate.hikari.dataSource.password}</prop>
	        </props>
	    </property>
	</bean>


	<!-- HikariCP configuration ck-->
	<bean id="ckConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${ck.driverClassName}" />
		<property name="jdbcUrl" value="${ck.jdbcUrl}" />
		<property name="username" value="${ck.username}" />
		<property name="password" value="${ck.password}" />
	</bean>
	
	<!--mysql-->
	<bean id="mysqlDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="mysqlConfig" />
	</bean>

	<!--clickhouse-->
	<bean id="ckDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="ckConfig" />
	</bean>

	<!--动态dataSource映射-->
	<bean id="dataSource" class="cn.northpark.utils.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="ck" value-ref="ckDataSource"/>
				<entry key="mysql" value-ref="mysqlDataSource"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="mysqlDataSource"/>
	</bean>

	<!-- 配置hibernate的SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入数据源 相关信息看源码 -->
		<property name="dataSource" ref="dataSource" />
		<!-- hibernate配置信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- FEATHERS CONFIG -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<!-- 扫描hibernate注解配置的entity -->
		<property name="packagesToScan" value="cn.northpark.model" />
	</bean>

	<!--Spring中bean获取的工具类====》这里是为了JunitTest可以调用到service-->
    <bean id="springContextUtils" class="cn.northpark.utils.SpringContextUtils"/>

</beans>