<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.northpark.mapper.NoteMapper" >
  <resultMap id="BaseResultMap" type="cn.northpark.model.Note" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="opened" property="opened" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="brief" property="brief" jdbcType="LONGVARCHAR" />
    <result column="note" property="note" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bc_note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.northpark.model.Note" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bc_note (opened, create_time, userid, 
      brief, note)
    values (#{opened,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{brief,jdbcType=LONGVARCHAR}, #{note,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.northpark.model.Note" >
    update bc_note
    set opened = #{opened,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      brief = #{brief,jdbcType=LONGVARCHAR},
      note = #{note,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, opened, create_time, userid, brief, note
    from bc_note
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, opened, create_time, userid, brief, note
    from bc_note
  </select>

    <select id="getHotNoteList" resultType="java.util.Map">
              SELECT a.id as noteid,a.brief as brief ,a.note as note,
                a.opened as openid,a.create_time as create_time,a.userid as userid,
                b.username as username,b.tail_slug as tail_slug,b.head_path as head_path ,
                b.email as email,b.head_span,b.head_span_class
                FROM
                bc_note a
                inner JOIN bc_user  b on a.userid = b.id
                where   a.opened = 'yes'

				order by rand()
    </select>
  <select id="findByCondition" resultMap="BaseResultMap">
    select id, opened, create_time, userid, brief, note
    from bc_note

    <if test="whereSql != null and whereSql != ''">
      ${whereSql}
    </if>

    <if test="orderBy != null and orderBy != ''">
      order by  ${orderBy}
    </if>

  </select>
  <select id="querySqlMap" resultType="java.util.Map">
    ${sqlExpr}
  </select>
</mapper>