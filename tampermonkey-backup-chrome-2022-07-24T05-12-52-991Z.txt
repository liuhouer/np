{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"CSDN/Áü•‰πé/ÂìîÂì©ÂìîÂì©/ÁÆÄ‰π¶ÂÖçÁôªÂΩïÂéªÈô§ÂºπÁ™óÂπøÂëä üõ°","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.zhihu.com/*","https://*.zhihu.com/*","https://blog.csdn.net/*","https://*.csdn.net/*","https://www.jianshu.com/*","https://*.jianshu.com/*","https://www.bilibili.com/*","https://*.bilibili.com/*","https://juejin.cn/*"],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1657118213702,"data":{"menu_GAEEScript_tc_CSDN":"btrue","menu_GAEEScript_tc_Jianshu":"btrue","menu_GAEEScript_tc_Zhihu":"btrue"}},"enabled":false,"position":1,"file_url":"https://greasyfork.org/scripts/428960-csdn-%E7%9F%A5%E4%B9%8E-%E7%AE%80%E4%B9%A6%E5%85%8D%E7%99%BB%E5%BD%95%E5%8E%BB%E9%99%A4%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A/code/CSDN%E7%9F%A5%E4%B9%8E%E7%AE%80%E4%B9%A6%E5%85%8D%E7%99%BB%E5%BD%95%E5%8E%BB%E9%99%A4%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A%20%F0%9F%9B%A1.user.js","uuid":"f5152dc1-8980-4d22-a023-bff448cfc9f2","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1657118213697,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.cookie.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery-cookie/1.4.0/jquery.cookie.js","ts":1657118213697,"mimetype":"text/javascript"},"source":"LyohCiAqIGpRdWVyeSBDb29raWUgUGx1Z2luIHYxLjQuMAogKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZQogKgogKiBDb3B5cmlnaHQgMjAxMyBLbGF1cyBIYXJ0bAogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKICovCihmdW5jdGlvbiAoZmFjdG9yeSkgewoJaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgewoJCS8vIEFNRC4gUmVnaXN0ZXIgYXMgYW5vbnltb3VzIG1vZHVsZS4KCQlkZWZpbmUoWydqcXVlcnknXSwgZmFjdG9yeSk7Cgl9IGVsc2UgewoJCS8vIEJyb3dzZXIgZ2xvYmFscy4KCQlmYWN0b3J5KGpRdWVyeSk7Cgl9Cn0oZnVuY3Rpb24gKCQpIHsKCgl2YXIgcGx1c2VzID0gL1wrL2c7CgoJZnVuY3Rpb24gZW5jb2RlKHMpIHsKCQlyZXR1cm4gY29uZmlnLnJhdyA/IHMgOiBlbmNvZGVVUklDb21wb25lbnQocyk7Cgl9CgoJZnVuY3Rpb24gZGVjb2RlKHMpIHsKCQlyZXR1cm4gY29uZmlnLnJhdyA/IHMgOiBkZWNvZGVVUklDb21wb25lbnQocyk7Cgl9CgoJZnVuY3Rpb24gc3RyaW5naWZ5Q29va2llVmFsdWUodmFsdWUpIHsKCQlyZXR1cm4gZW5jb2RlKGNvbmZpZy5qc29uID8gSlNPTi5zdHJpbmdpZnkodmFsdWUpIDogU3RyaW5nKHZhbHVlKSk7Cgl9CgoJZnVuY3Rpb24gcGFyc2VDb29raWVWYWx1ZShzKSB7CgkJaWYgKHMuaW5kZXhPZignIicpID09PSAwKSB7CgkJCS8vIFRoaXMgaXMgYSBxdW90ZWQgY29va2llIGFzIGFjY29yZGluZyB0byBSRkMyMDY4LCB1bmVzY2FwZS4uLgoJCQlzID0gcy5zbGljZSgxLCAtMSkucmVwbGFjZSgvXFwiL2csICciJykucmVwbGFjZSgvXFxcXC9nLCAnXFwnKTsKCQl9CgoJCXRyeSB7CgkJCS8vIFJlcGxhY2Ugc2VydmVyLXNpZGUgd3JpdHRlbiBwbHVzZXMgd2l0aCBzcGFjZXMuCgkJCS8vIElmIHdlIGNhbid0IGRlY29kZSB0aGUgY29va2llLCBpZ25vcmUgaXQsIGl0J3MgdW51c2FibGUuCgkJCXMgPSBkZWNvZGVVUklDb21wb25lbnQocy5yZXBsYWNlKHBsdXNlcywgJyAnKSk7CgkJfSBjYXRjaChlKSB7CgkJCXJldHVybjsKCQl9CgoJCXRyeSB7CgkJCS8vIElmIHdlIGNhbid0IHBhcnNlIHRoZSBjb29raWUsIGlnbm9yZSBpdCwgaXQncyB1bnVzYWJsZS4KCQkJcmV0dXJuIGNvbmZpZy5qc29uID8gSlNPTi5wYXJzZShzKSA6IHM7CgkJfSBjYXRjaChlKSB7fQoJfQoKCWZ1bmN0aW9uIHJlYWQocywgY29udmVydGVyKSB7CgkJdmFyIHZhbHVlID0gY29uZmlnLnJhdyA/IHMgOiBwYXJzZUNvb2tpZVZhbHVlKHMpOwoJCXJldHVybiAkLmlzRnVuY3Rpb24oY29udmVydGVyKSA/IGNvbnZlcnRlcih2YWx1ZSkgOiB2YWx1ZTsKCX0KCgl2YXIgY29uZmlnID0gJC5jb29raWUgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgb3B0aW9ucykgewoKCQkvLyBXcml0ZQoJCWlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmICEkLmlzRnVuY3Rpb24odmFsdWUpKSB7CgkJCW9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgY29uZmlnLmRlZmF1bHRzLCBvcHRpb25zKTsKCgkJCWlmICh0eXBlb2Ygb3B0aW9ucy5leHBpcmVzID09PSAnbnVtYmVyJykgewoJCQkJdmFyIGRheXMgPSBvcHRpb25zLmV4cGlyZXMsIHQgPSBvcHRpb25zLmV4cGlyZXMgPSBuZXcgRGF0ZSgpOwoJCQkJdC5zZXREYXRlKHQuZ2V0RGF0ZSgpICsgZGF5cyk7CgkJCX0KCgkJCXJldHVybiAoZG9jdW1lbnQuY29va2llID0gWwoJCQkJZW5jb2RlKGtleSksICc9Jywgc3RyaW5naWZ5Q29va2llVmFsdWUodmFsdWUpLAoJCQkJb3B0aW9ucy5leHBpcmVzID8gJzsgZXhwaXJlcz0nICsgb3B0aW9ucy5leHBpcmVzLnRvVVRDU3RyaW5nKCkgOiAnJywgLy8gdXNlIGV4cGlyZXMgYXR0cmlidXRlLCBtYXgtYWdlIGlzIG5vdCBzdXBwb3J0ZWQgYnkgSUUKCQkJCW9wdGlvbnMucGF0aCAgICA/ICc7IHBhdGg9JyArIG9wdGlvbnMucGF0aCA6ICcnLAoJCQkJb3B0aW9ucy5kb21haW4gID8gJzsgZG9tYWluPScgKyBvcHRpb25zLmRvbWFpbiA6ICcnLAoJCQkJb3B0aW9ucy5zZWN1cmUgID8gJzsgc2VjdXJlJyA6ICcnCgkJCV0uam9pbignJykpOwoJCX0KCgkJLy8gUmVhZAoKCQl2YXIgcmVzdWx0ID0ga2V5ID8gdW5kZWZpbmVkIDoge307CgoJCS8vIFRvIHByZXZlbnQgdGhlIGZvciBsb29wIGluIHRoZSBmaXJzdCBwbGFjZSBhc3NpZ24gYW4gZW1wdHkgYXJyYXkKCQkvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC4gQWxzbyBwcmV2ZW50cyBvZGQgcmVzdWx0IHdoZW4KCQkvLyBjYWxsaW5nICQuY29va2llKCkuCgkJdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUgPyBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJykgOiBbXTsKCgkJZm9yICh2YXIgaSA9IDAsIGwgPSBjb29raWVzLmxlbmd0aDsgaSA8IGw7IGkrKykgewoJCQl2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7CgkJCXZhciBuYW1lID0gZGVjb2RlKHBhcnRzLnNoaWZ0KCkpOwoJCQl2YXIgY29va2llID0gcGFydHMuam9pbignPScpOwoKCQkJaWYgKGtleSAmJiBrZXkgPT09IG5hbWUpIHsKCQkJCS8vIElmIHNlY29uZCBhcmd1bWVudCAodmFsdWUpIGlzIGEgZnVuY3Rpb24gaXQncyBhIGNvbnZlcnRlci4uLgoJCQkJcmVzdWx0ID0gcmVhZChjb29raWUsIHZhbHVlKTsKCQkJCWJyZWFrOwoJCQl9CgoJCQkvLyBQcmV2ZW50IHN0b3JpbmcgYSBjb29raWUgdGhhdCB3ZSBjb3VsZG4ndCBkZWNvZGUuCgkJCWlmICgha2V5ICYmIChjb29raWUgPSByZWFkKGNvb2tpZSkpICE9PSB1bmRlZmluZWQpIHsKCQkJCXJlc3VsdFtuYW1lXSA9IGNvb2tpZTsKCQkJfQoJCX0KCgkJcmV0dXJuIHJlc3VsdDsKCX07CgoJY29uZmlnLmRlZmF1bHRzID0ge307CgoJJC5yZW1vdmVDb29raWUgPSBmdW5jdGlvbiAoa2V5LCBvcHRpb25zKSB7CgkJaWYgKCQuY29va2llKGtleSkgIT09IHVuZGVmaW5lZCkgewoJCQkvLyBNdXN0IG5vdCBhbHRlciBvcHRpb25zLCB0aHVzIGV4dGVuZGluZyBhIGZyZXNoIG9iamVjdC4uLgoJCQkkLmNvb2tpZShrZXksICcnLCAkLmV4dGVuZCh7fSwgb3B0aW9ucywgeyBleHBpcmVzOiAtMSB9KSk7CgkJCXJldHVybiB0cnVlOwoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9OwoKfSkpOwo="}]},{"name":"ÁΩëÊòì‰∫ëÈü≥‰πêÁõ¥Êé•‰∏ãËΩΩ","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["126.net","163.com","172.*"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://music.163.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703188,"data":{}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/33046-%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD/code/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD.user.js","uuid":"a2a627fa-a87f-4601-825b-d2d038a1865b","source":"","requires":[{"meta":{"name":"core.min.js","url":"https://cdn.bootcdn.net/ajax/libs/crypto-js/3.1.9/core.min.js","ts":1657118213703,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKHQsbil7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWV4cG9ydHM9bigpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLG4pOnQuQ3J5cHRvSlM9bigpfSh0aGlzLGZ1bmN0aW9uKCl7dmFyIHQ9dHx8ZnVuY3Rpb24odCxuKXt2YXIgaT1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBpO3JldHVybiB0LnByb3RvdHlwZT1uLGk9bmV3IHQsdC5wcm90b3R5cGU9bnVsbCxpfX0oKSxlPXt9LHI9ZS5saWI9e30sbz1yLkJhc2U9ZnVuY3Rpb24oKXtyZXR1cm57ZXh0ZW5kOmZ1bmN0aW9uKHQpe3ZhciBuPWkodGhpcyk7cmV0dXJuIHQmJm4ubWl4SW4odCksbi5oYXNPd25Qcm9wZXJ0eSgiaW5pdCIpJiZ0aGlzLmluaXQhPT1uLmluaXR8fChuLmluaXQ9ZnVuY3Rpb24oKXtuLiRzdXBlci5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLG4uaW5pdC5wcm90b3R5cGU9bixuLiRzdXBlcj10aGlzLG59LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZXh0ZW5kKCk7cmV0dXJuIHQuaW5pdC5hcHBseSh0LGFyZ3VtZW50cyksdH0saW5pdDpmdW5jdGlvbigpe30sbWl4SW46ZnVuY3Rpb24odCl7Zm9yKHZhciBuIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShuKSYmKHRoaXNbbl09dFtuXSk7dC5oYXNPd25Qcm9wZXJ0eSgidG9TdHJpbmciKSYmKHRoaXMudG9TdHJpbmc9dC50b1N0cmluZyl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5pdC5wcm90b3R5cGUuZXh0ZW5kKHRoaXMpfX19KCkscz1yLldvcmRBcnJheT1vLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LGkpe3Q9dGhpcy53b3Jkcz10fHxbXSxpIT1uP3RoaXMuc2lnQnl0ZXM9aTp0aGlzLnNpZ0J5dGVzPTQqdC5sZW5ndGh9LHRvU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybih0fHxjKS5zdHJpbmdpZnkodGhpcyl9LGNvbmNhdDpmdW5jdGlvbih0KXt2YXIgbj10aGlzLndvcmRzLGk9dC53b3JkcyxlPXRoaXMuc2lnQnl0ZXMscj10LnNpZ0J5dGVzO2lmKHRoaXMuY2xhbXAoKSxlJTQpZm9yKHZhciBvPTA7bzxyO28rKyl7dmFyIHM9aVtvPj4+Ml0+Pj4yNC1vJTQqOCYyNTU7bltlK28+Pj4yXXw9czw8MjQtKGUrbyklNCo4fWVsc2UgZm9yKHZhciBvPTA7bzxyO28rPTQpbltlK28+Pj4yXT1pW28+Pj4yXTtyZXR1cm4gdGhpcy5zaWdCeXRlcys9cix0aGlzfSxjbGFtcDpmdW5jdGlvbigpe3ZhciBuPXRoaXMud29yZHMsaT10aGlzLnNpZ0J5dGVzO25baT4+PjJdJj00Mjk0OTY3Mjk1PDwzMi1pJTQqOCxuLmxlbmd0aD10LmNlaWwoaS80KX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQud29yZHM9dGhpcy53b3Jkcy5zbGljZSgwKSx0fSxyYW5kb206ZnVuY3Rpb24obil7Zm9yKHZhciBpLGU9W10scj1mdW5jdGlvbihuKXt2YXIgbj1uLGk9OTg3NjU0MzIxLGU9NDI5NDk2NzI5NTtyZXR1cm4gZnVuY3Rpb24oKXtpPTM2OTY5Kig2NTUzNSZpKSsoaT4+MTYpJmUsbj0xOGUzKig2NTUzNSZuKSsobj4+MTYpJmU7dmFyIHI9KGk8PDE2KStuJmU7cmV0dXJuIHIvPTQyOTQ5NjcyOTYscis9LjUscioodC5yYW5kb20oKT4uNT8xOi0xKX19LG89MDtvPG47bys9NCl7dmFyIGE9cig0Mjk0OTY3Mjk2KihpfHx0LnJhbmRvbSgpKSk7aT05ODc2NTQwNzEqYSgpLGUucHVzaCg0Mjk0OTY3Mjk2KmEoKXwwKX1yZXR1cm4gbmV3IHMuaW5pdChlLG4pfX0pLGE9ZS5lbmM9e30sYz1hLkhleD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10LndvcmRzLGk9dC5zaWdCeXRlcyxlPVtdLHI9MDtyPGk7cisrKXt2YXIgbz1uW3I+Pj4yXT4+PjI0LXIlNCo4JjI1NTtlLnB1c2goKG8+Pj40KS50b1N0cmluZygxNikpLGUucHVzaCgoMTUmbykudG9TdHJpbmcoMTYpKX1yZXR1cm4gZS5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPXQubGVuZ3RoLGk9W10sZT0wO2U8bjtlKz0yKWlbZT4+PjNdfD1wYXJzZUludCh0LnN1YnN0cihlLDIpLDE2KTw8MjQtZSU4KjQ7cmV0dXJuIG5ldyBzLmluaXQoaSxuLzIpfX0sdT1hLkxhdGluMT17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10LndvcmRzLGk9dC5zaWdCeXRlcyxlPVtdLHI9MDtyPGk7cisrKXt2YXIgbz1uW3I+Pj4yXT4+PjI0LXIlNCo4JjI1NTtlLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShvKSl9cmV0dXJuIGUuam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgbj10Lmxlbmd0aCxpPVtdLGU9MDtlPG47ZSsrKWlbZT4+PjJdfD0oMjU1JnQuY2hhckNvZGVBdChlKSk8PDI0LWUlNCo4O3JldHVybiBuZXcgcy5pbml0KGksbil9fSxmPWEuVXRmOD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZSh1LnN0cmluZ2lmeSh0KSkpfWNhdGNoKHQpe3Rocm93IG5ldyBFcnJvcigiTWFsZm9ybWVkIFVURi04IGRhdGEiKX19LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB1LnBhcnNlKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0KSkpfX0saD1yLkJ1ZmZlcmVkQmxvY2tBbGdvcml0aG09by5leHRlbmQoe3Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5fZGF0YT1uZXcgcy5pbml0LHRoaXMuX25EYXRhQnl0ZXM9MH0sX2FwcGVuZDpmdW5jdGlvbih0KXsic3RyaW5nIj09dHlwZW9mIHQmJih0PWYucGFyc2UodCkpLHRoaXMuX2RhdGEuY29uY2F0KHQpLHRoaXMuX25EYXRhQnl0ZXMrPXQuc2lnQnl0ZXN9LF9wcm9jZXNzOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXMuX2RhdGEsZT1pLndvcmRzLHI9aS5zaWdCeXRlcyxvPXRoaXMuYmxvY2tTaXplLGE9NCpvLGM9ci9hO2M9bj90LmNlaWwoYyk6dC5tYXgoKDB8YyktdGhpcy5fbWluQnVmZmVyU2l6ZSwwKTt2YXIgdT1jKm8sZj10Lm1pbig0KnUscik7aWYodSl7Zm9yKHZhciBoPTA7aDx1O2grPW8pdGhpcy5fZG9Qcm9jZXNzQmxvY2soZSxoKTt2YXIgcD1lLnNwbGljZSgwLHUpO2kuc2lnQnl0ZXMtPWZ9cmV0dXJuIG5ldyBzLmluaXQocCxmKX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2RhdGE9dGhpcy5fZGF0YS5jbG9uZSgpLHR9LF9taW5CdWZmZXJTaXplOjB9KSxwPShyLkhhc2hlcj1oLmV4dGVuZCh7Y2ZnOm8uZXh0ZW5kKCksaW5pdDpmdW5jdGlvbih0KXt0aGlzLmNmZz10aGlzLmNmZy5leHRlbmQodCksdGhpcy5yZXNldCgpfSxyZXNldDpmdW5jdGlvbigpe2gucmVzZXQuY2FsbCh0aGlzKSx0aGlzLl9kb1Jlc2V0KCl9LHVwZGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXBwZW5kKHQpLHRoaXMuX3Byb2Nlc3MoKSx0aGlzfSxmaW5hbGl6ZTpmdW5jdGlvbih0KXt0JiZ0aGlzLl9hcHBlbmQodCk7dmFyIG49dGhpcy5fZG9GaW5hbGl6ZSgpO3JldHVybiBufSxibG9ja1NpemU6MTYsX2NyZWF0ZUhlbHBlcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24obixpKXtyZXR1cm4gbmV3IHQuaW5pdChpKS5maW5hbGl6ZShuKX19LF9jcmVhdGVIbWFjSGVscGVyOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuLGkpe3JldHVybiBuZXcgcC5ITUFDLmluaXQodCxpKS5maW5hbGl6ZShuKX19fSksZS5hbGdvPXt9KTtyZXR1cm4gZX0oTWF0aCk7cmV0dXJuIHR9KTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29yZS5taW4uanMubWFw"},{"meta":{"name":"crypto-js.min.js","url":"https://cdn.bootcdn.net/ajax/libs/crypto-js/3.1.9/crypto-js.min.js","ts":1657118213704,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKHQscil7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWV4cG9ydHM9cigpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLHIpOnQuQ3J5cHRvSlM9cigpfSh0aGlzLGZ1bmN0aW9uKCl7dmFyIHQ9dHx8ZnVuY3Rpb24odCxyKXt2YXIgZT1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXt9cmV0dXJuIGZ1bmN0aW9uKHIpe3ZhciBlO3JldHVybiB0LnByb3RvdHlwZT1yLGU9bmV3IHQsdC5wcm90b3R5cGU9bnVsbCxlfX0oKSxpPXt9LG49aS5saWI9e30sbz1uLkJhc2U9ZnVuY3Rpb24oKXtyZXR1cm57ZXh0ZW5kOmZ1bmN0aW9uKHQpe3ZhciByPWUodGhpcyk7cmV0dXJuIHQmJnIubWl4SW4odCksci5oYXNPd25Qcm9wZXJ0eSgiaW5pdCIpJiZ0aGlzLmluaXQhPT1yLmluaXR8fChyLmluaXQ9ZnVuY3Rpb24oKXtyLiRzdXBlci5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLHIuaW5pdC5wcm90b3R5cGU9cixyLiRzdXBlcj10aGlzLHJ9LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZXh0ZW5kKCk7cmV0dXJuIHQuaW5pdC5hcHBseSh0LGFyZ3VtZW50cyksdH0saW5pdDpmdW5jdGlvbigpe30sbWl4SW46ZnVuY3Rpb24odCl7Zm9yKHZhciByIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShyKSYmKHRoaXNbcl09dFtyXSk7dC5oYXNPd25Qcm9wZXJ0eSgidG9TdHJpbmciKSYmKHRoaXMudG9TdHJpbmc9dC50b1N0cmluZyl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5pdC5wcm90b3R5cGUuZXh0ZW5kKHRoaXMpfX19KCkscz1uLldvcmRBcnJheT1vLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LGUpe3Q9dGhpcy53b3Jkcz10fHxbXSxlIT1yP3RoaXMuc2lnQnl0ZXM9ZTp0aGlzLnNpZ0J5dGVzPTQqdC5sZW5ndGh9LHRvU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybih0fHxjKS5zdHJpbmdpZnkodGhpcyl9LGNvbmNhdDpmdW5jdGlvbih0KXt2YXIgcj10aGlzLndvcmRzLGU9dC53b3JkcyxpPXRoaXMuc2lnQnl0ZXMsbj10LnNpZ0J5dGVzO2lmKHRoaXMuY2xhbXAoKSxpJTQpZm9yKHZhciBvPTA7bzxuO28rKyl7dmFyIHM9ZVtvPj4+Ml0+Pj4yNC1vJTQqOCYyNTU7cltpK28+Pj4yXXw9czw8MjQtKGkrbyklNCo4fWVsc2UgZm9yKHZhciBvPTA7bzxuO28rPTQpcltpK28+Pj4yXT1lW28+Pj4yXTtyZXR1cm4gdGhpcy5zaWdCeXRlcys9bix0aGlzfSxjbGFtcDpmdW5jdGlvbigpe3ZhciByPXRoaXMud29yZHMsZT10aGlzLnNpZ0J5dGVzO3JbZT4+PjJdJj00Mjk0OTY3Mjk1PDwzMi1lJTQqOCxyLmxlbmd0aD10LmNlaWwoZS80KX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQud29yZHM9dGhpcy53b3Jkcy5zbGljZSgwKSx0fSxyYW5kb206ZnVuY3Rpb24ocil7Zm9yKHZhciBlLGk9W10sbj1mdW5jdGlvbihyKXt2YXIgcj1yLGU9OTg3NjU0MzIxLGk9NDI5NDk2NzI5NTtyZXR1cm4gZnVuY3Rpb24oKXtlPTM2OTY5Kig2NTUzNSZlKSsoZT4+MTYpJmkscj0xOGUzKig2NTUzNSZyKSsocj4+MTYpJmk7dmFyIG49KGU8PDE2KStyJmk7cmV0dXJuIG4vPTQyOTQ5NjcyOTYsbis9LjUsbioodC5yYW5kb20oKT4uNT8xOi0xKX19LG89MDtvPHI7bys9NCl7dmFyIGE9big0Mjk0OTY3Mjk2KihlfHx0LnJhbmRvbSgpKSk7ZT05ODc2NTQwNzEqYSgpLGkucHVzaCg0Mjk0OTY3Mjk2KmEoKXwwKX1yZXR1cm4gbmV3IHMuaW5pdChpLHIpfX0pLGE9aS5lbmM9e30sYz1hLkhleD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10LndvcmRzLGU9dC5zaWdCeXRlcyxpPVtdLG49MDtuPGU7bisrKXt2YXIgbz1yW24+Pj4yXT4+PjI0LW4lNCo4JjI1NTtpLnB1c2goKG8+Pj40KS50b1N0cmluZygxNikpLGkucHVzaCgoMTUmbykudG9TdHJpbmcoMTYpKX1yZXR1cm4gaS5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24odCl7Zm9yKHZhciByPXQubGVuZ3RoLGU9W10saT0wO2k8cjtpKz0yKWVbaT4+PjNdfD1wYXJzZUludCh0LnN1YnN0cihpLDIpLDE2KTw8MjQtaSU4KjQ7cmV0dXJuIG5ldyBzLmluaXQoZSxyLzIpfX0saD1hLkxhdGluMT17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10LndvcmRzLGU9dC5zaWdCeXRlcyxpPVtdLG49MDtuPGU7bisrKXt2YXIgbz1yW24+Pj4yXT4+PjI0LW4lNCo4JjI1NTtpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShvKSl9cmV0dXJuIGkuam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10Lmxlbmd0aCxlPVtdLGk9MDtpPHI7aSsrKWVbaT4+PjJdfD0oMjU1JnQuY2hhckNvZGVBdChpKSk8PDI0LWklNCo4O3JldHVybiBuZXcgcy5pbml0KGUscil9fSxsPWEuVXRmOD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShoLnN0cmluZ2lmeSh0KSkpfWNhdGNoKHQpe3Rocm93IG5ldyBFcnJvcigiTWFsZm9ybWVkIFVURi04IGRhdGEiKX19LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiBoLnBhcnNlKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudCh0KSkpfX0sZj1uLkJ1ZmZlcmVkQmxvY2tBbGdvcml0aG09by5leHRlbmQoe3Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5fZGF0YT1uZXcgcy5pbml0LHRoaXMuX25EYXRhQnl0ZXM9MH0sX2FwcGVuZDpmdW5jdGlvbih0KXsic3RyaW5nIj09dHlwZW9mIHQmJih0PWwucGFyc2UodCkpLHRoaXMuX2RhdGEuY29uY2F0KHQpLHRoaXMuX25EYXRhQnl0ZXMrPXQuc2lnQnl0ZXN9LF9wcm9jZXNzOmZ1bmN0aW9uKHIpe3ZhciBlPXRoaXMuX2RhdGEsaT1lLndvcmRzLG49ZS5zaWdCeXRlcyxvPXRoaXMuYmxvY2tTaXplLGE9NCpvLGM9bi9hO2M9cj90LmNlaWwoYyk6dC5tYXgoKDB8YyktdGhpcy5fbWluQnVmZmVyU2l6ZSwwKTt2YXIgaD1jKm8sbD10Lm1pbig0Kmgsbik7aWYoaCl7Zm9yKHZhciBmPTA7ZjxoO2YrPW8pdGhpcy5fZG9Qcm9jZXNzQmxvY2soaSxmKTt2YXIgdT1pLnNwbGljZSgwLGgpO2Uuc2lnQnl0ZXMtPWx9cmV0dXJuIG5ldyBzLmluaXQodSxsKX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2RhdGE9dGhpcy5fZGF0YS5jbG9uZSgpLHR9LF9taW5CdWZmZXJTaXplOjB9KSx1PShuLkhhc2hlcj1mLmV4dGVuZCh7Y2ZnOm8uZXh0ZW5kKCksaW5pdDpmdW5jdGlvbih0KXt0aGlzLmNmZz10aGlzLmNmZy5leHRlbmQodCksdGhpcy5yZXNldCgpfSxyZXNldDpmdW5jdGlvbigpe2YucmVzZXQuY2FsbCh0aGlzKSx0aGlzLl9kb1Jlc2V0KCl9LHVwZGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fYXBwZW5kKHQpLHRoaXMuX3Byb2Nlc3MoKSx0aGlzfSxmaW5hbGl6ZTpmdW5jdGlvbih0KXt0JiZ0aGlzLl9hcHBlbmQodCk7dmFyIHI9dGhpcy5fZG9GaW5hbGl6ZSgpO3JldHVybiByfSxibG9ja1NpemU6MTYsX2NyZWF0ZUhlbHBlcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24ocixlKXtyZXR1cm4gbmV3IHQuaW5pdChlKS5maW5hbGl6ZShyKX19LF9jcmVhdGVIbWFjSGVscGVyOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihyLGUpe3JldHVybiBuZXcgdS5ITUFDLmluaXQodCxlKS5maW5hbGl6ZShyKX19fSksaS5hbGdvPXt9KTtyZXR1cm4gaX0oTWF0aCk7cmV0dXJuIGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcih0LHIsZSl7Zm9yKHZhciBpPVtdLG89MCxzPTA7czxyO3MrKylpZihzJTQpe3ZhciBhPWVbdC5jaGFyQ29kZUF0KHMtMSldPDxzJTQqMixjPWVbdC5jaGFyQ29kZUF0KHMpXT4+PjYtcyU0KjI7aVtvPj4+Ml18PShhfGMpPDwyNC1vJTQqOCxvKyt9cmV0dXJuIG4uY3JlYXRlKGksbyl9dmFyIGU9dCxpPWUubGliLG49aS5Xb3JkQXJyYXksbz1lLmVuYztvLkJhc2U2ND17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe3ZhciByPXQud29yZHMsZT10LnNpZ0J5dGVzLGk9dGhpcy5fbWFwO3QuY2xhbXAoKTtmb3IodmFyIG49W10sbz0wO288ZTtvKz0zKWZvcih2YXIgcz1yW28+Pj4yXT4+PjI0LW8lNCo4JjI1NSxhPXJbbysxPj4+Ml0+Pj4yNC0obysxKSU0KjgmMjU1LGM9cltvKzI+Pj4yXT4+PjI0LShvKzIpJTQqOCYyNTUsaD1zPDwxNnxhPDw4fGMsbD0wO2w8NCYmbysuNzUqbDxlO2wrKyluLnB1c2goaS5jaGFyQXQoaD4+PjYqKDMtbCkmNjMpKTt2YXIgZj1pLmNoYXJBdCg2NCk7aWYoZilmb3IoO24ubGVuZ3RoJTQ7KW4ucHVzaChmKTtyZXR1cm4gbi5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGgsaT10aGlzLl9tYXAsbj10aGlzLl9yZXZlcnNlTWFwO2lmKCFuKXtuPXRoaXMuX3JldmVyc2VNYXA9W107Zm9yKHZhciBvPTA7bzxpLmxlbmd0aDtvKyspbltpLmNoYXJDb2RlQXQobyldPW99dmFyIHM9aS5jaGFyQXQoNjQpO2lmKHMpe3ZhciBhPXQuaW5kZXhPZihzKTthIT09LTEmJihlPWEpfXJldHVybiByKHQsZSxuKX0sX21hcDoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0ifX0oKSxmdW5jdGlvbihyKXtmdW5jdGlvbiBlKHQscixlLGksbixvLHMpe3ZhciBhPXQrKHImZXx+ciZpKStuK3M7cmV0dXJuKGE8PG98YT4+PjMyLW8pK3J9ZnVuY3Rpb24gaSh0LHIsZSxpLG4sbyxzKXt2YXIgYT10KyhyJml8ZSZ+aSkrbitzO3JldHVybihhPDxvfGE+Pj4zMi1vKStyfWZ1bmN0aW9uIG4odCxyLGUsaSxuLG8scyl7dmFyIGE9dCsocl5lXmkpK24rcztyZXR1cm4oYTw8b3xhPj4+MzItbykrcn1mdW5jdGlvbiBvKHQscixlLGksbixvLHMpe3ZhciBhPXQrKGVeKHJ8fmkpKStuK3M7cmV0dXJuKGE8PG98YT4+PjMyLW8pK3J9dmFyIHM9dCxhPXMubGliLGM9YS5Xb3JkQXJyYXksaD1hLkhhc2hlcixsPXMuYWxnbyxmPVtdOyFmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8NjQ7dCsrKWZbdF09NDI5NDk2NzI5NipyLmFicyhyLnNpbih0KzEpKXwwfSgpO3ZhciB1PWwuTUQ1PWguZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IGMuaW5pdChbMTczMjU4NDE5Myw0MDIzMjMzNDE3LDI1NjIzODMxMDIsMjcxNzMzODc4XSl9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe2Zvcih2YXIgcz0wO3M8MTY7cysrKXt2YXIgYT1yK3MsYz10W2FdO3RbYV09MTY3MTE5MzUmKGM8PDh8Yz4+PjI0KXw0Mjc4MjU1MzYwJihjPDwyNHxjPj4+OCl9dmFyIGg9dGhpcy5faGFzaC53b3JkcyxsPXRbciswXSx1PXRbcisxXSxkPXRbcisyXSx2PXRbciszXSxwPXRbcis0XSxfPXRbcis1XSx5PXRbcis2XSxnPXRbcis3XSxCPXRbcis4XSx3PXRbcis5XSxrPXRbcisxMF0sUz10W3IrMTFdLG09dFtyKzEyXSx4PXRbcisxM10sYj10W3IrMTRdLEg9dFtyKzE1XSx6PWhbMF0sQT1oWzFdLEM9aFsyXSxEPWhbM107ej1lKHosQSxDLEQsbCw3LGZbMF0pLEQ9ZShELHosQSxDLHUsMTIsZlsxXSksQz1lKEMsRCx6LEEsZCwxNyxmWzJdKSxBPWUoQSxDLEQseix2LDIyLGZbM10pLHo9ZSh6LEEsQyxELHAsNyxmWzRdKSxEPWUoRCx6LEEsQyxfLDEyLGZbNV0pLEM9ZShDLEQseixBLHksMTcsZls2XSksQT1lKEEsQyxELHosZywyMixmWzddKSx6PWUoeixBLEMsRCxCLDcsZls4XSksRD1lKEQseixBLEMsdywxMixmWzldKSxDPWUoQyxELHosQSxrLDE3LGZbMTBdKSxBPWUoQSxDLEQseixTLDIyLGZbMTFdKSx6PWUoeixBLEMsRCxtLDcsZlsxMl0pLEQ9ZShELHosQSxDLHgsMTIsZlsxM10pLEM9ZShDLEQseixBLGIsMTcsZlsxNF0pLEE9ZShBLEMsRCx6LEgsMjIsZlsxNV0pLHo9aSh6LEEsQyxELHUsNSxmWzE2XSksRD1pKEQseixBLEMseSw5LGZbMTddKSxDPWkoQyxELHosQSxTLDE0LGZbMThdKSxBPWkoQSxDLEQseixsLDIwLGZbMTldKSx6PWkoeixBLEMsRCxfLDUsZlsyMF0pLEQ9aShELHosQSxDLGssOSxmWzIxXSksQz1pKEMsRCx6LEEsSCwxNCxmWzIyXSksQT1pKEEsQyxELHoscCwyMCxmWzIzXSksej1pKHosQSxDLEQsdyw1LGZbMjRdKSxEPWkoRCx6LEEsQyxiLDksZlsyNV0pLEM9aShDLEQseixBLHYsMTQsZlsyNl0pLEE9aShBLEMsRCx6LEIsMjAsZlsyN10pLHo9aSh6LEEsQyxELHgsNSxmWzI4XSksRD1pKEQseixBLEMsZCw5LGZbMjldKSxDPWkoQyxELHosQSxnLDE0LGZbMzBdKSxBPWkoQSxDLEQseixtLDIwLGZbMzFdKSx6PW4oeixBLEMsRCxfLDQsZlszMl0pLEQ9bihELHosQSxDLEIsMTEsZlszM10pLEM9bihDLEQseixBLFMsMTYsZlszNF0pLEE9bihBLEMsRCx6LGIsMjMsZlszNV0pLHo9bih6LEEsQyxELHUsNCxmWzM2XSksRD1uKEQseixBLEMscCwxMSxmWzM3XSksQz1uKEMsRCx6LEEsZywxNixmWzM4XSksQT1uKEEsQyxELHosaywyMyxmWzM5XSksej1uKHosQSxDLEQseCw0LGZbNDBdKSxEPW4oRCx6LEEsQyxsLDExLGZbNDFdKSxDPW4oQyxELHosQSx2LDE2LGZbNDJdKSxBPW4oQSxDLEQseix5LDIzLGZbNDNdKSx6PW4oeixBLEMsRCx3LDQsZls0NF0pLEQ9bihELHosQSxDLG0sMTEsZls0NV0pLEM9bihDLEQseixBLEgsMTYsZls0Nl0pLEE9bihBLEMsRCx6LGQsMjMsZls0N10pLHo9byh6LEEsQyxELGwsNixmWzQ4XSksRD1vKEQseixBLEMsZywxMCxmWzQ5XSksQz1vKEMsRCx6LEEsYiwxNSxmWzUwXSksQT1vKEEsQyxELHosXywyMSxmWzUxXSksej1vKHosQSxDLEQsbSw2LGZbNTJdKSxEPW8oRCx6LEEsQyx2LDEwLGZbNTNdKSxDPW8oQyxELHosQSxrLDE1LGZbNTRdKSxBPW8oQSxDLEQseix1LDIxLGZbNTVdKSx6PW8oeixBLEMsRCxCLDYsZls1Nl0pLEQ9byhELHosQSxDLEgsMTAsZls1N10pLEM9byhDLEQseixBLHksMTUsZls1OF0pLEE9byhBLEMsRCx6LHgsMjEsZls1OV0pLHo9byh6LEEsQyxELHAsNixmWzYwXSksRD1vKEQseixBLEMsUywxMCxmWzYxXSksQz1vKEMsRCx6LEEsZCwxNSxmWzYyXSksQT1vKEEsQyxELHosdywyMSxmWzYzXSksaFswXT1oWzBdK3p8MCxoWzFdPWhbMV0rQXwwLGhbMl09aFsyXStDfDAsaFszXT1oWzNdK0R8MH0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kYXRhLGU9dC53b3JkcyxpPTgqdGhpcy5fbkRhdGFCeXRlcyxuPTgqdC5zaWdCeXRlcztlW24+Pj41XXw9MTI4PDwyNC1uJTMyO3ZhciBvPXIuZmxvb3IoaS80Mjk0OTY3Mjk2KSxzPWk7ZVsobis2ND4+Pjk8PDQpKzE1XT0xNjcxMTkzNSYobzw8OHxvPj4+MjQpfDQyNzgyNTUzNjAmKG88PDI0fG8+Pj44KSxlWyhuKzY0Pj4+OTw8NCkrMTRdPTE2NzExOTM1JihzPDw4fHM+Pj4yNCl8NDI3ODI1NTM2MCYoczw8MjR8cz4+PjgpLHQuc2lnQnl0ZXM9NCooZS5sZW5ndGgrMSksdGhpcy5fcHJvY2VzcygpO2Zvcih2YXIgYT10aGlzLl9oYXNoLGM9YS53b3JkcyxoPTA7aDw0O2grKyl7dmFyIGw9Y1toXTtjW2hdPTE2NzExOTM1JihsPDw4fGw+Pj4yNCl8NDI3ODI1NTM2MCYobDw8MjR8bD4+PjgpfXJldHVybiBhfSxjbG9uZTpmdW5jdGlvbigpe3ZhciB0PWguY2xvbmUuY2FsbCh0aGlzKTtyZXR1cm4gdC5faGFzaD10aGlzLl9oYXNoLmNsb25lKCksdH19KTtzLk1ENT1oLl9jcmVhdGVIZWxwZXIodSkscy5IbWFjTUQ1PWguX2NyZWF0ZUhtYWNIZWxwZXIodSl9KE1hdGgpLGZ1bmN0aW9uKCl7dmFyIHI9dCxlPXIubGliLGk9ZS5Xb3JkQXJyYXksbj1lLkhhc2hlcixvPXIuYWxnbyxzPVtdLGE9by5TSEExPW4uZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IGkuaW5pdChbMTczMjU4NDE5Myw0MDIzMjMzNDE3LDI1NjIzODMxMDIsMjcxNzMzODc4LDMyODUzNzc1MjBdKX0sX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQscil7Zm9yKHZhciBlPXRoaXMuX2hhc2gud29yZHMsaT1lWzBdLG49ZVsxXSxvPWVbMl0sYT1lWzNdLGM9ZVs0XSxoPTA7aDw4MDtoKyspe2lmKGg8MTYpc1toXT0wfHRbcitoXTtlbHNle3ZhciBsPXNbaC0zXV5zW2gtOF1ec1toLTE0XV5zW2gtMTZdO3NbaF09bDw8MXxsPj4+MzF9dmFyIGY9KGk8PDV8aT4+PjI3KStjK3NbaF07Zis9aDwyMD8obiZvfH5uJmEpKzE1MTg1MDAyNDk6aDw0MD8obl5vXmEpKzE4NTk3NzUzOTM6aDw2MD8obiZvfG4mYXxvJmEpLTE4OTQwMDc1ODg6KG5eb15hKS04OTk0OTc1MTQsYz1hLGE9byxvPW48PDMwfG4+Pj4yLG49aSxpPWZ9ZVswXT1lWzBdK2l8MCxlWzFdPWVbMV0rbnwwLGVbMl09ZVsyXStvfDAsZVszXT1lWzNdK2F8MCxlWzRdPWVbNF0rY3wwfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2RhdGEscj10LndvcmRzLGU9OCp0aGlzLl9uRGF0YUJ5dGVzLGk9OCp0LnNpZ0J5dGVzO3JldHVybiByW2k+Pj41XXw9MTI4PDwyNC1pJTMyLHJbKGkrNjQ+Pj45PDw0KSsxNF09TWF0aC5mbG9vcihlLzQyOTQ5NjcyOTYpLHJbKGkrNjQ+Pj45PDw0KSsxNV09ZSx0LnNpZ0J5dGVzPTQqci5sZW5ndGgsdGhpcy5fcHJvY2VzcygpLHRoaXMuX2hhc2h9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQ9bi5jbG9uZS5jYWxsKHRoaXMpO3JldHVybiB0Ll9oYXNoPXRoaXMuX2hhc2guY2xvbmUoKSx0fX0pO3IuU0hBMT1uLl9jcmVhdGVIZWxwZXIoYSksci5IbWFjU0hBMT1uLl9jcmVhdGVIbWFjSGVscGVyKGEpfSgpLGZ1bmN0aW9uKHIpe3ZhciBlPXQsaT1lLmxpYixuPWkuV29yZEFycmF5LG89aS5IYXNoZXIscz1lLmFsZ28sYT1bXSxjPVtdOyFmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7Zm9yKHZhciBlPXIuc3FydCh0KSxpPTI7aTw9ZTtpKyspaWYoISh0JWkpKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGUodCl7cmV0dXJuIDQyOTQ5NjcyOTYqKHQtKDB8dCkpfDB9Zm9yKHZhciBpPTIsbj0wO248NjQ7KXQoaSkmJihuPDgmJihhW25dPWUoci5wb3coaSwuNSkpKSxjW25dPWUoci5wb3coaSwxLzMpKSxuKyspLGkrK30oKTt2YXIgaD1bXSxsPXMuU0hBMjU2PW8uZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IG4uaW5pdChhLnNsaWNlKDApKX0sX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQscil7Zm9yKHZhciBlPXRoaXMuX2hhc2gud29yZHMsaT1lWzBdLG49ZVsxXSxvPWVbMl0scz1lWzNdLGE9ZVs0XSxsPWVbNV0sZj1lWzZdLHU9ZVs3XSxkPTA7ZDw2NDtkKyspe2lmKGQ8MTYpaFtkXT0wfHRbcitkXTtlbHNle3ZhciB2PWhbZC0xNV0scD0odjw8MjV8dj4+PjcpXih2PDwxNHx2Pj4+MTgpXnY+Pj4zLF89aFtkLTJdLHk9KF88PDE1fF8+Pj4xNyleKF88PDEzfF8+Pj4xOSleXz4+PjEwO2hbZF09cCtoW2QtN10reStoW2QtMTZdfXZhciBnPWEmbF5+YSZmLEI9aSZuXmkmb15uJm8sdz0oaTw8MzB8aT4+PjIpXihpPDwxOXxpPj4+MTMpXihpPDwxMHxpPj4+MjIpLGs9KGE8PDI2fGE+Pj42KV4oYTw8MjF8YT4+PjExKV4oYTw8N3xhPj4+MjUpLFM9dStrK2crY1tkXStoW2RdLG09dytCO3U9ZixmPWwsbD1hLGE9cytTfDAscz1vLG89bixuPWksaT1TK218MH1lWzBdPWVbMF0raXwwLGVbMV09ZVsxXStufDAsZVsyXT1lWzJdK298MCxlWzNdPWVbM10rc3wwLGVbNF09ZVs0XSthfDAsZVs1XT1lWzVdK2x8MCxlWzZdPWVbNl0rZnwwLGVbN109ZVs3XSt1fDB9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZGF0YSxlPXQud29yZHMsaT04KnRoaXMuX25EYXRhQnl0ZXMsbj04KnQuc2lnQnl0ZXM7cmV0dXJuIGVbbj4+PjVdfD0xMjg8PDI0LW4lMzIsZVsobis2ND4+Pjk8PDQpKzE0XT1yLmZsb29yKGkvNDI5NDk2NzI5NiksZVsobis2ND4+Pjk8PDQpKzE1XT1pLHQuc2lnQnl0ZXM9NCplLmxlbmd0aCx0aGlzLl9wcm9jZXNzKCksdGhpcy5faGFzaH0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1vLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpLHR9fSk7ZS5TSEEyNTY9by5fY3JlYXRlSGVscGVyKGwpLGUuSG1hY1NIQTI1Nj1vLl9jcmVhdGVIbWFjSGVscGVyKGwpfShNYXRoKSxmdW5jdGlvbigpe2Z1bmN0aW9uIHIodCl7cmV0dXJuIHQ8PDgmNDI3ODI1NTM2MHx0Pj4+OCYxNjcxMTkzNX12YXIgZT10LGk9ZS5saWIsbj1pLldvcmRBcnJheSxvPWUuZW5jO28uVXRmMTY9by5VdGYxNkJFPXtzdHJpbmdpZnk6ZnVuY3Rpb24odCl7Zm9yKHZhciByPXQud29yZHMsZT10LnNpZ0J5dGVzLGk9W10sbj0wO248ZTtuKz0yKXt2YXIgbz1yW24+Pj4yXT4+PjE2LW4lNCo4JjY1NTM1O2kucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKG8pKX1yZXR1cm4gaS5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24odCl7Zm9yKHZhciByPXQubGVuZ3RoLGU9W10saT0wO2k8cjtpKyspZVtpPj4+MV18PXQuY2hhckNvZGVBdChpKTw8MTYtaSUyKjE2O3JldHVybiBuLmNyZWF0ZShlLDIqcil9fTtvLlV0ZjE2TEU9e3N0cmluZ2lmeTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC53b3JkcyxpPXQuc2lnQnl0ZXMsbj1bXSxvPTA7bzxpO28rPTIpe3ZhciBzPXIoZVtvPj4+Ml0+Pj4xNi1vJTQqOCY2NTUzNSk7bi5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUocykpfXJldHVybiBuLmpvaW4oIiIpfSxwYXJzZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC5sZW5ndGgsaT1bXSxvPTA7bzxlO28rKylpW28+Pj4xXXw9cih0LmNoYXJDb2RlQXQobyk8PDE2LW8lMioxNik7cmV0dXJuIG4uY3JlYXRlKGksMiplKX19fSgpLGZ1bmN0aW9uKCl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIEFycmF5QnVmZmVyKXt2YXIgcj10LGU9ci5saWIsaT1lLldvcmRBcnJheSxuPWkuaW5pdCxvPWkuaW5pdD1mdW5jdGlvbih0KXtpZih0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXImJih0PW5ldyBVaW50OEFycmF5KHQpKSwodCBpbnN0YW5jZW9mIEludDhBcnJheXx8InVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OENsYW1wZWRBcnJheSYmdCBpbnN0YW5jZW9mIFVpbnQ4Q2xhbXBlZEFycmF5fHx0IGluc3RhbmNlb2YgSW50MTZBcnJheXx8dCBpbnN0YW5jZW9mIFVpbnQxNkFycmF5fHx0IGluc3RhbmNlb2YgSW50MzJBcnJheXx8dCBpbnN0YW5jZW9mIFVpbnQzMkFycmF5fHx0IGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fHx0IGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5KSYmKHQ9bmV3IFVpbnQ4QXJyYXkodC5idWZmZXIsdC5ieXRlT2Zmc2V0LHQuYnl0ZUxlbmd0aCkpLHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KXtmb3IodmFyIHI9dC5ieXRlTGVuZ3RoLGU9W10saT0wO2k8cjtpKyspZVtpPj4+Ml18PXRbaV08PDI0LWklNCo4O24uY2FsbCh0aGlzLGUscil9ZWxzZSBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07by5wcm90b3R5cGU9aX19KCksZnVuY3Rpb24ocil7ZnVuY3Rpb24gZSh0LHIsZSl7cmV0dXJuIHRecl5lfWZ1bmN0aW9uIGkodCxyLGUpe3JldHVybiB0JnJ8fnQmZX1mdW5jdGlvbiBuKHQscixlKXtyZXR1cm4odHx+cileZX1mdW5jdGlvbiBvKHQscixlKXtyZXR1cm4gdCZlfHImfmV9ZnVuY3Rpb24gcyh0LHIsZSl7cmV0dXJuIHReKHJ8fmUpfWZ1bmN0aW9uIGEodCxyKXtyZXR1cm4gdDw8cnx0Pj4+MzItcn12YXIgYz10LGg9Yy5saWIsbD1oLldvcmRBcnJheSxmPWguSGFzaGVyLHU9Yy5hbGdvLGQ9bC5jcmVhdGUoWzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsNyw0LDEzLDEsMTAsNiwxNSwzLDEyLDAsOSw1LDIsMTQsMTEsOCwzLDEwLDE0LDQsOSwxNSw4LDEsMiw3LDAsNiwxMywxMSw1LDEyLDEsOSwxMSwxMCwwLDgsMTIsNCwxMywzLDcsMTUsMTQsNSw2LDIsNCwwLDUsOSw3LDEyLDIsMTAsMTQsMSwzLDgsMTEsNiwxNSwxM10pLHY9bC5jcmVhdGUoWzUsMTQsNywwLDksMiwxMSw0LDEzLDYsMTUsOCwxLDEwLDMsMTIsNiwxMSwzLDcsMCwxMyw1LDEwLDE0LDE1LDgsMTIsNCw5LDEsMiwxNSw1LDEsMyw3LDE0LDYsOSwxMSw4LDEyLDIsMTAsMCw0LDEzLDgsNiw0LDEsMywxMSwxNSwwLDUsMTIsMiwxMyw5LDcsMTAsMTQsMTIsMTUsMTAsNCwxLDUsOCw3LDYsMiwxMywxNCwwLDMsOSwxMV0pLHA9bC5jcmVhdGUoWzExLDE0LDE1LDEyLDUsOCw3LDksMTEsMTMsMTQsMTUsNiw3LDksOCw3LDYsOCwxMywxMSw5LDcsMTUsNywxMiwxNSw5LDExLDcsMTMsMTIsMTEsMTMsNiw3LDE0LDksMTMsMTUsMTQsOCwxMyw2LDUsMTIsNyw1LDExLDEyLDE0LDE1LDE0LDE1LDksOCw5LDE0LDUsNiw4LDYsNSwxMiw5LDE1LDUsMTEsNiw4LDEzLDEyLDUsMTIsMTMsMTQsMTEsOCw1LDZdKSxfPWwuY3JlYXRlKFs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXSkseT1sLmNyZWF0ZShbMCwxNTE4NTAwMjQ5LDE4NTk3NzUzOTMsMjQwMDk1OTcwOCwyODQwODUzODM4XSksZz1sLmNyZWF0ZShbMTM1MjgyOTkyNiwxNTQ4NjAzNjg0LDE4MzYwNzI2OTEsMjA1Mzk5NDIxNywwXSksQj11LlJJUEVNRDE2MD1mLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXt0aGlzLl9oYXNoPWwuY3JlYXRlKFsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxyKXtmb3IodmFyIGM9MDtjPDE2O2MrKyl7dmFyIGg9citjLGw9dFtoXTt0W2hdPTE2NzExOTM1JihsPDw4fGw+Pj4yNCl8NDI3ODI1NTM2MCYobDw8MjR8bD4+PjgpfXZhciBmLHUsQix3LGssUyxtLHgsYixILHo9dGhpcy5faGFzaC53b3JkcyxBPXkud29yZHMsQz1nLndvcmRzLEQ9ZC53b3JkcyxSPXYud29yZHMsRT1wLndvcmRzLE09Xy53b3JkcztTPWY9elswXSxtPXU9elsxXSx4PUI9elsyXSxiPXc9elszXSxIPWs9els0XTtmb3IodmFyIEYsYz0wO2M8ODA7Yys9MSlGPWYrdFtyK0RbY11dfDAsRis9YzwxNj9lKHUsQix3KStBWzBdOmM8MzI/aSh1LEIsdykrQVsxXTpjPDQ4P24odSxCLHcpK0FbMl06Yzw2ND9vKHUsQix3KStBWzNdOnModSxCLHcpK0FbNF0sRnw9MCxGPWEoRixFW2NdKSxGPUYra3wwLGY9ayxrPXcsdz1hKEIsMTApLEI9dSx1PUYsRj1TK3RbcitSW2NdXXwwLEYrPWM8MTY/cyhtLHgsYikrQ1swXTpjPDMyP28obSx4LGIpK0NbMV06Yzw0OD9uKG0seCxiKStDWzJdOmM8NjQ/aShtLHgsYikrQ1szXTplKG0seCxiKStDWzRdLEZ8PTAsRj1hKEYsTVtjXSksRj1GK0h8MCxTPUgsSD1iLGI9YSh4LDEwKSx4PW0sbT1GO0Y9elsxXStCK2J8MCx6WzFdPXpbMl0rdytIfDAselsyXT16WzNdK2srU3wwLHpbM109els0XStmK218MCx6WzRdPXpbMF0rdSt4fDAselswXT1GfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2RhdGEscj10LndvcmRzLGU9OCp0aGlzLl9uRGF0YUJ5dGVzLGk9OCp0LnNpZ0J5dGVzO3JbaT4+PjVdfD0xMjg8PDI0LWklMzIsclsoaSs2ND4+Pjk8PDQpKzE0XT0xNjcxMTkzNSYoZTw8OHxlPj4+MjQpfDQyNzgyNTUzNjAmKGU8PDI0fGU+Pj44KSx0LnNpZ0J5dGVzPTQqKHIubGVuZ3RoKzEpLHRoaXMuX3Byb2Nlc3MoKTtmb3IodmFyIG49dGhpcy5faGFzaCxvPW4ud29yZHMscz0wO3M8NTtzKyspe3ZhciBhPW9bc107b1tzXT0xNjcxMTkzNSYoYTw8OHxhPj4+MjQpfDQyNzgyNTUzNjAmKGE8PDI0fGE+Pj44KX1yZXR1cm4gbn0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1mLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpLHR9fSk7Yy5SSVBFTUQxNjA9Zi5fY3JlYXRlSGVscGVyKEIpLGMuSG1hY1JJUEVNRDE2MD1mLl9jcmVhdGVIbWFjSGVscGVyKEIpfShNYXRoKSxmdW5jdGlvbigpe3ZhciByPXQsZT1yLmxpYixpPWUuQmFzZSxuPXIuZW5jLG89bi5VdGY4LHM9ci5hbGdvO3MuSE1BQz1pLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LHIpe3Q9dGhpcy5faGFzaGVyPW5ldyB0LmluaXQsInN0cmluZyI9PXR5cGVvZiByJiYocj1vLnBhcnNlKHIpKTt2YXIgZT10LmJsb2NrU2l6ZSxpPTQqZTtyLnNpZ0J5dGVzPmkmJihyPXQuZmluYWxpemUocikpLHIuY2xhbXAoKTtmb3IodmFyIG49dGhpcy5fb0tleT1yLmNsb25lKCkscz10aGlzLl9pS2V5PXIuY2xvbmUoKSxhPW4ud29yZHMsYz1zLndvcmRzLGg9MDtoPGU7aCsrKWFbaF1ePTE1NDk1NTY4MjgsY1toXV49OTA5NTIyNDg2O24uc2lnQnl0ZXM9cy5zaWdCeXRlcz1pLHRoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9oYXNoZXI7dC5yZXNldCgpLHQudXBkYXRlKHRoaXMuX2lLZXkpfSx1cGRhdGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2hhc2hlci51cGRhdGUodCksdGhpc30sZmluYWxpemU6ZnVuY3Rpb24odCl7dmFyIHI9dGhpcy5faGFzaGVyLGU9ci5maW5hbGl6ZSh0KTtyLnJlc2V0KCk7dmFyIGk9ci5maW5hbGl6ZSh0aGlzLl9vS2V5LmNsb25lKCkuY29uY2F0KGUpKTtyZXR1cm4gaX19KX0oKSxmdW5jdGlvbigpe3ZhciByPXQsZT1yLmxpYixpPWUuQmFzZSxuPWUuV29yZEFycmF5LG89ci5hbGdvLHM9by5TSEExLGE9by5ITUFDLGM9by5QQktERjI9aS5leHRlbmQoe2NmZzppLmV4dGVuZCh7a2V5U2l6ZTo0LGhhc2hlcjpzLGl0ZXJhdGlvbnM6MX0pLGluaXQ6ZnVuY3Rpb24odCl7dGhpcy5jZmc9dGhpcy5jZmcuZXh0ZW5kKHQpfSxjb21wdXRlOmZ1bmN0aW9uKHQscil7Zm9yKHZhciBlPXRoaXMuY2ZnLGk9YS5jcmVhdGUoZS5oYXNoZXIsdCksbz1uLmNyZWF0ZSgpLHM9bi5jcmVhdGUoWzFdKSxjPW8ud29yZHMsaD1zLndvcmRzLGw9ZS5rZXlTaXplLGY9ZS5pdGVyYXRpb25zO2MubGVuZ3RoPGw7KXt2YXIgdT1pLnVwZGF0ZShyKS5maW5hbGl6ZShzKTtpLnJlc2V0KCk7Zm9yKHZhciBkPXUud29yZHMsdj1kLmxlbmd0aCxwPXUsXz0xO188ZjtfKyspe3A9aS5maW5hbGl6ZShwKSxpLnJlc2V0KCk7Zm9yKHZhciB5PXAud29yZHMsZz0wO2c8djtnKyspZFtnXV49eVtnXX1vLmNvbmNhdCh1KSxoWzBdKyt9cmV0dXJuIG8uc2lnQnl0ZXM9NCpsLG99fSk7ci5QQktERjI9ZnVuY3Rpb24odCxyLGUpe3JldHVybiBjLmNyZWF0ZShlKS5jb21wdXRlKHQscil9fSgpLGZ1bmN0aW9uKCl7dmFyIHI9dCxlPXIubGliLGk9ZS5CYXNlLG49ZS5Xb3JkQXJyYXksbz1yLmFsZ28scz1vLk1ENSxhPW8uRXZwS0RGPWkuZXh0ZW5kKHtjZmc6aS5leHRlbmQoe2tleVNpemU6NCxoYXNoZXI6cyxpdGVyYXRpb25zOjF9KSxpbml0OmZ1bmN0aW9uKHQpe3RoaXMuY2ZnPXRoaXMuY2ZnLmV4dGVuZCh0KX0sY29tcHV0ZTpmdW5jdGlvbih0LHIpe2Zvcih2YXIgZT10aGlzLmNmZyxpPWUuaGFzaGVyLmNyZWF0ZSgpLG89bi5jcmVhdGUoKSxzPW8ud29yZHMsYT1lLmtleVNpemUsYz1lLml0ZXJhdGlvbnM7cy5sZW5ndGg8YTspe2gmJmkudXBkYXRlKGgpO3ZhciBoPWkudXBkYXRlKHQpLmZpbmFsaXplKHIpO2kucmVzZXQoKTtmb3IodmFyIGw9MTtsPGM7bCsrKWg9aS5maW5hbGl6ZShoKSxpLnJlc2V0KCk7by5jb25jYXQoaCl9cmV0dXJuIG8uc2lnQnl0ZXM9NCphLG99fSk7ci5FdnBLREY9ZnVuY3Rpb24odCxyLGUpe3JldHVybiBhLmNyZWF0ZShlKS5jb21wdXRlKHQscil9fSgpLGZ1bmN0aW9uKCl7dmFyIHI9dCxlPXIubGliLGk9ZS5Xb3JkQXJyYXksbj1yLmFsZ28sbz1uLlNIQTI1NixzPW4uU0hBMjI0PW8uZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IGkuaW5pdChbMzIzODM3MTAzMiw5MTQxNTA2NjMsODEyNzAyOTk5LDQxNDQ5MTI2OTcsNDI5MDc3NTg1NywxNzUwNjAzMDI1LDE2OTQwNzY4MzksMzIwNDA3NTQyOF0pfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciB0PW8uX2RvRmluYWxpemUuY2FsbCh0aGlzKTtyZXR1cm4gdC5zaWdCeXRlcy09NCx0fX0pO3IuU0hBMjI0PW8uX2NyZWF0ZUhlbHBlcihzKSxyLkhtYWNTSEEyMjQ9by5fY3JlYXRlSG1hY0hlbHBlcihzKX0oKSxmdW5jdGlvbihyKXt2YXIgZT10LGk9ZS5saWIsbj1pLkJhc2Usbz1pLldvcmRBcnJheSxzPWUueDY0PXt9O3MuV29yZD1uLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LHIpe3RoaXMuaGlnaD10LHRoaXMubG93PXJ9fSkscy5Xb3JkQXJyYXk9bi5leHRlbmQoe2luaXQ6ZnVuY3Rpb24odCxlKXt0PXRoaXMud29yZHM9dHx8W10sZSE9cj90aGlzLnNpZ0J5dGVzPWU6dGhpcy5zaWdCeXRlcz04KnQubGVuZ3RofSx0b1gzMjpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLndvcmRzLHI9dC5sZW5ndGgsZT1bXSxpPTA7aTxyO2krKyl7dmFyIG49dFtpXTtlLnB1c2gobi5oaWdoKSxlLnB1c2gobi5sb3cpfXJldHVybiBvLmNyZWF0ZShlLHRoaXMuc2lnQnl0ZXMpfSxjbG9uZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1uLmNsb25lLmNhbGwodGhpcykscj10LndvcmRzPXRoaXMud29yZHMuc2xpY2UoMCksZT1yLmxlbmd0aCxpPTA7aTxlO2krKylyW2ldPXJbaV0uY2xvbmUoKTtyZXR1cm4gdH19KX0oKSxmdW5jdGlvbihyKXt2YXIgZT10LGk9ZS5saWIsbj1pLldvcmRBcnJheSxvPWkuSGFzaGVyLHM9ZS54NjQsYT1zLldvcmQsYz1lLmFsZ28saD1bXSxsPVtdLGY9W107IWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTEscj0wLGU9MDtlPDI0O2UrKyl7aFt0KzUqcl09KGUrMSkqKGUrMikvMiU2NDt2YXIgaT1yJTUsbj0oMip0KzMqciklNTt0PWkscj1ufWZvcih2YXIgdD0wO3Q8NTt0KyspZm9yKHZhciByPTA7cjw1O3IrKylsW3QrNSpyXT1yKygyKnQrMypyKSU1KjU7Zm9yKHZhciBvPTEscz0wO3M8MjQ7cysrKXtmb3IodmFyIGM9MCx1PTAsZD0wO2Q8NztkKyspe2lmKDEmbyl7dmFyIHY9KDE8PGQpLTE7djwzMj91Xj0xPDx2OmNePTE8PHYtMzJ9MTI4Jm8/bz1vPDwxXjExMzpvPDw9MX1mW3NdPWEuY3JlYXRlKGMsdSl9fSgpO3ZhciB1PVtdOyFmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8MjU7dCsrKXVbdF09YS5jcmVhdGUoKX0oKTt2YXIgZD1jLlNIQTM9by5leHRlbmQoe2NmZzpvLmNmZy5leHRlbmQoe291dHB1dExlbmd0aDo1MTJ9KSxfZG9SZXNldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9zdGF0ZT1bXSxyPTA7cjwyNTtyKyspdFtyXT1uZXcgYS5pbml0O3RoaXMuYmxvY2tTaXplPSgxNjAwLTIqdGhpcy5jZmcub3V0cHV0TGVuZ3RoKS8zMn0sX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQscil7Zm9yKHZhciBlPXRoaXMuX3N0YXRlLGk9dGhpcy5ibG9ja1NpemUvMixuPTA7bjxpO24rKyl7dmFyIG89dFtyKzIqbl0scz10W3IrMipuKzFdO289MTY3MTE5MzUmKG88PDh8bz4+PjI0KXw0Mjc4MjU1MzYwJihvPDwyNHxvPj4+OCkscz0xNjcxMTkzNSYoczw8OHxzPj4+MjQpfDQyNzgyNTUzNjAmKHM8PDI0fHM+Pj44KTt2YXIgYT1lW25dO2EuaGlnaF49cyxhLmxvd149b31mb3IodmFyIGM9MDtjPDI0O2MrKyl7Zm9yKHZhciBkPTA7ZDw1O2QrKyl7Zm9yKHZhciB2PTAscD0wLF89MDtfPDU7XysrKXt2YXIgYT1lW2QrNSpfXTt2Xj1hLmhpZ2gscF49YS5sb3d9dmFyIHk9dVtkXTt5LmhpZ2g9dix5Lmxvdz1wfWZvcih2YXIgZD0wO2Q8NTtkKyspZm9yKHZhciBnPXVbKGQrNCklNV0sQj11WyhkKzEpJTVdLHc9Qi5oaWdoLGs9Qi5sb3csdj1nLmhpZ2heKHc8PDF8az4+PjMxKSxwPWcubG93XihrPDwxfHc+Pj4zMSksXz0wO188NTtfKyspe3ZhciBhPWVbZCs1Kl9dO2EuaGlnaF49dixhLmxvd149cH1mb3IodmFyIFM9MTtTPDI1O1MrKyl7dmFyIGE9ZVtTXSxtPWEuaGlnaCx4PWEubG93LGI9aFtTXTtpZihiPDMyKXZhciB2PW08PGJ8eD4+PjMyLWIscD14PDxifG0+Pj4zMi1iO2Vsc2UgdmFyIHY9eDw8Yi0zMnxtPj4+NjQtYixwPW08PGItMzJ8eD4+PjY0LWI7dmFyIEg9dVtsW1NdXTtILmhpZ2g9dixILmxvdz1wfXZhciB6PXVbMF0sQT1lWzBdO3ouaGlnaD1BLmhpZ2gsei5sb3c9QS5sb3c7Zm9yKHZhciBkPTA7ZDw1O2QrKylmb3IodmFyIF89MDtfPDU7XysrKXt2YXIgUz1kKzUqXyxhPWVbU10sQz11W1NdLEQ9dVsoZCsxKSU1KzUqX10sUj11WyhkKzIpJTUrNSpfXTthLmhpZ2g9Qy5oaWdoXn5ELmhpZ2gmUi5oaWdoLGEubG93PUMubG93Xn5ELmxvdyZSLmxvd312YXIgYT1lWzBdLEU9ZltjXTthLmhpZ2hePUUuaGlnaCxhLmxvd149RS5sb3d9fSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2RhdGEsZT10LndvcmRzLGk9KDgqdGhpcy5fbkRhdGFCeXRlcyw4KnQuc2lnQnl0ZXMpLG89MzIqdGhpcy5ibG9ja1NpemU7ZVtpPj4+NV18PTE8PDI0LWklMzIsZVsoci5jZWlsKChpKzEpL28pKm8+Pj41KS0xXXw9MTI4LHQuc2lnQnl0ZXM9NCplLmxlbmd0aCx0aGlzLl9wcm9jZXNzKCk7Zm9yKHZhciBzPXRoaXMuX3N0YXRlLGE9dGhpcy5jZmcub3V0cHV0TGVuZ3RoLzgsYz1hLzgsaD1bXSxsPTA7bDxjO2wrKyl7dmFyIGY9c1tsXSx1PWYuaGlnaCxkPWYubG93O3U9MTY3MTE5MzUmKHU8PDh8dT4+PjI0KXw0Mjc4MjU1MzYwJih1PDwyNHx1Pj4+OCksZD0xNjcxMTkzNSYoZDw8OHxkPj4+MjQpfDQyNzgyNTUzNjAmKGQ8PDI0fGQ+Pj44KSxoLnB1c2goZCksaC5wdXNoKHUpfXJldHVybiBuZXcgbi5pbml0KGgsYSl9LGNsb25lOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PW8uY2xvbmUuY2FsbCh0aGlzKSxyPXQuX3N0YXRlPXRoaXMuX3N0YXRlLnNsaWNlKDApLGU9MDtlPDI1O2UrKylyW2VdPXJbZV0uY2xvbmUoKTtyZXR1cm4gdH19KTtlLlNIQTM9by5fY3JlYXRlSGVscGVyKGQpLGUuSG1hY1NIQTM9by5fY3JlYXRlSG1hY0hlbHBlcihkKX0oTWF0aCksZnVuY3Rpb24oKXtmdW5jdGlvbiByKCl7cmV0dXJuIHMuY3JlYXRlLmFwcGx5KHMsYXJndW1lbnRzKX12YXIgZT10LGk9ZS5saWIsbj1pLkhhc2hlcixvPWUueDY0LHM9by5Xb3JkLGE9by5Xb3JkQXJyYXksYz1lLmFsZ28saD1bcigxMTE2MzUyNDA4LDM2MDk3Njc0NTgpLHIoMTg5OTQ0NzQ0MSw2MDI4OTE3MjUpLHIoMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5KSxyKDM5MjEwMDk1NzMsMjE3MzI5NTU0OCkscig5NjE5ODcxNjMsNDA4MTYyODQ3MikscigxNTA4OTcwOTkzLDMwNTM4MzQyNjUpLHIoMjQ1MzYzNTc0OCwyOTM3NjcxNTc5KSxyKDI4NzA3NjMyMjEsMzY2NDYwOTU2MCkscigzNjI0MzgxMDgwLDI3MzQ4ODMzOTQpLHIoMzEwNTk4NDAxLDExNjQ5OTY1NDIpLHIoNjA3MjI1Mjc4LDEzMjM2MTA3NjQpLHIoMTQyNjg4MTk4NywzNTkwMzA0OTk0KSxyKDE5MjUwNzgzODgsNDA2ODE4MjM4MykscigyMTYyMDc4MjA2LDk5MTMzNjExMykscigyNjE0ODg4MTAzLDYzMzgwMzMxNykscigzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgpLHIoMzgzNTM5MDQwMSwyNjY2NjEzNDU4KSxyKDQwMjIyMjQ3NzQsOTQ0NzExMTM5KSxyKDI2NDM0NzA3OCwyMzQxMjYyNzczKSxyKDYwNDgwNzYyOCwyMDA3ODAwOTMzKSxyKDc3MDI1NTk4MywxNDk1OTkwOTAxKSxyKDEyNDkxNTAxMjIsMTg1NjQzMTIzNSkscigxNTU1MDgxNjkyLDMxNzUyMTgxMzIpLHIoMTk5NjA2NDk4NiwyMTk4OTUwODM3KSxyKDI1NTQyMjA4ODIsMzk5OTcxOTMzOSkscigyODIxODM0MzQ5LDc2Njc4NDAxNikscigyOTUyOTk2ODA4LDI1NjY1OTQ4NzkpLHIoMzIxMDMxMzY3MSwzMjAzMzM3OTU2KSxyKDMzMzY1NzE4OTEsMTAzNDQ1NzAyNikscigzNTg0NTI4NzExLDI0NjY5NDg5MDEpLHIoMTEzOTI2OTkzLDM3NTgzMjYzODMpLHIoMzM4MjQxODk1LDE2ODcxNzkzNikscig2NjYzMDcyMDUsMTE4ODE3OTk2NCkscig3NzM1Mjk5MTIsMTU0NjA0NTczNCkscigxMjk0NzU3MzcyLDE1MjI4MDU0ODUpLHIoMTM5NjE4MjI5MSwyNjQzODMzODIzKSxyKDE2OTUxODM3MDAsMjM0MzUyNzM5MCkscigxOTg2NjYxMDUxLDEwMTQ0Nzc0ODApLHIoMjE3NzAyNjM1MCwxMjA2NzU5MTQyKSxyKDI0NTY5NTYwMzcsMzQ0MDc3NjI3KSxyKDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCkscigyODIwMzAyNDExLDMxNTg0NTQyNzMpLHIoMzI1OTczMDgwMCwzNTA1OTUyNjU3KSxyKDMzNDU3NjQ3NzEsMTA2MjE3MDA4KSxyKDM1MTYwNjU4MTcsMzYwNjAwODM0NCkscigzNjAwMzUyODA0LDE0MzI3MjU3NzYpLHIoNDA5NDU3MTkwOSwxNDY3MDMxNTk0KSxyKDI3NTQyMzM0NCw4NTExNjk3MjApLHIoNDMwMjI3NzM0LDMxMDA4MjM3NTIpLHIoNTA2OTQ4NjE2LDEzNjMyNTgxOTUpLHIoNjU5MDYwNTU2LDM3NTA2ODU1OTMpLHIoODgzOTk3ODc3LDM3ODUwNTAyODApLHIoOTU4MTM5NTcxLDMzMTgzMDc0MjcpLHIoMTMyMjgyMjIxOCwzODEyNzIzNDAzKSxyKDE1MzcwMDIwNjMsMjAwMzAzNDk5NSkscigxNzQ3ODczNzc5LDM2MDIwMzY4OTkpLHIoMTk1NTU2MjIyMiwxNTc1OTkwMDEyKSxyKDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCkscigyMjI3NzMwNDUyLDI3MTY5MDQzMDYpLHIoMjM2MTg1MjQyNCw0NDI3NzYwNDQpLHIoMjQyODQzNjQ3NCw1OTM2OTgzNDQpLHIoMjc1NjczNDE4NywzNzMzMTEwMjQ5KSxyKDMyMDQwMzE0NzksMjk5OTM1MTU3MykscigzMzI5MzI1Mjk4LDM4MTU5MjA0MjcpLHIoMzM5MTU2OTYxNCwzOTI4MzgzOTAwKSxyKDM1MTUyNjcyNzEsNTY2MjgwNzExKSxyKDM5NDAxODc2MDYsMzQ1NDA2OTUzNCkscig0MTE4NjMwMjcxLDQwMDAyMzk5OTIpLHIoMTE2NDE4NDc0LDE5MTQxMzg1NTQpLHIoMTc0MjkyNDIxLDI3MzEwNTUyNzApLHIoMjg5MzgwMzU2LDMyMDM5OTMwMDYpLHIoNDYwMzkzMjY5LDMyMDYyMDMxNSkscig2ODU0NzE3MzMsNTg3NDk2ODM2KSxyKDg1MjE0Mjk3MSwxMDg2NzkyODUxKSxyKDEwMTcwMzYyOTgsMzY1NTQzMTAwKSxyKDExMjYwMDA1ODAsMjYxODI5NzY3NikscigxMjg4MDMzNDcwLDM0MDk4NTUxNTgpLHIoMTUwMTUwNTk0OCw0MjM0NTA5ODY2KSxyKDE2MDcxNjc5MTUsOTg3MTY3NDY4KSxyKDE4MTY0MDIzMTYsMTI0NjE4OTU5MSldLGw9W107IWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTA7dDw4MDt0KyspbFt0XT1yKCl9KCk7dmFyIGY9Yy5TSEE1MTI9bi5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5faGFzaD1uZXcgYS5pbml0KFtuZXcgcy5pbml0KDE3NzkwMzM3MDMsNDA4OTIzNTcyMCksbmV3IHMuaW5pdCgzMTQ0MTM0Mjc3LDIyMjc4NzM1OTUpLG5ldyBzLmluaXQoMTAxMzkwNDI0Miw0MjcxMTc1NzIzKSxuZXcgcy5pbml0KDI3NzM0ODA3NjIsMTU5NTc1MDEyOSksbmV3IHMuaW5pdCgxMzU5ODkzMTE5LDI5MTc1NjUxMzcpLG5ldyBzLmluaXQoMjYwMDgyMjkyNCw3MjU1MTExOTkpLG5ldyBzLmluaXQoNTI4NzM0NjM1LDQyMTUzODk1NDcpLG5ldyBzLmluaXQoMTU0MTQ1OTIyNSwzMjcwMzMyMDkpXSl9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe2Zvcih2YXIgZT10aGlzLl9oYXNoLndvcmRzLGk9ZVswXSxuPWVbMV0sbz1lWzJdLHM9ZVszXSxhPWVbNF0sYz1lWzVdLGY9ZVs2XSx1PWVbN10sZD1pLmhpZ2gsdj1pLmxvdyxwPW4uaGlnaCxfPW4ubG93LHk9by5oaWdoLGc9by5sb3csQj1zLmhpZ2gsdz1zLmxvdyxrPWEuaGlnaCxTPWEubG93LG09Yy5oaWdoLHg9Yy5sb3csYj1mLmhpZ2gsSD1mLmxvdyx6PXUuaGlnaCxBPXUubG93LEM9ZCxEPXYsUj1wLEU9XyxNPXksRj1nLFA9QixXPXcsTz1rLFU9UyxJPW0sSz14LFg9YixMPUgsaj16LE49QSxUPTA7VDw4MDtUKyspe3ZhciBaPWxbVF07aWYoVDwxNil2YXIgcT1aLmhpZ2g9MHx0W3IrMipUXSxHPVoubG93PTB8dFtyKzIqVCsxXTtlbHNle3ZhciBKPWxbVC0xNV0sJD1KLmhpZ2gsUT1KLmxvdyxWPSgkPj4+MXxRPDwzMSleKCQ+Pj44fFE8PDI0KV4kPj4+NyxZPShRPj4+MXwkPDwzMSleKFE+Pj44fCQ8PDI0KV4oUT4+Pjd8JDw8MjUpLHR0PWxbVC0yXSxydD10dC5oaWdoLGV0PXR0LmxvdyxpdD0ocnQ+Pj4xOXxldDw8MTMpXihydDw8M3xldD4+PjI5KV5ydD4+PjYsbnQ9KGV0Pj4+MTl8cnQ8PDEzKV4oZXQ8PDN8cnQ+Pj4yOSleKGV0Pj4+NnxydDw8MjYpLG90PWxbVC03XSxzdD1vdC5oaWdoLGF0PW90LmxvdyxjdD1sW1QtMTZdLGh0PWN0LmhpZ2gsbHQ9Y3QubG93LEc9WSthdCxxPVYrc3QrKEc+Pj4wPFk+Pj4wPzE6MCksRz1HK250LHE9cStpdCsoRz4+PjA8bnQ+Pj4wPzE6MCksRz1HK2x0LHE9cStodCsoRz4+PjA8bHQ+Pj4wPzE6MCk7Wi5oaWdoPXEsWi5sb3c9R312YXIgZnQ9TyZJXn5PJlgsdXQ9VSZLXn5VJkwsZHQ9QyZSXkMmTV5SJk0sdnQ9RCZFXkQmRl5FJkYscHQ9KEM+Pj4yOHxEPDw0KV4oQzw8MzB8RD4+PjIpXihDPDwyNXxEPj4+NyksX3Q9KEQ+Pj4yOHxDPDw0KV4oRDw8MzB8Qz4+PjIpXihEPDwyNXxDPj4+NykseXQ9KE8+Pj4xNHxVPDwxOCleKE8+Pj4xOHxVPDwxNCleKE88PDIzfFU+Pj45KSxndD0oVT4+PjE0fE88PDE4KV4oVT4+PjE4fE88PDE0KV4oVTw8MjN8Tz4+PjkpLEJ0PWhbVF0sd3Q9QnQuaGlnaCxrdD1CdC5sb3csU3Q9TitndCxtdD1qK3l0KyhTdD4+PjA8Tj4+PjA/MTowKSxTdD1TdCt1dCxtdD1tdCtmdCsoU3Q+Pj4wPHV0Pj4+MD8xOjApLFN0PVN0K2t0LG10PW10K3d0KyhTdD4+PjA8a3Q+Pj4wPzE6MCksU3Q9U3QrRyxtdD1tdCtxKyhTdD4+PjA8Rz4+PjA/MTowKSx4dD1fdCt2dCxidD1wdCtkdCsoeHQ+Pj4wPF90Pj4+MD8xOjApO2o9WCxOPUwsWD1JLEw9SyxJPU8sSz1VLFU9VytTdHwwLE89UCttdCsoVT4+PjA8Vz4+PjA/MTowKXwwLFA9TSxXPUYsTT1SLEY9RSxSPUMsRT1ELEQ9U3QreHR8MCxDPW10K2J0KyhEPj4+MDxTdD4+PjA/MTowKXwwfXY9aS5sb3c9ditELGkuaGlnaD1kK0MrKHY+Pj4wPEQ+Pj4wPzE6MCksXz1uLmxvdz1fK0Usbi5oaWdoPXArUisoXz4+PjA8RT4+PjA/MTowKSxnPW8ubG93PWcrRixvLmhpZ2g9eStNKyhnPj4+MDxGPj4+MD8xOjApLHc9cy5sb3c9dytXLHMuaGlnaD1CK1ArKHc+Pj4wPFc+Pj4wPzE6MCksUz1hLmxvdz1TK1UsYS5oaWdoPWsrTysoUz4+PjA8VT4+PjA/MTowKSx4PWMubG93PXgrSyxjLmhpZ2g9bStJKyh4Pj4+MDxLPj4+MD8xOjApLEg9Zi5sb3c9SCtMLGYuaGlnaD1iK1grKEg+Pj4wPEw+Pj4wPzE6MCksQT11Lmxvdz1BK04sdS5oaWdoPXoraisoQT4+PjA8Tj4+PjA/MTowKX0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kYXRhLHI9dC53b3JkcyxlPTgqdGhpcy5fbkRhdGFCeXRlcyxpPTgqdC5zaWdCeXRlcztyW2k+Pj41XXw9MTI4PDwyNC1pJTMyLHJbKGkrMTI4Pj4+MTA8PDUpKzMwXT1NYXRoLmZsb29yKGUvNDI5NDk2NzI5NiksclsoaSsxMjg+Pj4xMDw8NSkrMzFdPWUsdC5zaWdCeXRlcz00KnIubGVuZ3RoLHRoaXMuX3Byb2Nlc3MoKTt2YXIgbj10aGlzLl9oYXNoLnRvWDMyKCk7cmV0dXJuIG59LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQ9bi5jbG9uZS5jYWxsKHRoaXMpO3JldHVybiB0Ll9oYXNoPXRoaXMuX2hhc2guY2xvbmUoKSx0fSxibG9ja1NpemU6MzJ9KTtlLlNIQTUxMj1uLl9jcmVhdGVIZWxwZXIoZiksZS5IbWFjU0hBNTEyPW4uX2NyZWF0ZUhtYWNIZWxwZXIoZil9KCksZnVuY3Rpb24oKXt2YXIgcj10LGU9ci54NjQsaT1lLldvcmQsbj1lLldvcmRBcnJheSxvPXIuYWxnbyxzPW8uU0hBNTEyLGE9by5TSEEzODQ9cy5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5faGFzaD1uZXcgbi5pbml0KFtuZXcgaS5pbml0KDM0MTgwNzAzNjUsMzIzODM3MTAzMiksbmV3IGkuaW5pdCgxNjU0MjcwMjUwLDkxNDE1MDY2MyksbmV3IGkuaW5pdCgyNDM4NTI5MzcwLDgxMjcwMjk5OSksbmV3IGkuaW5pdCgzNTU0NjIzNjAsNDE0NDkxMjY5NyksbmV3IGkuaW5pdCgxNzMxNDA1NDE1LDQyOTA3NzU4NTcpLG5ldyBpLmluaXQoMjM5NDE4MDIzMSwxNzUwNjAzMDI1KSxuZXcgaS5pbml0KDM2NzUwMDg1MjUsMTY5NDA3NjgzOSksbmV3IGkuaW5pdCgxMjAzMDYyODEzLDMyMDQwNzU0MjgpXSl9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9cy5fZG9GaW5hbGl6ZS5jYWxsKHRoaXMpO3JldHVybiB0LnNpZ0J5dGVzLT0xNix0fX0pO3IuU0hBMzg0PXMuX2NyZWF0ZUhlbHBlcihhKSxyLkhtYWNTSEEzODQ9cy5fY3JlYXRlSG1hY0hlbHBlcihhKX0oKSx0LmxpYi5DaXBoZXJ8fGZ1bmN0aW9uKHIpe3ZhciBlPXQsaT1lLmxpYixuPWkuQmFzZSxvPWkuV29yZEFycmF5LHM9aS5CdWZmZXJlZEJsb2NrQWxnb3JpdGhtLGE9ZS5lbmMsYz0oYS5VdGY4LGEuQmFzZTY0KSxoPWUuYWxnbyxsPWguRXZwS0RGLGY9aS5DaXBoZXI9cy5leHRlbmQoe2NmZzpuLmV4dGVuZCgpLGNyZWF0ZUVuY3J5cHRvcjpmdW5jdGlvbih0LHIpe3JldHVybiB0aGlzLmNyZWF0ZSh0aGlzLl9FTkNfWEZPUk1fTU9ERSx0LHIpfSxjcmVhdGVEZWNyeXB0b3I6ZnVuY3Rpb24odCxyKXtyZXR1cm4gdGhpcy5jcmVhdGUodGhpcy5fREVDX1hGT1JNX01PREUsdCxyKX0saW5pdDpmdW5jdGlvbih0LHIsZSl7dGhpcy5jZmc9dGhpcy5jZmcuZXh0ZW5kKGUpLHRoaXMuX3hmb3JtTW9kZT10LHRoaXMuX2tleT1yLHRoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXtzLnJlc2V0LmNhbGwodGhpcyksdGhpcy5fZG9SZXNldCgpfSxwcm9jZXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9hcHBlbmQodCksdGhpcy5fcHJvY2VzcygpfSxmaW5hbGl6ZTpmdW5jdGlvbih0KXt0JiZ0aGlzLl9hcHBlbmQodCk7dmFyIHI9dGhpcy5fZG9GaW5hbGl6ZSgpO3JldHVybiByfSxrZXlTaXplOjQsaXZTaXplOjQsX0VOQ19YRk9STV9NT0RFOjEsX0RFQ19YRk9STV9NT0RFOjIsX2NyZWF0ZUhlbHBlcjpmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P206d31yZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJue2VuY3J5cHQ6ZnVuY3Rpb24oZSxpLG4pe3JldHVybiB0KGkpLmVuY3J5cHQocixlLGksbil9LGRlY3J5cHQ6ZnVuY3Rpb24oZSxpLG4pe3JldHVybiB0KGkpLmRlY3J5cHQocixlLGksbil9fX19KCl9KSx1PShpLlN0cmVhbUNpcGhlcj1mLmV4dGVuZCh7X2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9wcm9jZXNzKCEwKTtyZXR1cm4gdH0sYmxvY2tTaXplOjF9KSxlLm1vZGU9e30pLGQ9aS5CbG9ja0NpcGhlck1vZGU9bi5leHRlbmQoe2NyZWF0ZUVuY3J5cHRvcjpmdW5jdGlvbih0LHIpe3JldHVybiB0aGlzLkVuY3J5cHRvci5jcmVhdGUodCxyKX0sY3JlYXRlRGVjcnlwdG9yOmZ1bmN0aW9uKHQscil7cmV0dXJuIHRoaXMuRGVjcnlwdG9yLmNyZWF0ZSh0LHIpfSxpbml0OmZ1bmN0aW9uKHQscil7dGhpcy5fY2lwaGVyPXQsdGhpcy5faXY9cn19KSx2PXUuQ0JDPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsaSl7dmFyIG49dGhpcy5faXY7aWYobil7dmFyIG89bjt0aGlzLl9pdj1yfWVsc2UgdmFyIG89dGhpcy5fcHJldkJsb2NrO2Zvcih2YXIgcz0wO3M8aTtzKyspdFtlK3NdXj1vW3NdfXZhciBlPWQuZXh0ZW5kKCk7cmV0dXJuIGUuRW5jcnlwdG9yPWUuZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24ocixlKXt2YXIgaT10aGlzLl9jaXBoZXIsbj1pLmJsb2NrU2l6ZTt0LmNhbGwodGhpcyxyLGUsbiksaS5lbmNyeXB0QmxvY2socixlKSx0aGlzLl9wcmV2QmxvY2s9ci5zbGljZShlLGUrbil9fSksZS5EZWNyeXB0b3I9ZS5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbihyLGUpe3ZhciBpPXRoaXMuX2NpcGhlcixuPWkuYmxvY2tTaXplLG89ci5zbGljZShlLGUrbik7aS5kZWNyeXB0QmxvY2socixlKSx0LmNhbGwodGhpcyxyLGUsbiksdGhpcy5fcHJldkJsb2NrPW99fSksZX0oKSxwPWUucGFkPXt9LF89cC5Qa2NzNz17cGFkOmZ1bmN0aW9uKHQscil7Zm9yKHZhciBlPTQqcixpPWUtdC5zaWdCeXRlcyVlLG49aTw8MjR8aTw8MTZ8aTw8OHxpLHM9W10sYT0wO2E8aTthKz00KXMucHVzaChuKTt2YXIgYz1vLmNyZWF0ZShzLGkpO3QuY29uY2F0KGMpfSx1bnBhZDpmdW5jdGlvbih0KXt2YXIgcj0yNTUmdC53b3Jkc1t0LnNpZ0J5dGVzLTE+Pj4yXTt0LnNpZ0J5dGVzLT1yfX0seT0oaS5CbG9ja0NpcGhlcj1mLmV4dGVuZCh7Y2ZnOmYuY2ZnLmV4dGVuZCh7bW9kZTp2LHBhZGRpbmc6X30pLHJlc2V0OmZ1bmN0aW9uKCl7Zi5yZXNldC5jYWxsKHRoaXMpO3ZhciB0PXRoaXMuY2ZnLHI9dC5pdixlPXQubW9kZTtpZih0aGlzLl94Zm9ybU1vZGU9PXRoaXMuX0VOQ19YRk9STV9NT0RFKXZhciBpPWUuY3JlYXRlRW5jcnlwdG9yO2Vsc2V7dmFyIGk9ZS5jcmVhdGVEZWNyeXB0b3I7dGhpcy5fbWluQnVmZmVyU2l6ZT0xfXRoaXMuX21vZGUmJnRoaXMuX21vZGUuX19jcmVhdG9yPT1pP3RoaXMuX21vZGUuaW5pdCh0aGlzLHImJnIud29yZHMpOih0aGlzLl9tb2RlPWkuY2FsbChlLHRoaXMsciYmci53b3JkcyksdGhpcy5fbW9kZS5fX2NyZWF0b3I9aSl9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe3RoaXMuX21vZGUucHJvY2Vzc0Jsb2NrKHQscil9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jZmcucGFkZGluZztpZih0aGlzLl94Zm9ybU1vZGU9PXRoaXMuX0VOQ19YRk9STV9NT0RFKXt0LnBhZCh0aGlzLl9kYXRhLHRoaXMuYmxvY2tTaXplKTt2YXIgcj10aGlzLl9wcm9jZXNzKCEwKX1lbHNle3ZhciByPXRoaXMuX3Byb2Nlc3MoITApO3QudW5wYWQocil9cmV0dXJuIHJ9LGJsb2NrU2l6ZTo0fSksaS5DaXBoZXJQYXJhbXM9bi5leHRlbmQoe2luaXQ6ZnVuY3Rpb24odCl7dGhpcy5taXhJbih0KX0sdG9TdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuKHR8fHRoaXMuZm9ybWF0dGVyKS5zdHJpbmdpZnkodGhpcyl9fSkpLGc9ZS5mb3JtYXQ9e30sQj1nLk9wZW5TU0w9e3N0cmluZ2lmeTpmdW5jdGlvbih0KXt2YXIgcj10LmNpcGhlcnRleHQsZT10LnNhbHQ7aWYoZSl2YXIgaT1vLmNyZWF0ZShbMTM5ODg5MzY4NCwxNzAxMDc2ODMxXSkuY29uY2F0KGUpLmNvbmNhdChyKTtlbHNlIHZhciBpPXI7cmV0dXJuIGkudG9TdHJpbmcoYyl9LHBhcnNlOmZ1bmN0aW9uKHQpe3ZhciByPWMucGFyc2UodCksZT1yLndvcmRzO2lmKDEzOTg4OTM2ODQ9PWVbMF0mJjE3MDEwNzY4MzE9PWVbMV0pe3ZhciBpPW8uY3JlYXRlKGUuc2xpY2UoMiw0KSk7ZS5zcGxpY2UoMCw0KSxyLnNpZ0J5dGVzLT0xNn1yZXR1cm4geS5jcmVhdGUoe2NpcGhlcnRleHQ6cixzYWx0Oml9KX19LHc9aS5TZXJpYWxpemFibGVDaXBoZXI9bi5leHRlbmQoe2NmZzpuLmV4dGVuZCh7Zm9ybWF0OkJ9KSxlbmNyeXB0OmZ1bmN0aW9uKHQscixlLGkpe2k9dGhpcy5jZmcuZXh0ZW5kKGkpO3ZhciBuPXQuY3JlYXRlRW5jcnlwdG9yKGUsaSksbz1uLmZpbmFsaXplKHIpLHM9bi5jZmc7cmV0dXJuIHkuY3JlYXRlKHtjaXBoZXJ0ZXh0Om8sa2V5OmUsaXY6cy5pdixhbGdvcml0aG06dCxtb2RlOnMubW9kZSxwYWRkaW5nOnMucGFkZGluZyxibG9ja1NpemU6dC5ibG9ja1NpemUsZm9ybWF0dGVyOmkuZm9ybWF0fSl9LGRlY3J5cHQ6ZnVuY3Rpb24odCxyLGUsaSl7aT10aGlzLmNmZy5leHRlbmQoaSkscj10aGlzLl9wYXJzZShyLGkuZm9ybWF0KTt2YXIgbj10LmNyZWF0ZURlY3J5cHRvcihlLGkpLmZpbmFsaXplKHIuY2lwaGVydGV4dCk7cmV0dXJuIG59LF9wYXJzZTpmdW5jdGlvbih0LHIpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD9yLnBhcnNlKHQsdGhpcyk6dH19KSxrPWUua2RmPXt9LFM9ay5PcGVuU1NMPXtleGVjdXRlOmZ1bmN0aW9uKHQscixlLGkpe2l8fChpPW8ucmFuZG9tKDgpKTt2YXIgbj1sLmNyZWF0ZSh7a2V5U2l6ZTpyK2V9KS5jb21wdXRlKHQsaSkscz1vLmNyZWF0ZShuLndvcmRzLnNsaWNlKHIpLDQqZSk7cmV0dXJuIG4uc2lnQnl0ZXM9NCpyLHkuY3JlYXRlKHtrZXk6bixpdjpzLHNhbHQ6aX0pfX0sbT1pLlBhc3N3b3JkQmFzZWRDaXBoZXI9dy5leHRlbmQoe2NmZzp3LmNmZy5leHRlbmQoe2tkZjpTfSksZW5jcnlwdDpmdW5jdGlvbih0LHIsZSxpKXtpPXRoaXMuY2ZnLmV4dGVuZChpKTt2YXIgbj1pLmtkZi5leGVjdXRlKGUsdC5rZXlTaXplLHQuaXZTaXplKTtpLml2PW4uaXY7dmFyIG89dy5lbmNyeXB0LmNhbGwodGhpcyx0LHIsbi5rZXksaSk7cmV0dXJuIG8ubWl4SW4obiksb30sZGVjcnlwdDpmdW5jdGlvbih0LHIsZSxpKXtpPXRoaXMuY2ZnLmV4dGVuZChpKSxyPXRoaXMuX3BhcnNlKHIsaS5mb3JtYXQpO3ZhciBuPWkua2RmLmV4ZWN1dGUoZSx0LmtleVNpemUsdC5pdlNpemUsci5zYWx0KTtpLml2PW4uaXY7dmFyIG89dy5kZWNyeXB0LmNhbGwodGhpcyx0LHIsbi5rZXksaSk7cmV0dXJuIG99fSl9KCksdC5tb2RlLkNGQj1mdW5jdGlvbigpe2Z1bmN0aW9uIHIodCxyLGUsaSl7dmFyIG49dGhpcy5faXY7aWYobil7dmFyIG89bi5zbGljZSgwKTt0aGlzLl9pdj12b2lkIDB9ZWxzZSB2YXIgbz10aGlzLl9wcmV2QmxvY2s7aS5lbmNyeXB0QmxvY2sobywwKTtmb3IodmFyIHM9MDtzPGU7cysrKXRbcitzXV49b1tzXX12YXIgZT10LmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCk7cmV0dXJuIGUuRW5jcnlwdG9yPWUuZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9jaXBoZXIsbj1pLmJsb2NrU2l6ZTtyLmNhbGwodGhpcyx0LGUsbixpKSx0aGlzLl9wcmV2QmxvY2s9dC5zbGljZShlLGUrbil9fSksZS5EZWNyeXB0b3I9ZS5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMuX2NpcGhlcixuPWkuYmxvY2tTaXplLG89dC5zbGljZShlLGUrbik7ci5jYWxsKHRoaXMsdCxlLG4saSksdGhpcy5fcHJldkJsb2NrPW99fSksZX0oKSx0Lm1vZGUuRUNCPWZ1bmN0aW9uKCl7dmFyIHI9dC5saWIuQmxvY2tDaXBoZXJNb2RlLmV4dGVuZCgpO3JldHVybiByLkVuY3J5cHRvcj1yLmV4dGVuZCh7cHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQscil7dGhpcy5fY2lwaGVyLmVuY3J5cHRCbG9jayh0LHIpfX0pLHIuRGVjcnlwdG9yPXIuZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxyKXt0aGlzLl9jaXBoZXIuZGVjcnlwdEJsb2NrKHQscil9fSkscn0oKSx0LnBhZC5BbnNpWDkyMz17cGFkOmZ1bmN0aW9uKHQscil7dmFyIGU9dC5zaWdCeXRlcyxpPTQqcixuPWktZSVpLG89ZStuLTE7dC5jbGFtcCgpLHQud29yZHNbbz4+PjJdfD1uPDwyNC1vJTQqOCx0LnNpZ0J5dGVzKz1ufSx1bnBhZDpmdW5jdGlvbih0KXt2YXIgcj0yNTUmdC53b3Jkc1t0LnNpZ0J5dGVzLTE+Pj4yXTt0LnNpZ0J5dGVzLT1yfX0sdC5wYWQuSXNvMTAxMjY9e3BhZDpmdW5jdGlvbihyLGUpe3ZhciBpPTQqZSxuPWktci5zaWdCeXRlcyVpO3IuY29uY2F0KHQubGliLldvcmRBcnJheS5yYW5kb20obi0xKSkuY29uY2F0KHQubGliLldvcmRBcnJheS5jcmVhdGUoW248PDI0XSwxKSl9LHVucGFkOmZ1bmN0aW9uKHQpe3ZhciByPTI1NSZ0LndvcmRzW3Quc2lnQnl0ZXMtMT4+PjJdO3Quc2lnQnl0ZXMtPXJ9fSx0LnBhZC5Jc285Nzk3MT17cGFkOmZ1bmN0aW9uKHIsZSl7ci5jb25jYXQodC5saWIuV29yZEFycmF5LmNyZWF0ZShbMjE0NzQ4MzY0OF0sMSkpLHQucGFkLlplcm9QYWRkaW5nLnBhZChyLGUpfSx1bnBhZDpmdW5jdGlvbihyKXt0LnBhZC5aZXJvUGFkZGluZy51bnBhZChyKSxyLnNpZ0J5dGVzLS19fSx0Lm1vZGUuT0ZCPWZ1bmN0aW9uKCl7dmFyIHI9dC5saWIuQmxvY2tDaXBoZXJNb2RlLmV4dGVuZCgpLGU9ci5FbmNyeXB0b3I9ci5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe3ZhciBlPXRoaXMuX2NpcGhlcixpPWUuYmxvY2tTaXplLG49dGhpcy5faXYsbz10aGlzLl9rZXlzdHJlYW07biYmKG89dGhpcy5fa2V5c3RyZWFtPW4uc2xpY2UoMCksdGhpcy5faXY9dm9pZCAwKSxlLmVuY3J5cHRCbG9jayhvLDApO2Zvcih2YXIgcz0wO3M8aTtzKyspdFtyK3NdXj1vW3NdfX0pO3JldHVybiByLkRlY3J5cHRvcj1lLHJ9KCksdC5wYWQuTm9QYWRkaW5nPXtwYWQ6ZnVuY3Rpb24oKXt9LHVucGFkOmZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24ocil7dmFyIGU9dCxpPWUubGliLG49aS5DaXBoZXJQYXJhbXMsbz1lLmVuYyxzPW8uSGV4LGE9ZS5mb3JtYXQ7YS5IZXg9e3N0cmluZ2lmeTpmdW5jdGlvbih0KXtyZXR1cm4gdC5jaXBoZXJ0ZXh0LnRvU3RyaW5nKHMpfSxwYXJzZTpmdW5jdGlvbih0KXt2YXIgcj1zLnBhcnNlKHQpO3JldHVybiBuLmNyZWF0ZSh7Y2lwaGVydGV4dDpyfSl9fX0oKSxmdW5jdGlvbigpe3ZhciByPXQsZT1yLmxpYixpPWUuQmxvY2tDaXBoZXIsbj1yLmFsZ28sbz1bXSxzPVtdLGE9W10sYz1bXSxoPVtdLGw9W10sZj1bXSx1PVtdLGQ9W10sdj1bXTshZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10scj0wO3I8MjU2O3IrKylyPDEyOD90W3JdPXI8PDE6dFtyXT1yPDwxXjI4Mztmb3IodmFyIGU9MCxpPTAscj0wO3I8MjU2O3IrKyl7dmFyIG49aV5pPDwxXmk8PDJeaTw8M15pPDw0O249bj4+PjheMjU1Jm5eOTksb1tlXT1uLHNbbl09ZTt2YXIgcD10W2VdLF89dFtwXSx5PXRbX10sZz0yNTcqdFtuXV4xNjg0MzAwOCpuO2FbZV09Zzw8MjR8Zz4+PjgsY1tlXT1nPDwxNnxnPj4+MTYsaFtlXT1nPDw4fGc+Pj4yNCxsW2VdPWc7dmFyIGc9MTY4NDMwMDkqeV42NTUzNypfXjI1NypwXjE2ODQzMDA4KmU7ZltuXT1nPDwyNHxnPj4+OCx1W25dPWc8PDE2fGc+Pj4xNixkW25dPWc8PDh8Zz4+PjI0LHZbbl09ZyxlPyhlPXBedFt0W3RbeV5wXV1dLGlePXRbdFtpXV0pOmU9aT0xfX0oKTt2YXIgcD1bMCwxLDIsNCw4LDE2LDMyLDY0LDEyOCwyNyw1NF0sXz1uLkFFUz1pLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXtpZighdGhpcy5fblJvdW5kc3x8dGhpcy5fa2V5UHJpb3JSZXNldCE9PXRoaXMuX2tleSl7Zm9yKHZhciB0PXRoaXMuX2tleVByaW9yUmVzZXQ9dGhpcy5fa2V5LHI9dC53b3JkcyxlPXQuc2lnQnl0ZXMvNCxpPXRoaXMuX25Sb3VuZHM9ZSs2LG49NCooaSsxKSxzPXRoaXMuX2tleVNjaGVkdWxlPVtdLGE9MDthPG47YSsrKWlmKGE8ZSlzW2FdPXJbYV07ZWxzZXt2YXIgYz1zW2EtMV07YSVlP2U+NiYmYSVlPT00JiYoYz1vW2M+Pj4yNF08PDI0fG9bYz4+PjE2JjI1NV08PDE2fG9bYz4+PjgmMjU1XTw8OHxvWzI1NSZjXSk6KGM9Yzw8OHxjPj4+MjQsYz1vW2M+Pj4yNF08PDI0fG9bYz4+PjE2JjI1NV08PDE2fG9bYz4+PjgmMjU1XTw8OHxvWzI1NSZjXSxjXj1wW2EvZXwwXTw8MjQpLHNbYV09c1thLWVdXmN9Zm9yKHZhciBoPXRoaXMuX2ludktleVNjaGVkdWxlPVtdLGw9MDtsPG47bCsrKXt2YXIgYT1uLWw7aWYobCU0KXZhciBjPXNbYV07ZWxzZSB2YXIgYz1zW2EtNF07bDw0fHxhPD00P2hbbF09YzpoW2xdPWZbb1tjPj4+MjRdXV51W29bYz4+PjE2JjI1NV1dXmRbb1tjPj4+OCYyNTVdXV52W29bMjU1JmNdXX19fSxlbmNyeXB0QmxvY2s6ZnVuY3Rpb24odCxyKXt0aGlzLl9kb0NyeXB0QmxvY2sodCxyLHRoaXMuX2tleVNjaGVkdWxlLGEsYyxoLGwsbyl9LGRlY3J5cHRCbG9jazpmdW5jdGlvbih0LHIpe3ZhciBlPXRbcisxXTt0W3IrMV09dFtyKzNdLHRbciszXT1lLHRoaXMuX2RvQ3J5cHRCbG9jayh0LHIsdGhpcy5faW52S2V5U2NoZWR1bGUsZix1LGQsdixzKTt2YXIgZT10W3IrMV07dFtyKzFdPXRbciszXSx0W3IrM109ZX0sX2RvQ3J5cHRCbG9jazpmdW5jdGlvbih0LHIsZSxpLG4sbyxzLGEpe2Zvcih2YXIgYz10aGlzLl9uUm91bmRzLGg9dFtyXV5lWzBdLGw9dFtyKzFdXmVbMV0sZj10W3IrMl1eZVsyXSx1PXRbciszXV5lWzNdLGQ9NCx2PTE7djxjO3YrKyl7dmFyIHA9aVtoPj4+MjRdXm5bbD4+PjE2JjI1NV1eb1tmPj4+OCYyNTVdXnNbMjU1JnVdXmVbZCsrXSxfPWlbbD4+PjI0XV5uW2Y+Pj4xNiYyNTVdXm9bdT4+PjgmMjU1XV5zWzI1NSZoXV5lW2QrK10seT1pW2Y+Pj4yNF1eblt1Pj4+MTYmMjU1XV5vW2g+Pj44JjI1NV1ec1syNTUmbF1eZVtkKytdLGc9aVt1Pj4+MjRdXm5baD4+PjE2JjI1NV1eb1tsPj4+OCYyNTVdXnNbMjU1JmZdXmVbZCsrXTtoPXAsbD1fLGY9eSx1PWd9dmFyIHA9KGFbaD4+PjI0XTw8MjR8YVtsPj4+MTYmMjU1XTw8MTZ8YVtmPj4+OCYyNTVdPDw4fGFbMjU1JnVdKV5lW2QrK10sXz0oYVtsPj4+MjRdPDwyNHxhW2Y+Pj4xNiYyNTVdPDwxNnxhW3U+Pj44JjI1NV08PDh8YVsyNTUmaF0pXmVbZCsrXSx5PShhW2Y+Pj4yNF08PDI0fGFbdT4+PjE2JjI1NV08PDE2fGFbaD4+PjgmMjU1XTw8OHxhWzI1NSZsXSleZVtkKytdLGc9KGFbdT4+PjI0XTw8MjR8YVtoPj4+MTYmMjU1XTw8MTZ8YVtsPj4+OCYyNTVdPDw4fGFbMjU1JmZdKV5lW2QrK107dFtyXT1wLHRbcisxXT1fLHRbcisyXT15LHRbciszXT1nfSxrZXlTaXplOjh9KTtyLkFFUz1pLl9jcmVhdGVIZWxwZXIoXyl9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiByKHQscil7dmFyIGU9KHRoaXMuX2xCbG9jaz4+PnRedGhpcy5fckJsb2NrKSZyO3RoaXMuX3JCbG9ja149ZSx0aGlzLl9sQmxvY2tePWU8PHR9ZnVuY3Rpb24gZSh0LHIpe3ZhciBlPSh0aGlzLl9yQmxvY2s+Pj50XnRoaXMuX2xCbG9jaykmcjt0aGlzLl9sQmxvY2tePWUsdGhpcy5fckJsb2NrXj1lPDx0Owp9dmFyIGk9dCxuPWkubGliLG89bi5Xb3JkQXJyYXkscz1uLkJsb2NrQ2lwaGVyLGE9aS5hbGdvLGM9WzU3LDQ5LDQxLDMzLDI1LDE3LDksMSw1OCw1MCw0MiwzNCwyNiwxOCwxMCwyLDU5LDUxLDQzLDM1LDI3LDE5LDExLDMsNjAsNTIsNDQsMzYsNjMsNTUsNDcsMzksMzEsMjMsMTUsNyw2Miw1NCw0NiwzOCwzMCwyMiwxNCw2LDYxLDUzLDQ1LDM3LDI5LDIxLDEzLDUsMjgsMjAsMTIsNF0saD1bMTQsMTcsMTEsMjQsMSw1LDMsMjgsMTUsNiwyMSwxMCwyMywxOSwxMiw0LDI2LDgsMTYsNywyNywyMCwxMywyLDQxLDUyLDMxLDM3LDQ3LDU1LDMwLDQwLDUxLDQ1LDMzLDQ4LDQ0LDQ5LDM5LDU2LDM0LDUzLDQ2LDQyLDUwLDM2LDI5LDMyXSxsPVsxLDIsNCw2LDgsMTAsMTIsMTQsMTUsMTcsMTksMjEsMjMsMjUsMjcsMjhdLGY9W3swOjg0MjE4ODgsMjY4NDM1NDU2OjMyNzY4LDUzNjg3MDkxMjo4NDIxMzc4LDgwNTMwNjM2ODoyLDEwNzM3NDE4MjQ6NTEyLDEzNDIxNzcyODA6ODQyMTg5MCwxNjEwNjEyNzM2OjgzODkxMjIsMTg3OTA0ODE5Mjo4Mzg4NjA4LDIxNDc0ODM2NDg6NTE0LDI0MTU5MTkxMDQ6ODM4OTEyMCwyNjg0MzU0NTYwOjMzMjgwLDI5NTI3OTAwMTY6ODQyMTM3NiwzMjIxMjI1NDcyOjMyNzcwLDM0ODk2NjA5Mjg6ODM4ODYxMCwzNzU4MDk2Mzg0OjAsNDAyNjUzMTg0MDozMzI4MiwxMzQyMTc3Mjg6MCw0MDI2NTMxODQ6ODQyMTg5MCw2NzEwODg2NDA6MzMyODIsOTM5NTI0MDk2OjMyNzY4LDEyMDc5NTk1NTI6ODQyMTg4OCwxNDc2Mzk1MDA4OjUxMiwxNzQ0ODMwNDY0Ojg0MjEzNzgsMjAxMzI2NTkyMDoyLDIyODE3MDEzNzY6ODM4OTEyMCwyNTUwMTM2ODMyOjMzMjgwLDI4MTg1NzIyODg6ODQyMTM3NiwzMDg3MDA3NzQ0OjgzODkxMjIsMzM1NTQ0MzIwMDo4Mzg4NjEwLDM2MjM4Nzg2NTY6MzI3NzAsMzg5MjMxNDExMjo1MTQsNDE2MDc0OTU2ODo4Mzg4NjA4LDE6MzI3NjgsMjY4NDM1NDU3OjIsNTM2ODcwOTEzOjg0MjE4ODgsODA1MzA2MzY5OjgzODg2MDgsMTA3Mzc0MTgyNTo4NDIxMzc4LDEzNDIxNzcyODE6MzMyODAsMTYxMDYxMjczNzo1MTIsMTg3OTA0ODE5Mzo4Mzg5MTIyLDIxNDc0ODM2NDk6ODQyMTg5MCwyNDE1OTE5MTA1Ojg0MjEzNzYsMjY4NDM1NDU2MTo4Mzg4NjEwLDI5NTI3OTAwMTc6MzMyODIsMzIyMTIyNTQ3Mzo1MTQsMzQ4OTY2MDkyOTo4Mzg5MTIwLDM3NTgwOTYzODU6MzI3NzAsNDAyNjUzMTg0MTowLDEzNDIxNzcyOTo4NDIxODkwLDQwMjY1MzE4NTo4NDIxMzc2LDY3MTA4ODY0MTo4Mzg4NjA4LDkzOTUyNDA5Nzo1MTIsMTIwNzk1OTU1MzozMjc2OCwxNDc2Mzk1MDA5OjgzODg2MTAsMTc0NDgzMDQ2NToyLDIwMTMyNjU5MjE6MzMyODIsMjI4MTcwMTM3NzozMjc3MCwyNTUwMTM2ODMzOjgzODkxMjIsMjgxODU3MjI4OTo1MTQsMzA4NzAwNzc0NTo4NDIxODg4LDMzNTU0NDMyMDE6ODM4OTEyMCwzNjIzODc4NjU3OjAsMzg5MjMxNDExMzozMzI4MCw0MTYwNzQ5NTY5Ojg0MjEzNzh9LHswOjEwNzQyODI1MTIsMTY3NzcyMTY6MTYzODQsMzM1NTQ0MzI6NTI0Mjg4LDUwMzMxNjQ4OjEwNzQyNjYxMjgsNjcxMDg4NjQ6MTA3Mzc0MTg0MCw4Mzg4NjA4MDoxMDc0MjgyNDk2LDEwMDY2MzI5NjoxMDczNzU4MjA4LDExNzQ0MDUxMjoxNiwxMzQyMTc3Mjg6NTQwNjcyLDE1MDk5NDk0NDoxMDczNzU4MjI0LDE2Nzc3MjE2MDoxMDczNzQxODI0LDE4NDU0OTM3Njo1NDA2ODgsMjAxMzI2NTkyOjUyNDMwNCwyMTgxMDM4MDg6MCwyMzQ4ODEwMjQ6MTY0MDAsMjUxNjU4MjQwOjEwNzQyNjYxMTIsODM4ODYwODoxMDczNzU4MjA4LDI1MTY1ODI0OjU0MDY4OCw0MTk0MzA0MDoxNiw1ODcyMDI1NjoxMDczNzU4MjI0LDc1NDk3NDcyOjEwNzQyODI1MTIsOTIyNzQ2ODg6MTA3Mzc0MTgyNCwxMDkwNTE5MDQ6NTI0Mjg4LDEyNTgyOTEyMDoxMDc0MjY2MTI4LDE0MjYwNjMzNjo1MjQzMDQsMTU5MzgzNTUyOjAsMTc2MTYwNzY4OjE2Mzg0LDE5MjkzNzk4NDoxMDc0MjY2MTEyLDIwOTcxNTIwMDoxMDczNzQxODQwLDIyNjQ5MjQxNjo1NDA2NzIsMjQzMjY5NjMyOjEwNzQyODI0OTYsMjYwMDQ2ODQ4OjE2NDAwLDI2ODQzNTQ1NjowLDI4NTIxMjY3MjoxMDc0MjY2MTI4LDMwMTk4OTg4ODoxMDczNzU4MjI0LDMxODc2NzEwNDoxMDc0MjgyNDk2LDMzNTU0NDMyMDoxMDc0MjY2MTEyLDM1MjMyMTUzNjoxNiwzNjkwOTg3NTI6NTQwNjg4LDM4NTg3NTk2ODoxNjM4NCw0MDI2NTMxODQ6MTY0MDAsNDE5NDMwNDAwOjUyNDI4OCw0MzYyMDc2MTY6NTI0MzA0LDQ1Mjk4NDgzMjoxMDczNzQxODQwLDQ2OTc2MjA0ODo1NDA2NzIsNDg2NTM5MjY0OjEwNzM3NTgyMDgsNTAzMzE2NDgwOjEwNzM3NDE4MjQsNTIwMDkzNjk2OjEwNzQyODI1MTIsMjc2ODI0MDY0OjU0MDY4OCwyOTM2MDEyODA6NTI0Mjg4LDMxMDM3ODQ5NjoxMDc0MjY2MTEyLDMyNzE1NTcxMjoxNjM4NCwzNDM5MzI5Mjg6MTA3Mzc1ODIwOCwzNjA3MTAxNDQ6MTA3NDI4MjUxMiwzNzc0ODczNjA6MTYsMzk0MjY0NTc2OjEwNzM3NDE4MjQsNDExMDQxNzkyOjEwNzQyODI0OTYsNDI3ODE5MDA4OjEwNzM3NDE4NDAsNDQ0NTk2MjI0OjEwNzM3NTgyMjQsNDYxMzczNDQwOjUyNDMwNCw0NzgxNTA2NTY6MCw0OTQ5Mjc4NzI6MTY0MDAsNTExNzA1MDg4OjEwNzQyNjYxMjgsNTI4NDgyMzA0OjU0MDY3Mn0sezA6MjYwLDEwNDg1NzY6MCwyMDk3MTUyOjY3MTA5MTIwLDMxNDU3Mjg6NjU3OTYsNDE5NDMwNDo2NTU0MCw1MjQyODgwOjY3MTA4ODY4LDYyOTE0NTY6NjcxNzQ2NjAsNzM0MDAzMjo2NzE3NDQwMCw4Mzg4NjA4OjY3MTA4ODY0LDk0MzcxODQ6NjcxNzQ2NTYsMTA0ODU3NjA6NjU3OTIsMTE1MzQzMzY6NjcxNzQ0MDQsMTI1ODI5MTI6NjcxMDkxMjQsMTM2MzE0ODg6NjU1MzYsMTQ2ODAwNjQ6NCwxNTcyODY0MDoyNTYsNTI0Mjg4OjY3MTc0NjU2LDE1NzI4NjQ6NjcxNzQ0MDQsMjYyMTQ0MDowLDM2NzAwMTY6NjcxMDkxMjAsNDcxODU5Mjo2NzEwODg2OCw1NzY3MTY4OjY1NTM2LDY4MTU3NDQ6NjU1NDAsNzg2NDMyMDoyNjAsODkxMjg5Njo0LDk5NjE0NzI6MjU2LDExMDEwMDQ4OjY3MTc0NDAwLDEyMDU4NjI0OjY1Nzk2LDEzMTA3MjAwOjY1NzkyLDE0MTU1Nzc2OjY3MTA5MTI0LDE1MjA0MzUyOjY3MTc0NjYwLDE2MjUyOTI4OjY3MTA4ODY0LDE2Nzc3MjE2OjY3MTc0NjU2LDE3ODI1NzkyOjY1NTQwLDE4ODc0MzY4OjY1NTM2LDE5OTIyOTQ0OjY3MTA5MTIwLDIwOTcxNTIwOjI1NiwyMjAyMDA5Njo2NzE3NDY2MCwyMzA2ODY3Mjo2NzEwODg2OCwyNDExNzI0ODowLDI1MTY1ODI0OjY3MTA5MTI0LDI2MjE0NDAwOjY3MTA4ODY0LDI3MjYyOTc2OjQsMjgzMTE1NTI6NjU3OTIsMjkzNjAxMjg6NjcxNzQ0MDAsMzA0MDg3MDQ6MjYwLDMxNDU3MjgwOjY1Nzk2LDMyNTA1ODU2OjY3MTc0NDA0LDE3MzAxNTA0OjY3MTA4ODY0LDE4MzUwMDgwOjI2MCwxOTM5ODY1Njo2NzE3NDY1NiwyMDQ0NzIzMjowLDIxNDk1ODA4OjY1NTQwLDIyNTQ0Mzg0OjY3MTA5MTIwLDIzNTkyOTYwOjI1NiwyNDY0MTUzNjo2NzE3NDQwNCwyNTY5MDExMjo2NTUzNiwyNjczODY4ODo2NzE3NDY2MCwyNzc4NzI2NDo2NTc5NiwyODgzNTg0MDo2NzEwODg2OCwyOTg4NDQxNjo2NzEwOTEyNCwzMDkzMjk5Mjo2NzE3NDQwMCwzMTk4MTU2ODo0LDMzMDMwMTQ0OjY1NzkyfSx7MDoyMTUxNjgyMDQ4LDY1NTM2OjIxNDc0ODc4MDgsMTMxMDcyOjQxOTg0NjQsMTk2NjA4OjIxNTE2Nzc5NTIsMjYyMTQ0OjAsMzI3NjgwOjQxOTg0MDAsMzkzMjE2OjIxNDc0ODM3MTIsNDU4NzUyOjQxOTQzNjgsNTI0Mjg4OjIxNDc0ODM2NDgsNTg5ODI0OjQxOTQzMDQsNjU1MzYwOjY0LDcyMDg5NjoyMTQ3NDg3NzQ0LDc4NjQzMjoyMTUxNjc4MDE2LDg1MTk2ODo0MTYwLDkxNzUwNDo0MDk2LDk4MzA0MDoyMTUxNjgyMTEyLDMyNzY4OjIxNDc0ODc4MDgsOTgzMDQ6NjQsMTYzODQwOjIxNTE2NzgwMTYsMjI5Mzc2OjIxNDc0ODc3NDQsMjk0OTEyOjQxOTg0MDAsMzYwNDQ4OjIxNTE2ODIxMTIsNDI1OTg0OjAsNDkxNTIwOjIxNTE2Nzc5NTIsNTU3MDU2OjQwOTYsNjIyNTkyOjIxNTE2ODIwNDgsNjg4MTI4OjQxOTQzMDQsNzUzNjY0OjQxNjAsODE5MjAwOjIxNDc0ODM2NDgsODg0NzM2OjQxOTQzNjgsOTUwMjcyOjQxOTg0NjQsMTAxNTgwODoyMTQ3NDgzNzEyLDEwNDg1NzY6NDE5NDM2OCwxMTE0MTEyOjQxOTg0MDAsMTE3OTY0ODoyMTQ3NDgzNzEyLDEyNDUxODQ6MCwxMzEwNzIwOjQxNjAsMTM3NjI1NjoyMTUxNjc4MDE2LDE0NDE3OTI6MjE1MTY4MjA0OCwxNTA3MzI4OjIxNDc0ODc4MDgsMTU3Mjg2NDoyMTUxNjgyMTEyLDE2Mzg0MDA6MjE0NzQ4MzY0OCwxNzAzOTM2OjIxNTE2Nzc5NTIsMTc2OTQ3Mjo0MTk4NDY0LDE4MzUwMDg6MjE0NzQ4Nzc0NCwxOTAwNTQ0OjQxOTQzMDQsMTk2NjA4MDo2NCwyMDMxNjE2OjQwOTYsMTA4MTM0NDoyMTUxNjc3OTUyLDExNDY4ODA6MjE1MTY4MjExMiwxMjEyNDE2OjAsMTI3Nzk1Mjo0MTk4NDAwLDEzNDM0ODg6NDE5NDM2OCwxNDA5MDI0OjIxNDc0ODM2NDgsMTQ3NDU2MDoyMTQ3NDg3ODA4LDE1NDAwOTY6NjQsMTYwNTYzMjoyMTQ3NDgzNzEyLDE2NzExNjg6NDA5NiwxNzM2NzA0OjIxNDc0ODc3NDQsMTgwMjI0MDoyMTUxNjc4MDE2LDE4Njc3NzY6NDE2MCwxOTMzMzEyOjIxNTE2ODIwNDgsMTk5ODg0ODo0MTk0MzA0LDIwNjQzODQ6NDE5ODQ2NH0sezA6MTI4LDQwOTY6MTcwMzkzNjAsODE5MjoyNjIxNDQsMTIyODg6NTM2ODcwOTEyLDE2Mzg0OjUzNzEzMzE4NCwyMDQ4MDoxNjc3NzM0NCwyNDU3Njo1NTM2NDgyNTYsMjg2NzI6MjYyMjcyLDMyNzY4OjE2Nzc3MjE2LDM2ODY0OjUzNzEzMzA1Niw0MDk2MDo1MzY4NzEwNDAsNDUwNTY6NTUzOTEwNDAwLDQ5MTUyOjU1MzkxMDI3Miw1MzI0ODowLDU3MzQ0OjE3MDM5NDg4LDYxNDQwOjU1MzY0ODEyOCwyMDQ4OjE3MDM5NDg4LDYxNDQ6NTUzNjQ4MjU2LDEwMjQwOjEyOCwxNDMzNjoxNzAzOTM2MCwxODQzMjoyNjIxNDQsMjI1Mjg6NTM3MTMzMTg0LDI2NjI0OjU1MzkxMDI3MiwzMDcyMDo1MzY4NzA5MTIsMzQ4MTY6NTM3MTMzMDU2LDM4OTEyOjAsNDMwMDg6NTUzOTEwNDAwLDQ3MTA0OjE2Nzc3MzQ0LDUxMjAwOjUzNjg3MTA0MCw1NTI5Njo1NTM2NDgxMjgsNTkzOTI6MTY3NzcyMTYsNjM0ODg6MjYyMjcyLDY1NTM2OjI2MjE0NCw2OTYzMjoxMjgsNzM3Mjg6NTM2ODcwOTEyLDc3ODI0OjU1MzY0ODI1Niw4MTkyMDoxNjc3NzM0NCw4NjAxNjo1NTM5MTAyNzIsOTAxMTI6NTM3MTMzMTg0LDk0MjA4OjE2Nzc3MjE2LDk4MzA0OjU1MzkxMDQwMCwxMDI0MDA6NTUzNjQ4MTI4LDEwNjQ5NjoxNzAzOTM2MCwxMTA1OTI6NTM3MTMzMDU2LDExNDY4ODoyNjIyNzIsMTE4Nzg0OjUzNjg3MTA0MCwxMjI4ODA6MCwxMjY5NzY6MTcwMzk0ODgsNjc1ODQ6NTUzNjQ4MjU2LDcxNjgwOjE2Nzc3MjE2LDc1Nzc2OjE3MDM5MzYwLDc5ODcyOjUzNzEzMzE4NCw4Mzk2ODo1MzY4NzA5MTIsODgwNjQ6MTcwMzk0ODgsOTIxNjA6MTI4LDk2MjU2OjU1MzkxMDI3MiwxMDAzNTI6MjYyMjcyLDEwNDQ0ODo1NTM5MTA0MDAsMTA4NTQ0OjAsMTEyNjQwOjU1MzY0ODEyOCwxMTY3MzY6MTY3NzczNDQsMTIwODMyOjI2MjE0NCwxMjQ5Mjg6NTM3MTMzMDU2LDEyOTAyNDo1MzY4NzEwNDB9LHswOjI2ODQzNTQ2NCwyNTY6ODE5Miw1MTI6MjcwNTMyNjA4LDc2ODoyNzA1NDA4MDgsMTAyNDoyNjg0NDM2NDgsMTI4MDoyMDk3MTUyLDE1MzY6MjA5NzE2MCwxNzkyOjI2ODQzNTQ1NiwyMDQ4OjAsMjMwNDoyNjg0NDM2NTYsMjU2MDoyMTA1MzQ0LDI4MTY6OCwzMDcyOjI3MDUzMjYxNiwzMzI4OjIxMDUzNTIsMzU4NDo4MjAwLDM4NDA6MjcwNTQwODAwLDEyODoyNzA1MzI2MDgsMzg0OjI3MDU0MDgwOCw2NDA6OCw4OTY6MjA5NzE1MiwxMTUyOjIxMDUzNTIsMTQwODoyNjg0MzU0NjQsMTY2NDoyNjg0NDM2NDgsMTkyMDo4MjAwLDIxNzY6MjA5NzE2MCwyNDMyOjgxOTIsMjY4ODoyNjg0NDM2NTYsMjk0NDoyNzA1MzI2MTYsMzIwMDowLDM0NTY6MjcwNTQwODAwLDM3MTI6MjEwNTM0NCwzOTY4OjI2ODQzNTQ1Niw0MDk2OjI2ODQ0MzY0OCw0MzUyOjI3MDUzMjYxNiw0NjA4OjI3MDU0MDgwOCw0ODY0OjgyMDAsNTEyMDoyMDk3MTUyLDUzNzY6MjY4NDM1NDU2LDU2MzI6MjY4NDM1NDY0LDU4ODg6MjEwNTM0NCw2MTQ0OjIxMDUzNTIsNjQwMDowLDY2NTY6OCw2OTEyOjI3MDUzMjYwOCw3MTY4OjgxOTIsNzQyNDoyNjg0NDM2NTYsNzY4MDoyNzA1NDA4MDAsNzkzNjoyMDk3MTYwLDQyMjQ6OCw0NDgwOjIxMDUzNDQsNDczNjoyMDk3MTUyLDQ5OTI6MjY4NDM1NDY0LDUyNDg6MjY4NDQzNjQ4LDU1MDQ6ODIwMCw1NzYwOjI3MDU0MDgwOCw2MDE2OjI3MDUzMjYwOCw2MjcyOjI3MDU0MDgwMCw2NTI4OjI3MDUzMjYxNiw2Nzg0OjgxOTIsNzA0MDoyMTA1MzUyLDcyOTY6MjA5NzE2MCw3NTUyOjAsNzgwODoyNjg0MzU0NTYsODA2NDoyNjg0NDM2NTZ9LHswOjEwNDg1NzYsMTY6MzM1NTU0NTcsMzI6MTAyNCw0ODoxMDQ5NjAxLDY0OjM0NjA0MDMzLDgwOjAsOTY6MSwxMTI6MzQ2MDMwMDksMTI4OjMzNTU1NDU2LDE0NDoxMDQ4NTc3LDE2MDozMzU1NDQzMywxNzY6MzQ2MDQwMzIsMTkyOjM0NjAzMDA4LDIwODoxMDI1LDIyNDoxMDQ5NjAwLDI0MDozMzU1NDQzMiw4OjM0NjAzMDA5LDI0OjAsNDA6MzM1NTU0NTcsNTY6MzQ2MDQwMzIsNzI6MTA0ODU3Niw4ODozMzU1NDQzMywxMDQ6MzM1NTQ0MzIsMTIwOjEwMjUsMTM2OjEwNDk2MDEsMTUyOjMzNTU1NDU2LDE2ODozNDYwMzAwOCwxODQ6MTA0ODU3NywyMDA6MTAyNCwyMTY6MzQ2MDQwMzMsMjMyOjEsMjQ4OjEwNDk2MDAsMjU2OjMzNTU0NDMyLDI3MjoxMDQ4NTc2LDI4ODozMzU1NTQ1NywzMDQ6MzQ2MDMwMDksMzIwOjEwNDg1NzcsMzM2OjMzNTU1NDU2LDM1MjozNDYwNDAzMiwzNjg6MTA0OTYwMSwzODQ6MTAyNSw0MDA6MzQ2MDQwMzMsNDE2OjEwNDk2MDAsNDMyOjEsNDQ4OjAsNDY0OjM0NjAzMDA4LDQ4MDozMzU1NDQzMyw0OTY6MTAyNCwyNjQ6MTA0OTYwMCwyODA6MzM1NTU0NTcsMjk2OjM0NjAzMDA5LDMxMjoxLDMyODozMzU1NDQzMiwzNDQ6MTA0ODU3NiwzNjA6MTAyNSwzNzY6MzQ2MDQwMzIsMzkyOjMzNTU0NDMzLDQwODozNDYwMzAwOCw0MjQ6MCw0NDA6MzQ2MDQwMzMsNDU2OjEwNDk2MDEsNDcyOjEwMjQsNDg4OjMzNTU1NDU2LDUwNDoxMDQ4NTc3fSx7MDoxMzQyMTk4MDgsMToxMzEwNzIsMjoxMzQyMTc3MjgsMzozMiw0OjEzMTEwNCw1OjEzNDM1MDg4MCw2OjEzNDM1MDg0OCw3OjIwNDgsODoxMzQzNDg4MDAsOToxMzQyMTk3NzYsMTA6MTMzMTIwLDExOjEzNDM0ODgzMiwxMjoyMDgwLDEzOjAsMTQ6MTM0MjE3NzYwLDE1OjEzMzE1MiwyMTQ3NDgzNjQ4OjIwNDgsMjE0NzQ4MzY0OToxMzQzNTA4ODAsMjE0NzQ4MzY1MDoxMzQyMTk4MDgsMjE0NzQ4MzY1MToxMzQyMTc3MjgsMjE0NzQ4MzY1MjoxMzQzNDg4MDAsMjE0NzQ4MzY1MzoxMzMxMjAsMjE0NzQ4MzY1NDoxMzMxNTIsMjE0NzQ4MzY1NTozMiwyMTQ3NDgzNjU2OjEzNDIxNzc2MCwyMTQ3NDgzNjU3OjIwODAsMjE0NzQ4MzY1ODoxMzExMDQsMjE0NzQ4MzY1OToxMzQzNTA4NDgsMjE0NzQ4MzY2MDowLDIxNDc0ODM2NjE6MTM0MzQ4ODMyLDIxNDc0ODM2NjI6MTM0MjE5Nzc2LDIxNDc0ODM2NjM6MTMxMDcyLDE2OjEzMzE1MiwxNzoxMzQzNTA4NDgsMTg6MzIsMTk6MjA0OCwyMDoxMzQyMTk3NzYsMjE6MTM0MjE3NzYwLDIyOjEzNDM0ODgzMiwyMzoxMzEwNzIsMjQ6MCwyNToxMzExMDQsMjY6MTM0MzQ4ODAwLDI3OjEzNDIxOTgwOCwyODoxMzQzNTA4ODAsMjk6MTMzMTIwLDMwOjIwODAsMzE6MTM0MjE3NzI4LDIxNDc0ODM2NjQ6MTMxMDcyLDIxNDc0ODM2NjU6MjA0OCwyMTQ3NDgzNjY2OjEzNDM0ODgzMiwyMTQ3NDgzNjY3OjEzMzE1MiwyMTQ3NDgzNjY4OjMyLDIxNDc0ODM2Njk6MTM0MzQ4ODAwLDIxNDc0ODM2NzA6MTM0MjE3NzI4LDIxNDc0ODM2NzE6MTM0MjE5ODA4LDIxNDc0ODM2NzI6MTM0MzUwODgwLDIxNDc0ODM2NzM6MTM0MjE3NzYwLDIxNDc0ODM2NzQ6MTM0MjE5Nzc2LDIxNDc0ODM2NzU6MCwyMTQ3NDgzNjc2OjEzMzEyMCwyMTQ3NDgzNjc3OjIwODAsMjE0NzQ4MzY3ODoxMzExMDQsMjE0NzQ4MzY3OToxMzQzNTA4NDh9XSx1PVs0MTYwNzQ5NTY5LDUyODQ4MjMwNCwzMzAzMDE0NCwyMDY0Mzg0LDEyOTAyNCw4MDY0LDUwNCwyMTQ3NDgzNjc5XSxkPWEuREVTPXMuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9rZXkscj10LndvcmRzLGU9W10saT0wO2k8NTY7aSsrKXt2YXIgbj1jW2ldLTE7ZVtpXT1yW24+Pj41XT4+PjMxLW4lMzImMX1mb3IodmFyIG89dGhpcy5fc3ViS2V5cz1bXSxzPTA7czwxNjtzKyspe2Zvcih2YXIgYT1vW3NdPVtdLGY9bFtzXSxpPTA7aTwyNDtpKyspYVtpLzZ8MF18PWVbKGhbaV0tMStmKSUyOF08PDMxLWklNixhWzQrKGkvNnwwKV18PWVbMjgrKGhbaSsyNF0tMStmKSUyOF08PDMxLWklNjthWzBdPWFbMF08PDF8YVswXT4+PjMxO2Zvcih2YXIgaT0xO2k8NztpKyspYVtpXT1hW2ldPj4+NCooaS0xKSszO2FbN109YVs3XTw8NXxhWzddPj4+Mjd9Zm9yKHZhciB1PXRoaXMuX2ludlN1YktleXM9W10saT0wO2k8MTY7aSsrKXVbaV09b1sxNS1pXX0sZW5jcnlwdEJsb2NrOmZ1bmN0aW9uKHQscil7dGhpcy5fZG9DcnlwdEJsb2NrKHQscix0aGlzLl9zdWJLZXlzKX0sZGVjcnlwdEJsb2NrOmZ1bmN0aW9uKHQscil7dGhpcy5fZG9DcnlwdEJsb2NrKHQscix0aGlzLl9pbnZTdWJLZXlzKX0sX2RvQ3J5cHRCbG9jazpmdW5jdGlvbih0LGksbil7dGhpcy5fbEJsb2NrPXRbaV0sdGhpcy5fckJsb2NrPXRbaSsxXSxyLmNhbGwodGhpcyw0LDI1MjY0NTEzNSksci5jYWxsKHRoaXMsMTYsNjU1MzUpLGUuY2FsbCh0aGlzLDIsODU4OTkzNDU5KSxlLmNhbGwodGhpcyw4LDE2NzExOTM1KSxyLmNhbGwodGhpcywxLDE0MzE2NTU3NjUpO2Zvcih2YXIgbz0wO288MTY7bysrKXtmb3IodmFyIHM9bltvXSxhPXRoaXMuX2xCbG9jayxjPXRoaXMuX3JCbG9jayxoPTAsbD0wO2w8ODtsKyspaHw9ZltsXVsoKGNec1tsXSkmdVtsXSk+Pj4wXTt0aGlzLl9sQmxvY2s9Yyx0aGlzLl9yQmxvY2s9YV5ofXZhciBkPXRoaXMuX2xCbG9jazt0aGlzLl9sQmxvY2s9dGhpcy5fckJsb2NrLHRoaXMuX3JCbG9jaz1kLHIuY2FsbCh0aGlzLDEsMTQzMTY1NTc2NSksZS5jYWxsKHRoaXMsOCwxNjcxMTkzNSksZS5jYWxsKHRoaXMsMiw4NTg5OTM0NTkpLHIuY2FsbCh0aGlzLDE2LDY1NTM1KSxyLmNhbGwodGhpcyw0LDI1MjY0NTEzNSksdFtpXT10aGlzLl9sQmxvY2ssdFtpKzFdPXRoaXMuX3JCbG9ja30sa2V5U2l6ZToyLGl2U2l6ZToyLGJsb2NrU2l6ZToyfSk7aS5ERVM9cy5fY3JlYXRlSGVscGVyKGQpO3ZhciB2PWEuVHJpcGxlREVTPXMuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2tleSxyPXQud29yZHM7dGhpcy5fZGVzMT1kLmNyZWF0ZUVuY3J5cHRvcihvLmNyZWF0ZShyLnNsaWNlKDAsMikpKSx0aGlzLl9kZXMyPWQuY3JlYXRlRW5jcnlwdG9yKG8uY3JlYXRlKHIuc2xpY2UoMiw0KSkpLHRoaXMuX2RlczM9ZC5jcmVhdGVFbmNyeXB0b3Ioby5jcmVhdGUoci5zbGljZSg0LDYpKSl9LGVuY3J5cHRCbG9jazpmdW5jdGlvbih0LHIpe3RoaXMuX2RlczEuZW5jcnlwdEJsb2NrKHQsciksdGhpcy5fZGVzMi5kZWNyeXB0QmxvY2sodCxyKSx0aGlzLl9kZXMzLmVuY3J5cHRCbG9jayh0LHIpfSxkZWNyeXB0QmxvY2s6ZnVuY3Rpb24odCxyKXt0aGlzLl9kZXMzLmRlY3J5cHRCbG9jayh0LHIpLHRoaXMuX2RlczIuZW5jcnlwdEJsb2NrKHQsciksdGhpcy5fZGVzMS5kZWNyeXB0QmxvY2sodCxyKX0sa2V5U2l6ZTo2LGl2U2l6ZToyLGJsb2NrU2l6ZToyfSk7aS5UcmlwbGVERVM9cy5fY3JlYXRlSGVscGVyKHYpfSgpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcigpe2Zvcih2YXIgdD10aGlzLl9TLHI9dGhpcy5faSxlPXRoaXMuX2osaT0wLG49MDtuPDQ7bisrKXtyPShyKzEpJTI1NixlPShlK3Rbcl0pJTI1Njt2YXIgbz10W3JdO3Rbcl09dFtlXSx0W2VdPW8saXw9dFsodFtyXSt0W2VdKSUyNTZdPDwyNC04Km59cmV0dXJuIHRoaXMuX2k9cix0aGlzLl9qPWUsaX12YXIgZT10LGk9ZS5saWIsbj1pLlN0cmVhbUNpcGhlcixvPWUuYWxnbyxzPW8uUkM0PW4uZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9rZXkscj10LndvcmRzLGU9dC5zaWdCeXRlcyxpPXRoaXMuX1M9W10sbj0wO248MjU2O24rKylpW25dPW47Zm9yKHZhciBuPTAsbz0wO248MjU2O24rKyl7dmFyIHM9biVlLGE9cltzPj4+Ml0+Pj4yNC1zJTQqOCYyNTU7bz0obytpW25dK2EpJTI1Njt2YXIgYz1pW25dO2lbbl09aVtvXSxpW29dPWN9dGhpcy5faT10aGlzLl9qPTB9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LGUpe3RbZV1ePXIuY2FsbCh0aGlzKX0sa2V5U2l6ZTo4LGl2U2l6ZTowfSk7ZS5SQzQ9bi5fY3JlYXRlSGVscGVyKHMpO3ZhciBhPW8uUkM0RHJvcD1zLmV4dGVuZCh7Y2ZnOnMuY2ZnLmV4dGVuZCh7ZHJvcDoxOTJ9KSxfZG9SZXNldDpmdW5jdGlvbigpe3MuX2RvUmVzZXQuY2FsbCh0aGlzKTtmb3IodmFyIHQ9dGhpcy5jZmcuZHJvcDt0PjA7dC0tKXIuY2FsbCh0aGlzKX19KTtlLlJDNERyb3A9bi5fY3JlYXRlSGVscGVyKGEpfSgpLHQubW9kZS5DVFJHbGFkbWFuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gcih0KXtpZigyNTU9PT0odD4+MjQmMjU1KSl7dmFyIHI9dD4+MTYmMjU1LGU9dD4+OCYyNTUsaT0yNTUmdDsyNTU9PT1yPyhyPTAsMjU1PT09ZT8oZT0wLDI1NT09PWk/aT0wOisraSk6KytlKTorK3IsdD0wLHQrPXI8PDE2LHQrPWU8PDgsdCs9aX1lbHNlIHQrPTE8PDI0O3JldHVybiB0fWZ1bmN0aW9uIGUodCl7cmV0dXJuIDA9PT0odFswXT1yKHRbMF0pKSYmKHRbMV09cih0WzFdKSksdH12YXIgaT10LmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCksbj1pLkVuY3J5cHRvcj1pLmV4dGVuZCh7cHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQscil7dmFyIGk9dGhpcy5fY2lwaGVyLG49aS5ibG9ja1NpemUsbz10aGlzLl9pdixzPXRoaXMuX2NvdW50ZXI7byYmKHM9dGhpcy5fY291bnRlcj1vLnNsaWNlKDApLHRoaXMuX2l2PXZvaWQgMCksZShzKTt2YXIgYT1zLnNsaWNlKDApO2kuZW5jcnlwdEJsb2NrKGEsMCk7Zm9yKHZhciBjPTA7YzxuO2MrKyl0W3IrY11ePWFbY119fSk7cmV0dXJuIGkuRGVjcnlwdG9yPW4saX0oKSxmdW5jdGlvbigpe2Z1bmN0aW9uIHIoKXtmb3IodmFyIHQ9dGhpcy5fWCxyPXRoaXMuX0MsZT0wO2U8ODtlKyspYVtlXT1yW2VdO3JbMF09clswXSsxMjk1MzA3NTk3K3RoaXMuX2J8MCxyWzFdPXJbMV0rMzU0NTA1MjM3MSsoclswXT4+PjA8YVswXT4+PjA/MTowKXwwLHJbMl09clsyXSs4ODYyNjMwOTIrKHJbMV0+Pj4wPGFbMV0+Pj4wPzE6MCl8MCxyWzNdPXJbM10rMTI5NTMwNzU5NysoclsyXT4+PjA8YVsyXT4+PjA/MTowKXwwLHJbNF09cls0XSszNTQ1MDUyMzcxKyhyWzNdPj4+MDxhWzNdPj4+MD8xOjApfDAscls1XT1yWzVdKzg4NjI2MzA5Misocls0XT4+PjA8YVs0XT4+PjA/MTowKXwwLHJbNl09cls2XSsxMjk1MzA3NTk3KyhyWzVdPj4+MDxhWzVdPj4+MD8xOjApfDAscls3XT1yWzddKzM1NDUwNTIzNzErKHJbNl0+Pj4wPGFbNl0+Pj4wPzE6MCl8MCx0aGlzLl9iPXJbN10+Pj4wPGFbN10+Pj4wPzE6MDtmb3IodmFyIGU9MDtlPDg7ZSsrKXt2YXIgaT10W2VdK3JbZV0sbj02NTUzNSZpLG89aT4+PjE2LHM9KChuKm4+Pj4xNykrbipvPj4+MTUpK28qbyxoPSgoNDI5NDkwMTc2MCZpKSppfDApKygoNjU1MzUmaSkqaXwwKTtjW2VdPXNeaH10WzBdPWNbMF0rKGNbN108PDE2fGNbN10+Pj4xNikrKGNbNl08PDE2fGNbNl0+Pj4xNil8MCx0WzFdPWNbMV0rKGNbMF08PDh8Y1swXT4+PjI0KStjWzddfDAsdFsyXT1jWzJdKyhjWzFdPDwxNnxjWzFdPj4+MTYpKyhjWzBdPDwxNnxjWzBdPj4+MTYpfDAsdFszXT1jWzNdKyhjWzJdPDw4fGNbMl0+Pj4yNCkrY1sxXXwwLHRbNF09Y1s0XSsoY1szXTw8MTZ8Y1szXT4+PjE2KSsoY1syXTw8MTZ8Y1syXT4+PjE2KXwwLHRbNV09Y1s1XSsoY1s0XTw8OHxjWzRdPj4+MjQpK2NbM118MCx0WzZdPWNbNl0rKGNbNV08PDE2fGNbNV0+Pj4xNikrKGNbNF08PDE2fGNbNF0+Pj4xNil8MCx0WzddPWNbN10rKGNbNl08PDh8Y1s2XT4+PjI0KStjWzVdfDB9dmFyIGU9dCxpPWUubGliLG49aS5TdHJlYW1DaXBoZXIsbz1lLmFsZ28scz1bXSxhPVtdLGM9W10saD1vLlJhYmJpdD1uLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5fa2V5LndvcmRzLGU9dGhpcy5jZmcuaXYsaT0wO2k8NDtpKyspdFtpXT0xNjcxMTkzNSYodFtpXTw8OHx0W2ldPj4+MjQpfDQyNzgyNTUzNjAmKHRbaV08PDI0fHRbaV0+Pj44KTt2YXIgbj10aGlzLl9YPVt0WzBdLHRbM108PDE2fHRbMl0+Pj4xNix0WzFdLHRbMF08PDE2fHRbM10+Pj4xNix0WzJdLHRbMV08PDE2fHRbMF0+Pj4xNix0WzNdLHRbMl08PDE2fHRbMV0+Pj4xNl0sbz10aGlzLl9DPVt0WzJdPDwxNnx0WzJdPj4+MTYsNDI5NDkwMTc2MCZ0WzBdfDY1NTM1JnRbMV0sdFszXTw8MTZ8dFszXT4+PjE2LDQyOTQ5MDE3NjAmdFsxXXw2NTUzNSZ0WzJdLHRbMF08PDE2fHRbMF0+Pj4xNiw0Mjk0OTAxNzYwJnRbMl18NjU1MzUmdFszXSx0WzFdPDwxNnx0WzFdPj4+MTYsNDI5NDkwMTc2MCZ0WzNdfDY1NTM1JnRbMF1dO3RoaXMuX2I9MDtmb3IodmFyIGk9MDtpPDQ7aSsrKXIuY2FsbCh0aGlzKTtmb3IodmFyIGk9MDtpPDg7aSsrKW9baV1ePW5baSs0JjddO2lmKGUpe3ZhciBzPWUud29yZHMsYT1zWzBdLGM9c1sxXSxoPTE2NzExOTM1JihhPDw4fGE+Pj4yNCl8NDI3ODI1NTM2MCYoYTw8MjR8YT4+PjgpLGw9MTY3MTE5MzUmKGM8PDh8Yz4+PjI0KXw0Mjc4MjU1MzYwJihjPDwyNHxjPj4+OCksZj1oPj4+MTZ8NDI5NDkwMTc2MCZsLHU9bDw8MTZ8NjU1MzUmaDtvWzBdXj1oLG9bMV1ePWYsb1syXV49bCxvWzNdXj11LG9bNF1ePWgsb1s1XV49ZixvWzZdXj1sLG9bN11ePXU7Zm9yKHZhciBpPTA7aTw0O2krKylyLmNhbGwodGhpcyl9fSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9YO3IuY2FsbCh0aGlzKSxzWzBdPWlbMF1eaVs1XT4+PjE2XmlbM108PDE2LHNbMV09aVsyXV5pWzddPj4+MTZeaVs1XTw8MTYsc1syXT1pWzRdXmlbMV0+Pj4xNl5pWzddPDwxNixzWzNdPWlbNl1eaVszXT4+PjE2XmlbMV08PDE2O2Zvcih2YXIgbj0wO248NDtuKyspc1tuXT0xNjcxMTkzNSYoc1tuXTw8OHxzW25dPj4+MjQpfDQyNzgyNTUzNjAmKHNbbl08PDI0fHNbbl0+Pj44KSx0W2Urbl1ePXNbbl19LGJsb2NrU2l6ZTo0LGl2U2l6ZToyfSk7ZS5SYWJiaXQ9bi5fY3JlYXRlSGVscGVyKGgpfSgpLHQubW9kZS5DVFI9ZnVuY3Rpb24oKXt2YXIgcj10LmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCksZT1yLkVuY3J5cHRvcj1yLmV4dGVuZCh7cHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQscil7dmFyIGU9dGhpcy5fY2lwaGVyLGk9ZS5ibG9ja1NpemUsbj10aGlzLl9pdixvPXRoaXMuX2NvdW50ZXI7biYmKG89dGhpcy5fY291bnRlcj1uLnNsaWNlKDApLHRoaXMuX2l2PXZvaWQgMCk7dmFyIHM9by5zbGljZSgwKTtlLmVuY3J5cHRCbG9jayhzLDApLG9baS0xXT1vW2ktMV0rMXwwO2Zvcih2YXIgYT0wO2E8aTthKyspdFtyK2FdXj1zW2FdfX0pO3JldHVybiByLkRlY3J5cHRvcj1lLHJ9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiByKCl7Zm9yKHZhciB0PXRoaXMuX1gscj10aGlzLl9DLGU9MDtlPDg7ZSsrKWFbZV09cltlXTtyWzBdPXJbMF0rMTI5NTMwNzU5Nyt0aGlzLl9ifDAsclsxXT1yWzFdKzM1NDUwNTIzNzErKHJbMF0+Pj4wPGFbMF0+Pj4wPzE6MCl8MCxyWzJdPXJbMl0rODg2MjYzMDkyKyhyWzFdPj4+MDxhWzFdPj4+MD8xOjApfDAsclszXT1yWzNdKzEyOTUzMDc1OTcrKHJbMl0+Pj4wPGFbMl0+Pj4wPzE6MCl8MCxyWzRdPXJbNF0rMzU0NTA1MjM3MSsoclszXT4+PjA8YVszXT4+PjA/MTowKXwwLHJbNV09cls1XSs4ODYyNjMwOTIrKHJbNF0+Pj4wPGFbNF0+Pj4wPzE6MCl8MCxyWzZdPXJbNl0rMTI5NTMwNzU5Nysocls1XT4+PjA8YVs1XT4+PjA/MTowKXwwLHJbN109cls3XSszNTQ1MDUyMzcxKyhyWzZdPj4+MDxhWzZdPj4+MD8xOjApfDAsdGhpcy5fYj1yWzddPj4+MDxhWzddPj4+MD8xOjA7Zm9yKHZhciBlPTA7ZTw4O2UrKyl7dmFyIGk9dFtlXStyW2VdLG49NjU1MzUmaSxvPWk+Pj4xNixzPSgobipuPj4+MTcpK24qbz4+PjE1KStvKm8saD0oKDQyOTQ5MDE3NjAmaSkqaXwwKSsoKDY1NTM1JmkpKml8MCk7Y1tlXT1zXmh9dFswXT1jWzBdKyhjWzddPDwxNnxjWzddPj4+MTYpKyhjWzZdPDwxNnxjWzZdPj4+MTYpfDAsdFsxXT1jWzFdKyhjWzBdPDw4fGNbMF0+Pj4yNCkrY1s3XXwwLHRbMl09Y1syXSsoY1sxXTw8MTZ8Y1sxXT4+PjE2KSsoY1swXTw8MTZ8Y1swXT4+PjE2KXwwLHRbM109Y1szXSsoY1syXTw8OHxjWzJdPj4+MjQpK2NbMV18MCx0WzRdPWNbNF0rKGNbM108PDE2fGNbM10+Pj4xNikrKGNbMl08PDE2fGNbMl0+Pj4xNil8MCx0WzVdPWNbNV0rKGNbNF08PDh8Y1s0XT4+PjI0KStjWzNdfDAsdFs2XT1jWzZdKyhjWzVdPDwxNnxjWzVdPj4+MTYpKyhjWzRdPDwxNnxjWzRdPj4+MTYpfDAsdFs3XT1jWzddKyhjWzZdPDw4fGNbNl0+Pj4yNCkrY1s1XXwwfXZhciBlPXQsaT1lLmxpYixuPWkuU3RyZWFtQ2lwaGVyLG89ZS5hbGdvLHM9W10sYT1bXSxjPVtdLGg9by5SYWJiaXRMZWdhY3k9bi5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fa2V5LndvcmRzLGU9dGhpcy5jZmcuaXYsaT10aGlzLl9YPVt0WzBdLHRbM108PDE2fHRbMl0+Pj4xNix0WzFdLHRbMF08PDE2fHRbM10+Pj4xNix0WzJdLHRbMV08PDE2fHRbMF0+Pj4xNix0WzNdLHRbMl08PDE2fHRbMV0+Pj4xNl0sbj10aGlzLl9DPVt0WzJdPDwxNnx0WzJdPj4+MTYsNDI5NDkwMTc2MCZ0WzBdfDY1NTM1JnRbMV0sdFszXTw8MTZ8dFszXT4+PjE2LDQyOTQ5MDE3NjAmdFsxXXw2NTUzNSZ0WzJdLHRbMF08PDE2fHRbMF0+Pj4xNiw0Mjk0OTAxNzYwJnRbMl18NjU1MzUmdFszXSx0WzFdPDwxNnx0WzFdPj4+MTYsNDI5NDkwMTc2MCZ0WzNdfDY1NTM1JnRbMF1dO3RoaXMuX2I9MDtmb3IodmFyIG89MDtvPDQ7bysrKXIuY2FsbCh0aGlzKTtmb3IodmFyIG89MDtvPDg7bysrKW5bb11ePWlbbys0JjddO2lmKGUpe3ZhciBzPWUud29yZHMsYT1zWzBdLGM9c1sxXSxoPTE2NzExOTM1JihhPDw4fGE+Pj4yNCl8NDI3ODI1NTM2MCYoYTw8MjR8YT4+PjgpLGw9MTY3MTE5MzUmKGM8PDh8Yz4+PjI0KXw0Mjc4MjU1MzYwJihjPDwyNHxjPj4+OCksZj1oPj4+MTZ8NDI5NDkwMTc2MCZsLHU9bDw8MTZ8NjU1MzUmaDtuWzBdXj1oLG5bMV1ePWYsblsyXV49bCxuWzNdXj11LG5bNF1ePWgsbls1XV49ZixuWzZdXj1sLG5bN11ePXU7Zm9yKHZhciBvPTA7bzw0O28rKylyLmNhbGwodGhpcyl9fSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9YO3IuY2FsbCh0aGlzKSxzWzBdPWlbMF1eaVs1XT4+PjE2XmlbM108PDE2LHNbMV09aVsyXV5pWzddPj4+MTZeaVs1XTw8MTYsc1syXT1pWzRdXmlbMV0+Pj4xNl5pWzddPDwxNixzWzNdPWlbNl1eaVszXT4+PjE2XmlbMV08PDE2O2Zvcih2YXIgbj0wO248NDtuKyspc1tuXT0xNjcxMTkzNSYoc1tuXTw8OHxzW25dPj4+MjQpfDQyNzgyNTUzNjAmKHNbbl08PDI0fHNbbl0+Pj44KSx0W2Urbl1ePXNbbl19LGJsb2NrU2l6ZTo0LGl2U2l6ZToyfSk7ZS5SYWJiaXRMZWdhY3k9bi5fY3JlYXRlSGVscGVyKGgpfSgpLHQucGFkLlplcm9QYWRkaW5nPXtwYWQ6ZnVuY3Rpb24odCxyKXt2YXIgZT00KnI7dC5jbGFtcCgpLHQuc2lnQnl0ZXMrPWUtKHQuc2lnQnl0ZXMlZXx8ZSl9LHVucGFkOmZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10LndvcmRzLGU9dC5zaWdCeXRlcy0xOyEocltlPj4+Ml0+Pj4yNC1lJTQqOCYyNTUpOyllLS07dC5zaWdCeXRlcz1lKzF9fSx0fSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyeXB0by1qcy5taW4uanMubWFw"},{"meta":{"name":"aes.min.js","url":"https://cdn.bootcdn.net/ajax/libs/crypto-js/3.1.9/aes.min.js","ts":1657118213704,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKGUscixpKXsib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZXhwb3J0cz1yKHJlcXVpcmUoIi4vY29yZS5taW4iKSxyZXF1aXJlKCIuL2VuYy1iYXNlNjQubWluIikscmVxdWlyZSgiLi9tZDUubWluIikscmVxdWlyZSgiLi9ldnBrZGYubWluIikscmVxdWlyZSgiLi9jaXBoZXItY29yZS5taW4iKSk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoWyIuL2NvcmUubWluIiwiLi9lbmMtYmFzZTY0Lm1pbiIsIi4vbWQ1Lm1pbiIsIi4vZXZwa2RmLm1pbiIsIi4vY2lwaGVyLWNvcmUubWluIl0scik6cihlLkNyeXB0b0pTKX0odGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgcj1lLGk9ci5saWIsbj1pLkJsb2NrQ2lwaGVyLG89ci5hbGdvLHQ9W10sYz1bXSxzPVtdLGY9W10sYT1bXSxkPVtdLHU9W10sdj1bXSxoPVtdLHk9W107IWZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHI9MDtyPDI1NjtyKyspcjwxMjg/ZVtyXT1yPDwxOmVbcl09cjw8MV4yODM7Zm9yKHZhciBpPTAsbj0wLHI9MDtyPDI1NjtyKyspe3ZhciBvPW5ebjw8MV5uPDwyXm48PDNebjw8NDtvPW8+Pj44XjI1NSZvXjk5LHRbaV09byxjW29dPWk7dmFyIHA9ZVtpXSxsPWVbcF0sXz1lW2xdLGs9MjU3KmVbb11eMTY4NDMwMDgqbztzW2ldPWs8PDI0fGs+Pj44LGZbaV09azw8MTZ8az4+PjE2LGFbaV09azw8OHxrPj4+MjQsZFtpXT1rO3ZhciBrPTE2ODQzMDA5Kl9eNjU1MzcqbF4yNTcqcF4xNjg0MzAwOCppO3Vbb109azw8MjR8az4+PjgsdltvXT1rPDwxNnxrPj4+MTYsaFtvXT1rPDw4fGs+Pj4yNCx5W29dPWssaT8oaT1wXmVbZVtlW19ecF1dXSxuXj1lW2Vbbl1dKTppPW49MX19KCk7dmFyIHA9WzAsMSwyLDQsOCwxNiwzMiw2NCwxMjgsMjcsNTRdLGw9by5BRVM9bi5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7aWYoIXRoaXMuX25Sb3VuZHN8fHRoaXMuX2tleVByaW9yUmVzZXQhPT10aGlzLl9rZXkpe2Zvcih2YXIgZT10aGlzLl9rZXlQcmlvclJlc2V0PXRoaXMuX2tleSxyPWUud29yZHMsaT1lLnNpZ0J5dGVzLzQsbj10aGlzLl9uUm91bmRzPWkrNixvPTQqKG4rMSksYz10aGlzLl9rZXlTY2hlZHVsZT1bXSxzPTA7czxvO3MrKylpZihzPGkpY1tzXT1yW3NdO2Vsc2V7dmFyIGY9Y1tzLTFdO3MlaT9pPjYmJnMlaT09NCYmKGY9dFtmPj4+MjRdPDwyNHx0W2Y+Pj4xNiYyNTVdPDwxNnx0W2Y+Pj44JjI1NV08PDh8dFsyNTUmZl0pOihmPWY8PDh8Zj4+PjI0LGY9dFtmPj4+MjRdPDwyNHx0W2Y+Pj4xNiYyNTVdPDwxNnx0W2Y+Pj44JjI1NV08PDh8dFsyNTUmZl0sZl49cFtzL2l8MF08PDI0KSxjW3NdPWNbcy1pXV5mfWZvcih2YXIgYT10aGlzLl9pbnZLZXlTY2hlZHVsZT1bXSxkPTA7ZDxvO2QrKyl7dmFyIHM9by1kO2lmKGQlNCl2YXIgZj1jW3NdO2Vsc2UgdmFyIGY9Y1tzLTRdO2Q8NHx8czw9ND9hW2RdPWY6YVtkXT11W3RbZj4+PjI0XV1edlt0W2Y+Pj4xNiYyNTVdXV5oW3RbZj4+PjgmMjU1XV1eeVt0WzI1NSZmXV19fX0sZW5jcnlwdEJsb2NrOmZ1bmN0aW9uKGUscil7dGhpcy5fZG9DcnlwdEJsb2NrKGUscix0aGlzLl9rZXlTY2hlZHVsZSxzLGYsYSxkLHQpfSxkZWNyeXB0QmxvY2s6ZnVuY3Rpb24oZSxyKXt2YXIgaT1lW3IrMV07ZVtyKzFdPWVbciszXSxlW3IrM109aSx0aGlzLl9kb0NyeXB0QmxvY2soZSxyLHRoaXMuX2ludktleVNjaGVkdWxlLHUsdixoLHksYyk7dmFyIGk9ZVtyKzFdO2VbcisxXT1lW3IrM10sZVtyKzNdPWl9LF9kb0NyeXB0QmxvY2s6ZnVuY3Rpb24oZSxyLGksbixvLHQsYyxzKXtmb3IodmFyIGY9dGhpcy5fblJvdW5kcyxhPWVbcl1eaVswXSxkPWVbcisxXV5pWzFdLHU9ZVtyKzJdXmlbMl0sdj1lW3IrM11eaVszXSxoPTQseT0xO3k8Zjt5Kyspe3ZhciBwPW5bYT4+PjI0XV5vW2Q+Pj4xNiYyNTVdXnRbdT4+PjgmMjU1XV5jWzI1NSZ2XV5pW2grK10sbD1uW2Q+Pj4yNF1eb1t1Pj4+MTYmMjU1XV50W3Y+Pj44JjI1NV1eY1syNTUmYV1eaVtoKytdLF89blt1Pj4+MjRdXm9bdj4+PjE2JjI1NV1edFthPj4+OCYyNTVdXmNbMjU1JmRdXmlbaCsrXSxrPW5bdj4+PjI0XV5vW2E+Pj4xNiYyNTVdXnRbZD4+PjgmMjU1XV5jWzI1NSZ1XV5pW2grK107YT1wLGQ9bCx1PV8sdj1rfXZhciBwPShzW2E+Pj4yNF08PDI0fHNbZD4+PjE2JjI1NV08PDE2fHNbdT4+PjgmMjU1XTw8OHxzWzI1NSZ2XSleaVtoKytdLGw9KHNbZD4+PjI0XTw8MjR8c1t1Pj4+MTYmMjU1XTw8MTZ8c1t2Pj4+OCYyNTVdPDw4fHNbMjU1JmFdKV5pW2grK10sXz0oc1t1Pj4+MjRdPDwyNHxzW3Y+Pj4xNiYyNTVdPDwxNnxzW2E+Pj44JjI1NV08PDh8c1syNTUmZF0pXmlbaCsrXSxrPShzW3Y+Pj4yNF08PDI0fHNbYT4+PjE2JjI1NV08PDE2fHNbZD4+PjgmMjU1XTw8OHxzWzI1NSZ1XSleaVtoKytdO2Vbcl09cCxlW3IrMV09bCxlW3IrMl09XyxlW3IrM109a30sa2V5U2l6ZTo4fSk7ci5BRVM9bi5fY3JlYXRlSGVscGVyKGwpfSgpLGUuQUVTfSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWFlcy5taW4uanMubWFw"},{"meta":{"name":"enc-utf8.min.js","url":"https://cdn.bootcdn.net/ajax/libs/crypto-js/3.1.9/enc-utf8.min.js","ts":1657118213704,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKGUsbil7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWV4cG9ydHM9bihyZXF1aXJlKCIuL2NvcmUubWluIikpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsiLi9jb3JlLm1pbiJdLG4pOm4oZS5DcnlwdG9KUyl9KHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZW5jLlV0Zjh9KTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jLXV0ZjgubWluLmpzLm1hcA=="},{"meta":{"name":"enc-base64.min.js","url":"https://cdn.bootcdn.net/ajax/libs/crypto-js/3.1.9/enc-base64.min.js","ts":1657118213705,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKHIsZSl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWV4cG9ydHM9ZShyZXF1aXJlKCIuL2NvcmUubWluIikpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsiLi9jb3JlLm1pbiJdLGUpOmUoci5DcnlwdG9KUyl9KHRoaXMsZnVuY3Rpb24ocil7cmV0dXJuIGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShyLGUsdCl7Zm9yKHZhciBuPVtdLGk9MCxvPTA7bzxlO28rKylpZihvJTQpe3ZhciBmPXRbci5jaGFyQ29kZUF0KG8tMSldPDxvJTQqMixjPXRbci5jaGFyQ29kZUF0KG8pXT4+PjYtbyU0KjI7bltpPj4+Ml18PShmfGMpPDwyNC1pJTQqOCxpKyt9cmV0dXJuIGEuY3JlYXRlKG4saSl9dmFyIHQ9cixuPXQubGliLGE9bi5Xb3JkQXJyYXksaT10LmVuYztpLkJhc2U2ND17c3RyaW5naWZ5OmZ1bmN0aW9uKHIpe3ZhciBlPXIud29yZHMsdD1yLnNpZ0J5dGVzLG49dGhpcy5fbWFwO3IuY2xhbXAoKTtmb3IodmFyIGE9W10saT0wO2k8dDtpKz0zKWZvcih2YXIgbz1lW2k+Pj4yXT4+PjI0LWklNCo4JjI1NSxmPWVbaSsxPj4+Ml0+Pj4yNC0oaSsxKSU0KjgmMjU1LGM9ZVtpKzI+Pj4yXT4+PjI0LShpKzIpJTQqOCYyNTUscz1vPDwxNnxmPDw4fGMsaD0wO2g8NCYmaSsuNzUqaDx0O2grKylhLnB1c2gobi5jaGFyQXQocz4+PjYqKDMtaCkmNjMpKTt2YXIgcD1uLmNoYXJBdCg2NCk7aWYocClmb3IoO2EubGVuZ3RoJTQ7KWEucHVzaChwKTtyZXR1cm4gYS5qb2luKCIiKX0scGFyc2U6ZnVuY3Rpb24ocil7dmFyIHQ9ci5sZW5ndGgsbj10aGlzLl9tYXAsYT10aGlzLl9yZXZlcnNlTWFwO2lmKCFhKXthPXRoaXMuX3JldmVyc2VNYXA9W107Zm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspYVtuLmNoYXJDb2RlQXQoaSldPWl9dmFyIG89bi5jaGFyQXQoNjQpO2lmKG8pe3ZhciBmPXIuaW5kZXhPZihvKTtmIT09LTEmJih0PWYpfXJldHVybiBlKHIsdCxhKX0sX21hcDoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0ifX0oKSxyLmVuYy5CYXNlNjR9KTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jLWJhc2U2NC5taW4uanMubWFw"},{"meta":{"name":"jszip.min.js","url":"https://cdn.bootcdn.net/ajax/libs/jszip/3.1.5/jszip.min.js","ts":1657118213706,"mimetype":"text/javascript"},"source":"LyohCgpKU1ppcCB2My4xLjUgLSBBIEphdmFTY3JpcHQgY2xhc3MgZm9yIGdlbmVyYXRpbmcgYW5kIHJlYWRpbmcgemlwIGZpbGVzCjxodHRwOi8vc3R1YXJ0ay5jb20vanN6aXA+CgooYykgMjAwOS0yMDE2IFN0dWFydCBLbmlnaHRsZXkgPHN0dWFydCBbYXRdIHN0dWFydGsuY29tPgpEdWFsIGxpY2VuY2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBvciBHUEx2My4gU2VlIGh0dHBzOi8vcmF3LmdpdGh1Yi5jb20vU3R1ay9qc3ppcC9tYXN0ZXIvTElDRU5TRS5tYXJrZG93bi4KCkpTWmlwIHVzZXMgdGhlIGxpYnJhcnkgcGFrbyByZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgOgpodHRwczovL2dpdGh1Yi5jb20vbm9kZWNhL3Bha28vYmxvYi9tYXN0ZXIvTElDRU5TRQoqLwohZnVuY3Rpb24oYSl7aWYoIm9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSltb2R1bGUuZXhwb3J0cz1hKCk7ZWxzZSBpZigiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxhKTtlbHNle3ZhciBiO2I9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLGIuSlNaaXA9YSgpfX0oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24gYShiLGMsZCl7ZnVuY3Rpb24gZShnLGgpe2lmKCFjW2ddKXtpZighYltnXSl7dmFyIGk9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWgmJmkpcmV0dXJuIGkoZywhMCk7aWYoZilyZXR1cm4gZihnLCEwKTt2YXIgaj1uZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIitnKyInIik7dGhyb3cgai5jb2RlPSJNT0RVTEVfTk9UX0ZPVU5EIixqfXZhciBrPWNbZ109e2V4cG9ydHM6e319O2JbZ11bMF0uY2FsbChrLmV4cG9ydHMsZnVuY3Rpb24oYSl7dmFyIGM9YltnXVsxXVthXTtyZXR1cm4gZShjP2M6YSl9LGssay5leHBvcnRzLGEsYixjLGQpfXJldHVybiBjW2ddLmV4cG9ydHN9Zm9yKHZhciBmPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGc9MDtnPGQubGVuZ3RoO2crKyllKGRbZ10pO3JldHVybiBlfSh7MTpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0Ijt2YXIgZD1hKCIuL3V0aWxzIiksZT1hKCIuL3N1cHBvcnQiKSxmPSJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPSI7Yy5lbmNvZGU9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiLGMsZSxnLGgsaSxqLGs9W10sbD0wLG09YS5sZW5ndGgsbj1tLG89InN0cmluZyIhPT1kLmdldFR5cGVPZihhKTtsPGEubGVuZ3RoOyluPW0tbCxvPyhiPWFbbCsrXSxjPWw8bT9hW2wrK106MCxlPWw8bT9hW2wrK106MCk6KGI9YS5jaGFyQ29kZUF0KGwrKyksYz1sPG0/YS5jaGFyQ29kZUF0KGwrKyk6MCxlPWw8bT9hLmNoYXJDb2RlQXQobCsrKTowKSxnPWI+PjIsaD0oMyZiKTw8NHxjPj40LGk9bj4xPygxNSZjKTw8MnxlPj42OjY0LGo9bj4yPzYzJmU6NjQsay5wdXNoKGYuY2hhckF0KGcpK2YuY2hhckF0KGgpK2YuY2hhckF0KGkpK2YuY2hhckF0KGopKTtyZXR1cm4gay5qb2luKCIiKX0sYy5kZWNvZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGcsaCxpLGosaz0wLGw9MCxtPSJkYXRhOiI7aWYoYS5zdWJzdHIoMCxtLmxlbmd0aCk9PT1tKXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBiYXNlNjQgaW5wdXQsIGl0IGxvb2tzIGxpa2UgYSBkYXRhIHVybC4iKTthPWEucmVwbGFjZSgvW15BLVphLXowLTlcK1wvXD1dL2csIiIpO3ZhciBuPTMqYS5sZW5ndGgvNDtpZihhLmNoYXJBdChhLmxlbmd0aC0xKT09PWYuY2hhckF0KDY0KSYmbi0tLGEuY2hhckF0KGEubGVuZ3RoLTIpPT09Zi5jaGFyQXQoNjQpJiZuLS0sbiUxIT09MCl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgYmFzZTY0IGlucHV0LCBiYWQgY29udGVudCBsZW5ndGguIik7dmFyIG87Zm9yKG89ZS51aW50OGFycmF5P25ldyBVaW50OEFycmF5KDB8bik6bmV3IEFycmF5KDB8bik7azxhLmxlbmd0aDspZz1mLmluZGV4T2YoYS5jaGFyQXQoaysrKSksaD1mLmluZGV4T2YoYS5jaGFyQXQoaysrKSksaT1mLmluZGV4T2YoYS5jaGFyQXQoaysrKSksaj1mLmluZGV4T2YoYS5jaGFyQXQoaysrKSksYj1nPDwyfGg+PjQsYz0oMTUmaCk8PDR8aT4+MixkPSgzJmkpPDw2fGosb1tsKytdPWIsNjQhPT1pJiYob1tsKytdPWMpLDY0IT09aiYmKG9bbCsrXT1kKTtyZXR1cm4gb319LHsiLi9zdXBwb3J0IjozMCwiLi91dGlscyI6MzJ9XSwyOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSxiLGMsZCxlKXt0aGlzLmNvbXByZXNzZWRTaXplPWEsdGhpcy51bmNvbXByZXNzZWRTaXplPWIsdGhpcy5jcmMzMj1jLHRoaXMuY29tcHJlc3Npb249ZCx0aGlzLmNvbXByZXNzZWRDb250ZW50PWV9dmFyIGU9YSgiLi9leHRlcm5hbCIpLGY9YSgiLi9zdHJlYW0vRGF0YVdvcmtlciIpLGc9YSgiLi9zdHJlYW0vRGF0YUxlbmd0aFByb2JlIiksaD1hKCIuL3N0cmVhbS9DcmMzMlByb2JlIiksZz1hKCIuL3N0cmVhbS9EYXRhTGVuZ3RoUHJvYmUiKTtkLnByb3RvdHlwZT17Z2V0Q29udGVudFdvcmtlcjpmdW5jdGlvbigpe3ZhciBhPW5ldyBmKGUuUHJvbWlzZS5yZXNvbHZlKHRoaXMuY29tcHJlc3NlZENvbnRlbnQpKS5waXBlKHRoaXMuY29tcHJlc3Npb24udW5jb21wcmVzc1dvcmtlcigpKS5waXBlKG5ldyBnKCJkYXRhX2xlbmd0aCIpKSxiPXRoaXM7cmV0dXJuIGEub24oImVuZCIsZnVuY3Rpb24oKXtpZih0aGlzLnN0cmVhbUluZm8uZGF0YV9sZW5ndGghPT1iLnVuY29tcHJlc3NlZFNpemUpdGhyb3cgbmV3IEVycm9yKCJCdWcgOiB1bmNvbXByZXNzZWQgZGF0YSBzaXplIG1pc21hdGNoIil9KSxhfSxnZXRDb21wcmVzc2VkV29ya2VyOmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBmKGUuUHJvbWlzZS5yZXNvbHZlKHRoaXMuY29tcHJlc3NlZENvbnRlbnQpKS53aXRoU3RyZWFtSW5mbygiY29tcHJlc3NlZFNpemUiLHRoaXMuY29tcHJlc3NlZFNpemUpLndpdGhTdHJlYW1JbmZvKCJ1bmNvbXByZXNzZWRTaXplIix0aGlzLnVuY29tcHJlc3NlZFNpemUpLndpdGhTdHJlYW1JbmZvKCJjcmMzMiIsdGhpcy5jcmMzMikud2l0aFN0cmVhbUluZm8oImNvbXByZXNzaW9uIix0aGlzLmNvbXByZXNzaW9uKX19LGQuY3JlYXRlV29ya2VyRnJvbT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGEucGlwZShuZXcgaCkucGlwZShuZXcgZygidW5jb21wcmVzc2VkU2l6ZSIpKS5waXBlKGIuY29tcHJlc3NXb3JrZXIoYykpLnBpcGUobmV3IGcoImNvbXByZXNzZWRTaXplIikpLndpdGhTdHJlYW1JbmZvKCJjb21wcmVzc2lvbiIsYil9LGIuZXhwb3J0cz1kfSx7Ii4vZXh0ZXJuYWwiOjYsIi4vc3RyZWFtL0NyYzMyUHJvYmUiOjI1LCIuL3N0cmVhbS9EYXRhTGVuZ3RoUHJvYmUiOjI2LCIuL3N0cmVhbS9EYXRhV29ya2VyIjoyN31dLDM6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7dmFyIGQ9YSgiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciIpO2MuU1RPUkU9e21hZ2ljOiJcMFwwIixjb21wcmVzc1dvcmtlcjpmdW5jdGlvbihhKXtyZXR1cm4gbmV3IGQoIlNUT1JFIGNvbXByZXNzaW9uIil9LHVuY29tcHJlc3NXb3JrZXI6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGQoIlNUT1JFIGRlY29tcHJlc3Npb24iKX19LGMuREVGTEFURT1hKCIuL2ZsYXRlIil9LHsiLi9mbGF0ZSI6NywiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciI6Mjh9XSw0OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoKXtmb3IodmFyIGEsYj1bXSxjPTA7YzwyNTY7YysrKXthPWM7Zm9yKHZhciBkPTA7ZDw4O2QrKylhPTEmYT8zOTg4MjkyMzg0XmE+Pj4xOmE+Pj4xO2JbY109YX1yZXR1cm4gYn1mdW5jdGlvbiBlKGEsYixjLGQpe3ZhciBlPWgsZj1kK2M7YV49LTE7Zm9yKHZhciBnPWQ7ZzxmO2crKylhPWE+Pj44XmVbMjU1JihhXmJbZ10pXTtyZXR1cm4gYV4tMX1mdW5jdGlvbiBmKGEsYixjLGQpe3ZhciBlPWgsZj1kK2M7YV49LTE7Zm9yKHZhciBnPWQ7ZzxmO2crKylhPWE+Pj44XmVbMjU1JihhXmIuY2hhckNvZGVBdChnKSldO3JldHVybiBhXi0xfXZhciBnPWEoIi4vdXRpbHMiKSxoPWQoKTtiLmV4cG9ydHM9ZnVuY3Rpb24oYSxiKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIGF8fCFhLmxlbmd0aClyZXR1cm4gMDt2YXIgYz0ic3RyaW5nIiE9PWcuZ2V0VHlwZU9mKGEpO3JldHVybiBjP2UoMHxiLGEsYS5sZW5ndGgsMCk6ZigwfGIsYSxhLmxlbmd0aCwwKX19LHsiLi91dGlscyI6MzJ9XSw1OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2MuYmFzZTY0PSExLGMuYmluYXJ5PSExLGMuZGlyPSExLGMuY3JlYXRlRm9sZGVycz0hMCxjLmRhdGU9bnVsbCxjLmNvbXByZXNzaW9uPW51bGwsYy5jb21wcmVzc2lvbk9wdGlvbnM9bnVsbCxjLmNvbW1lbnQ9bnVsbCxjLnVuaXhQZXJtaXNzaW9ucz1udWxsLGMuZG9zUGVybWlzc2lvbnM9bnVsbH0se31dLDY6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7dmFyIGQ9bnVsbDtkPSJ1bmRlZmluZWQiIT10eXBlb2YgUHJvbWlzZT9Qcm9taXNlOmEoImxpZSIpLGIuZXhwb3J0cz17UHJvbWlzZTpkfX0se2xpZTo1OH1dLDc6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhLGIpe2guY2FsbCh0aGlzLCJGbGF0ZVdvcmtlci8iK2EpLHRoaXMuX3Bha289bnVsbCx0aGlzLl9wYWtvQWN0aW9uPWEsdGhpcy5fcGFrb09wdGlvbnM9Yix0aGlzLm1ldGE9e319dmFyIGU9InVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OEFycmF5JiYidW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQxNkFycmF5JiYidW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQzMkFycmF5LGY9YSgicGFrbyIpLGc9YSgiLi91dGlscyIpLGg9YSgiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciIpLGk9ZT8idWludDhhcnJheSI6ImFycmF5IjtjLm1hZ2ljPSJcYlwwIixnLmluaGVyaXRzKGQsaCksZC5wcm90b3R5cGUucHJvY2Vzc0NodW5rPWZ1bmN0aW9uKGEpe3RoaXMubWV0YT1hLm1ldGEsbnVsbD09PXRoaXMuX3Bha28mJnRoaXMuX2NyZWF0ZVBha28oKSx0aGlzLl9wYWtvLnB1c2goZy50cmFuc2Zvcm1UbyhpLGEuZGF0YSksITEpfSxkLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbigpe2gucHJvdG90eXBlLmZsdXNoLmNhbGwodGhpcyksbnVsbD09PXRoaXMuX3Bha28mJnRoaXMuX2NyZWF0ZVBha28oKSx0aGlzLl9wYWtvLnB1c2goW10sITApfSxkLnByb3RvdHlwZS5jbGVhblVwPWZ1bmN0aW9uKCl7aC5wcm90b3R5cGUuY2xlYW5VcC5jYWxsKHRoaXMpLHRoaXMuX3Bha289bnVsbH0sZC5wcm90b3R5cGUuX2NyZWF0ZVBha289ZnVuY3Rpb24oKXt0aGlzLl9wYWtvPW5ldyBmW3RoaXMuX3Bha29BY3Rpb25dKHtyYXc6ITAsbGV2ZWw6dGhpcy5fcGFrb09wdGlvbnMubGV2ZWx8fC0xfSk7dmFyIGE9dGhpczt0aGlzLl9wYWtvLm9uRGF0YT1mdW5jdGlvbihiKXthLnB1c2goe2RhdGE6YixtZXRhOmEubWV0YX0pfX0sYy5jb21wcmVzc1dvcmtlcj1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IGQoIkRlZmxhdGUiLGEpfSxjLnVuY29tcHJlc3NXb3JrZXI9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGQoIkluZmxhdGUiLHt9KX19LHsiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciI6MjgsIi4vdXRpbHMiOjMyLHBha286NTl9XSw4OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSxiLGMsZCl7Zi5jYWxsKHRoaXMsIlppcEZpbGVXb3JrZXIiKSx0aGlzLmJ5dGVzV3JpdHRlbj0wLHRoaXMuemlwQ29tbWVudD1iLHRoaXMuemlwUGxhdGZvcm09Yyx0aGlzLmVuY29kZUZpbGVOYW1lPWQsdGhpcy5zdHJlYW1GaWxlcz1hLHRoaXMuYWNjdW11bGF0ZT0hMSx0aGlzLmNvbnRlbnRCdWZmZXI9W10sdGhpcy5kaXJSZWNvcmRzPVtdLHRoaXMuY3VycmVudFNvdXJjZU9mZnNldD0wLHRoaXMuZW50cmllc0NvdW50PTAsdGhpcy5jdXJyZW50RmlsZT1udWxsLHRoaXMuX3NvdXJjZXM9W119dmFyIGU9YSgiLi4vdXRpbHMiKSxmPWEoIi4uL3N0cmVhbS9HZW5lcmljV29ya2VyIiksZz1hKCIuLi91dGY4IiksaD1hKCIuLi9jcmMzMiIpLGk9YSgiLi4vc2lnbmF0dXJlIiksaj1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9IiI7Zm9yKGM9MDtjPGI7YysrKWQrPVN0cmluZy5mcm9tQ2hhckNvZGUoMjU1JmEpLGE+Pj49ODtyZXR1cm4gZH0saz1mdW5jdGlvbihhLGIpe3ZhciBjPWE7cmV0dXJuIGF8fChjPWI/MTY4OTM6MzMyMDQpLCg2NTUzNSZjKTw8MTZ9LGw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gNjMmKGF8fDApfSxtPWZ1bmN0aW9uKGEsYixjLGQsZixtKXt2YXIgbixvLHA9YS5maWxlLHE9YS5jb21wcmVzc2lvbixyPW0hPT1nLnV0ZjhlbmNvZGUscz1lLnRyYW5zZm9ybVRvKCJzdHJpbmciLG0ocC5uYW1lKSksdD1lLnRyYW5zZm9ybVRvKCJzdHJpbmciLGcudXRmOGVuY29kZShwLm5hbWUpKSx1PXAuY29tbWVudCx2PWUudHJhbnNmb3JtVG8oInN0cmluZyIsbSh1KSksdz1lLnRyYW5zZm9ybVRvKCJzdHJpbmciLGcudXRmOGVuY29kZSh1KSkseD10Lmxlbmd0aCE9PXAubmFtZS5sZW5ndGgseT13Lmxlbmd0aCE9PXUubGVuZ3RoLHo9IiIsQT0iIixCPSIiLEM9cC5kaXIsRD1wLmRhdGUsRT17Y3JjMzI6MCxjb21wcmVzc2VkU2l6ZTowLHVuY29tcHJlc3NlZFNpemU6MH07YiYmIWN8fChFLmNyYzMyPWEuY3JjMzIsRS5jb21wcmVzc2VkU2l6ZT1hLmNvbXByZXNzZWRTaXplLEUudW5jb21wcmVzc2VkU2l6ZT1hLnVuY29tcHJlc3NlZFNpemUpO3ZhciBGPTA7YiYmKEZ8PTgpLHJ8fCF4JiYheXx8KEZ8PTIwNDgpO3ZhciBHPTAsSD0wO0MmJihHfD0xNiksIlVOSVgiPT09Zj8oSD03OTgsR3w9ayhwLnVuaXhQZXJtaXNzaW9ucyxDKSk6KEg9MjAsR3w9bChwLmRvc1Blcm1pc3Npb25zLEMpKSxuPUQuZ2V0VVRDSG91cnMoKSxuPDw9NixufD1ELmdldFVUQ01pbnV0ZXMoKSxuPDw9NSxufD1ELmdldFVUQ1NlY29uZHMoKS8yLG89RC5nZXRVVENGdWxsWWVhcigpLTE5ODAsbzw8PTQsb3w9RC5nZXRVVENNb250aCgpKzEsbzw8PTUsb3w9RC5nZXRVVENEYXRlKCkseCYmKEE9aigxLDEpK2ooaChzKSw0KSt0LHorPSJ1cCIraihBLmxlbmd0aCwyKStBKSx5JiYoQj1qKDEsMSkraihoKHYpLDQpK3cseis9InVjIitqKEIubGVuZ3RoLDIpK0IpO3ZhciBJPSIiO0krPSJcblwwIixJKz1qKEYsMiksSSs9cS5tYWdpYyxJKz1qKG4sMiksSSs9aihvLDIpLEkrPWooRS5jcmMzMiw0KSxJKz1qKEUuY29tcHJlc3NlZFNpemUsNCksSSs9aihFLnVuY29tcHJlc3NlZFNpemUsNCksSSs9aihzLmxlbmd0aCwyKSxJKz1qKHoubGVuZ3RoLDIpO3ZhciBKPWkuTE9DQUxfRklMRV9IRUFERVIrSStzK3osSz1pLkNFTlRSQUxfRklMRV9IRUFERVIraihILDIpK0kraih2Lmxlbmd0aCwyKSsiXDBcMFwwXDAiK2ooRyw0KStqKGQsNCkrcyt6K3Y7cmV0dXJue2ZpbGVSZWNvcmQ6SixkaXJSZWNvcmQ6S319LG49ZnVuY3Rpb24oYSxiLGMsZCxmKXt2YXIgZz0iIixoPWUudHJhbnNmb3JtVG8oInN0cmluZyIsZihkKSk7cmV0dXJuIGc9aS5DRU5UUkFMX0RJUkVDVE9SWV9FTkQrIlwwXDBcMFwwIitqKGEsMikraihhLDIpK2ooYiw0KStqKGMsNCkraihoLmxlbmd0aCwyKStofSxvPWZ1bmN0aW9uKGEpe3ZhciBiPSIiO3JldHVybiBiPWkuREFUQV9ERVNDUklQVE9SK2ooYS5jcmMzMiw0KStqKGEuY29tcHJlc3NlZFNpemUsNCkraihhLnVuY29tcHJlc3NlZFNpemUsNCl9O2UuaW5oZXJpdHMoZCxmKSxkLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKGEpe3ZhciBiPWEubWV0YS5wZXJjZW50fHwwLGM9dGhpcy5lbnRyaWVzQ291bnQsZD10aGlzLl9zb3VyY2VzLmxlbmd0aDt0aGlzLmFjY3VtdWxhdGU/dGhpcy5jb250ZW50QnVmZmVyLnB1c2goYSk6KHRoaXMuYnl0ZXNXcml0dGVuKz1hLmRhdGEubGVuZ3RoLGYucHJvdG90eXBlLnB1c2guY2FsbCh0aGlzLHtkYXRhOmEuZGF0YSxtZXRhOntjdXJyZW50RmlsZTp0aGlzLmN1cnJlbnRGaWxlLHBlcmNlbnQ6Yz8oYisxMDAqKGMtZC0xKSkvYzoxMDB9fSkpfSxkLnByb3RvdHlwZS5vcGVuZWRTb3VyY2U9ZnVuY3Rpb24oYSl7dGhpcy5jdXJyZW50U291cmNlT2Zmc2V0PXRoaXMuYnl0ZXNXcml0dGVuLHRoaXMuY3VycmVudEZpbGU9YS5maWxlLm5hbWU7dmFyIGI9dGhpcy5zdHJlYW1GaWxlcyYmIWEuZmlsZS5kaXI7aWYoYil7dmFyIGM9bShhLGIsITEsdGhpcy5jdXJyZW50U291cmNlT2Zmc2V0LHRoaXMuemlwUGxhdGZvcm0sdGhpcy5lbmNvZGVGaWxlTmFtZSk7dGhpcy5wdXNoKHtkYXRhOmMuZmlsZVJlY29yZCxtZXRhOntwZXJjZW50OjB9fSl9ZWxzZSB0aGlzLmFjY3VtdWxhdGU9ITB9LGQucHJvdG90eXBlLmNsb3NlZFNvdXJjZT1mdW5jdGlvbihhKXt0aGlzLmFjY3VtdWxhdGU9ITE7dmFyIGI9dGhpcy5zdHJlYW1GaWxlcyYmIWEuZmlsZS5kaXIsYz1tKGEsYiwhMCx0aGlzLmN1cnJlbnRTb3VyY2VPZmZzZXQsdGhpcy56aXBQbGF0Zm9ybSx0aGlzLmVuY29kZUZpbGVOYW1lKTtpZih0aGlzLmRpclJlY29yZHMucHVzaChjLmRpclJlY29yZCksYil0aGlzLnB1c2goe2RhdGE6byhhKSxtZXRhOntwZXJjZW50OjEwMH19KTtlbHNlIGZvcih0aGlzLnB1c2goe2RhdGE6Yy5maWxlUmVjb3JkLG1ldGE6e3BlcmNlbnQ6MH19KTt0aGlzLmNvbnRlbnRCdWZmZXIubGVuZ3RoOyl0aGlzLnB1c2godGhpcy5jb250ZW50QnVmZmVyLnNoaWZ0KCkpO3RoaXMuY3VycmVudEZpbGU9bnVsbH0sZC5wcm90b3R5cGUuZmx1c2g9ZnVuY3Rpb24oKXtmb3IodmFyIGE9dGhpcy5ieXRlc1dyaXR0ZW4sYj0wO2I8dGhpcy5kaXJSZWNvcmRzLmxlbmd0aDtiKyspdGhpcy5wdXNoKHtkYXRhOnRoaXMuZGlyUmVjb3Jkc1tiXSxtZXRhOntwZXJjZW50OjEwMH19KTt2YXIgYz10aGlzLmJ5dGVzV3JpdHRlbi1hLGQ9bih0aGlzLmRpclJlY29yZHMubGVuZ3RoLGMsYSx0aGlzLnppcENvbW1lbnQsdGhpcy5lbmNvZGVGaWxlTmFtZSk7dGhpcy5wdXNoKHtkYXRhOmQsbWV0YTp7cGVyY2VudDoxMDB9fSl9LGQucHJvdG90eXBlLnByZXBhcmVOZXh0U291cmNlPWZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91cz10aGlzLl9zb3VyY2VzLnNoaWZ0KCksdGhpcy5vcGVuZWRTb3VyY2UodGhpcy5wcmV2aW91cy5zdHJlYW1JbmZvKSx0aGlzLmlzUGF1c2VkP3RoaXMucHJldmlvdXMucGF1c2UoKTp0aGlzLnByZXZpb3VzLnJlc3VtZSgpfSxkLnByb3RvdHlwZS5yZWdpc3RlclByZXZpb3VzPWZ1bmN0aW9uKGEpe3RoaXMuX3NvdXJjZXMucHVzaChhKTt2YXIgYj10aGlzO3JldHVybiBhLm9uKCJkYXRhIixmdW5jdGlvbihhKXtiLnByb2Nlc3NDaHVuayhhKX0pLGEub24oImVuZCIsZnVuY3Rpb24oKXtiLmNsb3NlZFNvdXJjZShiLnByZXZpb3VzLnN0cmVhbUluZm8pLGIuX3NvdXJjZXMubGVuZ3RoP2IucHJlcGFyZU5leHRTb3VyY2UoKTpiLmVuZCgpfSksYS5vbigiZXJyb3IiLGZ1bmN0aW9uKGEpe2IuZXJyb3IoYSl9KSx0aGlzfSxkLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXtyZXR1cm4hIWYucHJvdG90eXBlLnJlc3VtZS5jYWxsKHRoaXMpJiYoIXRoaXMucHJldmlvdXMmJnRoaXMuX3NvdXJjZXMubGVuZ3RoPyh0aGlzLnByZXBhcmVOZXh0U291cmNlKCksITApOnRoaXMucHJldmlvdXN8fHRoaXMuX3NvdXJjZXMubGVuZ3RofHx0aGlzLmdlbmVyYXRlZEVycm9yP3ZvaWQgMDoodGhpcy5lbmQoKSwhMCkpfSxkLnByb3RvdHlwZS5lcnJvcj1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9zb3VyY2VzO2lmKCFmLnByb3RvdHlwZS5lcnJvci5jYWxsKHRoaXMsYSkpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aDtjKyspdHJ5e2JbY10uZXJyb3IoYSl9Y2F0Y2goYSl7fXJldHVybiEwfSxkLnByb3RvdHlwZS5sb2NrPWZ1bmN0aW9uKCl7Zi5wcm90b3R5cGUubG9jay5jYWxsKHRoaXMpO2Zvcih2YXIgYT10aGlzLl9zb3VyY2VzLGI9MDtiPGEubGVuZ3RoO2IrKylhW2JdLmxvY2soKX0sYi5leHBvcnRzPWR9LHsiLi4vY3JjMzIiOjQsIi4uL3NpZ25hdHVyZSI6MjMsIi4uL3N0cmVhbS9HZW5lcmljV29ya2VyIjoyOCwiLi4vdXRmOCI6MzEsIi4uL3V0aWxzIjozMn1dLDk6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7dmFyIGQ9YSgiLi4vY29tcHJlc3Npb25zIiksZT1hKCIuL1ppcEZpbGVXb3JrZXIiKSxmPWZ1bmN0aW9uKGEsYil7dmFyIGM9YXx8YixlPWRbY107aWYoIWUpdGhyb3cgbmV3IEVycm9yKGMrIiBpcyBub3QgYSB2YWxpZCBjb21wcmVzc2lvbiBtZXRob2QgISIpO3JldHVybiBlfTtjLmdlbmVyYXRlV29ya2VyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1uZXcgZShiLnN0cmVhbUZpbGVzLGMsYi5wbGF0Zm9ybSxiLmVuY29kZUZpbGVOYW1lKSxnPTA7dHJ5e2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe2crKzt2YXIgZT1mKGMub3B0aW9ucy5jb21wcmVzc2lvbixiLmNvbXByZXNzaW9uKSxoPWMub3B0aW9ucy5jb21wcmVzc2lvbk9wdGlvbnN8fGIuY29tcHJlc3Npb25PcHRpb25zfHx7fSxpPWMuZGlyLGo9Yy5kYXRlO2MuX2NvbXByZXNzV29ya2VyKGUsaCkud2l0aFN0cmVhbUluZm8oImZpbGUiLHtuYW1lOmEsZGlyOmksZGF0ZTpqLGNvbW1lbnQ6Yy5jb21tZW50fHwiIix1bml4UGVybWlzc2lvbnM6Yy51bml4UGVybWlzc2lvbnMsZG9zUGVybWlzc2lvbnM6Yy5kb3NQZXJtaXNzaW9uc30pLnBpcGUoZCl9KSxkLmVudHJpZXNDb3VudD1nfWNhdGNoKGgpe2QuZXJyb3IoaCl9cmV0dXJuIGR9fSx7Ii4uL2NvbXByZXNzaW9ucyI6MywiLi9aaXBGaWxlV29ya2VyIjo4fV0sMTA6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZCgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGQpKXJldHVybiBuZXcgZDtpZihhcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiVGhlIGNvbnN0cnVjdG9yIHdpdGggcGFyYW1ldGVycyBoYXMgYmVlbiByZW1vdmVkIGluIEpTWmlwIDMuMCwgcGxlYXNlIGNoZWNrIHRoZSB1cGdyYWRlIGd1aWRlLiIpO3RoaXMuZmlsZXM9e30sdGhpcy5jb21tZW50PW51bGwsdGhpcy5yb290PSIiLHRoaXMuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgZDtmb3IodmFyIGIgaW4gdGhpcykiZnVuY3Rpb24iIT10eXBlb2YgdGhpc1tiXSYmKGFbYl09dGhpc1tiXSk7cmV0dXJuIGF9fWQucHJvdG90eXBlPWEoIi4vb2JqZWN0IiksZC5wcm90b3R5cGUubG9hZEFzeW5jPWEoIi4vbG9hZCIpLGQuc3VwcG9ydD1hKCIuL3N1cHBvcnQiKSxkLmRlZmF1bHRzPWEoIi4vZGVmYXVsdHMiKSxkLnZlcnNpb249IjMuMS41IixkLmxvYWRBc3luYz1mdW5jdGlvbihhLGIpe3JldHVybihuZXcgZCkubG9hZEFzeW5jKGEsYil9LGQuZXh0ZXJuYWw9YSgiLi9leHRlcm5hbCIpLGIuZXhwb3J0cz1kfSx7Ii4vZGVmYXVsdHMiOjUsIi4vZXh0ZXJuYWwiOjYsIi4vbG9hZCI6MTEsIi4vb2JqZWN0IjoxNSwiLi9zdXBwb3J0IjozMH1dLDExOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7cmV0dXJuIG5ldyBmLlByb21pc2UoZnVuY3Rpb24oYixjKXt2YXIgZD1hLmRlY29tcHJlc3NlZC5nZXRDb250ZW50V29ya2VyKCkucGlwZShuZXcgaSk7ZC5vbigiZXJyb3IiLGZ1bmN0aW9uKGEpe2MoYSl9KS5vbigiZW5kIixmdW5jdGlvbigpe2Quc3RyZWFtSW5mby5jcmMzMiE9PWEuZGVjb21wcmVzc2VkLmNyYzMyP2MobmV3IEVycm9yKCJDb3JydXB0ZWQgemlwIDogQ1JDMzIgbWlzbWF0Y2giKSk6YigpfSkucmVzdW1lKCl9KX12YXIgZT1hKCIuL3V0aWxzIiksZj1hKCIuL2V4dGVybmFsIiksZz1hKCIuL3V0ZjgiKSxlPWEoIi4vdXRpbHMiKSxoPWEoIi4vemlwRW50cmllcyIpLGk9YSgiLi9zdHJlYW0vQ3JjMzJQcm9iZSIpLGo9YSgiLi9ub2RlanNVdGlscyIpO2IuZXhwb3J0cz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXM7cmV0dXJuIGI9ZS5leHRlbmQoYnx8e30se2Jhc2U2NDohMSxjaGVja0NSQzMyOiExLG9wdGltaXplZEJpbmFyeVN0cmluZzohMSxjcmVhdGVGb2xkZXJzOiExLGRlY29kZUZpbGVOYW1lOmcudXRmOGRlY29kZX0pLGouaXNOb2RlJiZqLmlzU3RyZWFtKGEpP2YuUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCJKU1ppcCBjYW4ndCBhY2NlcHQgYSBzdHJlYW0gd2hlbiBsb2FkaW5nIGEgemlwIGZpbGUuIikpOmUucHJlcGFyZUNvbnRlbnQoInRoZSBsb2FkZWQgemlwIGZpbGUiLGEsITAsYi5vcHRpbWl6ZWRCaW5hcnlTdHJpbmcsYi5iYXNlNjQpLnRoZW4oZnVuY3Rpb24oYSl7dmFyIGM9bmV3IGgoYik7cmV0dXJuIGMubG9hZChhKSxjfSkudGhlbihmdW5jdGlvbihhKXt2YXIgYz1bZi5Qcm9taXNlLnJlc29sdmUoYSldLGU9YS5maWxlcztpZihiLmNoZWNrQ1JDMzIpZm9yKHZhciBnPTA7ZzxlLmxlbmd0aDtnKyspYy5wdXNoKGQoZVtnXSkpO3JldHVybiBmLlByb21pc2UuYWxsKGMpfSkudGhlbihmdW5jdGlvbihhKXtmb3IodmFyIGQ9YS5zaGlmdCgpLGU9ZC5maWxlcyxmPTA7ZjxlLmxlbmd0aDtmKyspe3ZhciBnPWVbZl07Yy5maWxlKGcuZmlsZU5hbWVTdHIsZy5kZWNvbXByZXNzZWQse2JpbmFyeTohMCxvcHRpbWl6ZWRCaW5hcnlTdHJpbmc6ITAsZGF0ZTpnLmRhdGUsZGlyOmcuZGlyLGNvbW1lbnQ6Zy5maWxlQ29tbWVudFN0ci5sZW5ndGg/Zy5maWxlQ29tbWVudFN0cjpudWxsLHVuaXhQZXJtaXNzaW9uczpnLnVuaXhQZXJtaXNzaW9ucyxkb3NQZXJtaXNzaW9uczpnLmRvc1Blcm1pc3Npb25zLGNyZWF0ZUZvbGRlcnM6Yi5jcmVhdGVGb2xkZXJzfSl9cmV0dXJuIGQuemlwQ29tbWVudC5sZW5ndGgmJihjLmNvbW1lbnQ9ZC56aXBDb21tZW50KSxjfSl9fSx7Ii4vZXh0ZXJuYWwiOjYsIi4vbm9kZWpzVXRpbHMiOjE0LCIuL3N0cmVhbS9DcmMzMlByb2JlIjoyNSwiLi91dGY4IjozMSwiLi91dGlscyI6MzIsIi4vemlwRW50cmllcyI6MzN9XSwxMjpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEsYil7Zi5jYWxsKHRoaXMsIk5vZGVqcyBzdHJlYW0gaW5wdXQgYWRhcHRlciBmb3IgIithKSx0aGlzLl91cHN0cmVhbUVuZGVkPSExLHRoaXMuX2JpbmRTdHJlYW0oYil9dmFyIGU9YSgiLi4vdXRpbHMiKSxmPWEoIi4uL3N0cmVhbS9HZW5lcmljV29ya2VyIik7ZS5pbmhlcml0cyhkLGYpLGQucHJvdG90eXBlLl9iaW5kU3RyZWFtPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7dGhpcy5fc3RyZWFtPWEsYS5wYXVzZSgpLGEub24oImRhdGEiLGZ1bmN0aW9uKGEpe2IucHVzaCh7ZGF0YTphLG1ldGE6e3BlcmNlbnQ6MH19KX0pLm9uKCJlcnJvciIsZnVuY3Rpb24oYSl7Yi5pc1BhdXNlZD90aGlzLmdlbmVyYXRlZEVycm9yPWE6Yi5lcnJvcihhKX0pLm9uKCJlbmQiLGZ1bmN0aW9uKCl7Yi5pc1BhdXNlZD9iLl91cHN0cmVhbUVuZGVkPSEwOmIuZW5kKCl9KX0sZC5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtyZXR1cm4hIWYucHJvdG90eXBlLnBhdXNlLmNhbGwodGhpcykmJih0aGlzLl9zdHJlYW0ucGF1c2UoKSwhMCl9LGQucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe3JldHVybiEhZi5wcm90b3R5cGUucmVzdW1lLmNhbGwodGhpcykmJih0aGlzLl91cHN0cmVhbUVuZGVkP3RoaXMuZW5kKCk6dGhpcy5fc3RyZWFtLnJlc3VtZSgpLCEwKX0sYi5leHBvcnRzPWR9LHsiLi4vc3RyZWFtL0dlbmVyaWNXb3JrZXIiOjI4LCIuLi91dGlscyI6MzJ9XSwxMzpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEsYixjKXtlLmNhbGwodGhpcyxiKSx0aGlzLl9oZWxwZXI9YTt2YXIgZD10aGlzO2Eub24oImRhdGEiLGZ1bmN0aW9uKGEsYil7ZC5wdXNoKGEpfHxkLl9oZWxwZXIucGF1c2UoKSxjJiZjKGIpfSkub24oImVycm9yIixmdW5jdGlvbihhKXtkLmVtaXQoImVycm9yIixhKX0pLm9uKCJlbmQiLGZ1bmN0aW9uKCl7ZC5wdXNoKG51bGwpfSl9dmFyIGU9YSgicmVhZGFibGUtc3RyZWFtIikuUmVhZGFibGUsZj1hKCIuLi91dGlscyIpO2YuaW5oZXJpdHMoZCxlKSxkLnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbigpe3RoaXMuX2hlbHBlci5yZXN1bWUoKX0sYi5leHBvcnRzPWR9LHsiLi4vdXRpbHMiOjMyLCJyZWFkYWJsZS1zdHJlYW0iOjE2fV0sMTQ6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7Yi5leHBvcnRzPXtpc05vZGU6InVuZGVmaW5lZCIhPXR5cGVvZiBCdWZmZXIsbmV3QnVmZmVyRnJvbTpmdW5jdGlvbihhLGIpe3JldHVybiBuZXcgQnVmZmVyKGEsYil9LGFsbG9jQnVmZmVyOmZ1bmN0aW9uKGEpe3JldHVybiBCdWZmZXIuYWxsb2M/QnVmZmVyLmFsbG9jKGEpOm5ldyBCdWZmZXIoYSl9LGlzQnVmZmVyOmZ1bmN0aW9uKGEpe3JldHVybiBCdWZmZXIuaXNCdWZmZXIoYSl9LGlzU3RyZWFtOmZ1bmN0aW9uKGEpe3JldHVybiBhJiYiZnVuY3Rpb24iPT10eXBlb2YgYS5vbiYmImZ1bmN0aW9uIj09dHlwZW9mIGEucGF1c2UmJiJmdW5jdGlvbiI9PXR5cGVvZiBhLnJlc3VtZX19fSx7fV0sMTU6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhKXtyZXR1cm4iW29iamVjdCBSZWdFeHBdIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKX12YXIgZT1hKCIuL3V0ZjgiKSxmPWEoIi4vdXRpbHMiKSxnPWEoIi4vc3RyZWFtL0dlbmVyaWNXb3JrZXIiKSxoPWEoIi4vc3RyZWFtL1N0cmVhbUhlbHBlciIpLGk9YSgiLi9kZWZhdWx0cyIpLGo9YSgiLi9jb21wcmVzc2VkT2JqZWN0Iiksaz1hKCIuL3ppcE9iamVjdCIpLGw9YSgiLi9nZW5lcmF0ZSIpLG09YSgiLi9ub2RlanNVdGlscyIpLG49YSgiLi9ub2RlanMvTm9kZWpzU3RyZWFtSW5wdXRBZGFwdGVyIiksbz1mdW5jdGlvbihhLGIsYyl7dmFyIGQsZT1mLmdldFR5cGVPZihiKSxoPWYuZXh0ZW5kKGN8fHt9LGkpO2guZGF0ZT1oLmRhdGV8fG5ldyBEYXRlLG51bGwhPT1oLmNvbXByZXNzaW9uJiYoaC5jb21wcmVzc2lvbj1oLmNvbXByZXNzaW9uLnRvVXBwZXJDYXNlKCkpLCJzdHJpbmciPT10eXBlb2YgaC51bml4UGVybWlzc2lvbnMmJihoLnVuaXhQZXJtaXNzaW9ucz1wYXJzZUludChoLnVuaXhQZXJtaXNzaW9ucyw4KSksaC51bml4UGVybWlzc2lvbnMmJjE2Mzg0JmgudW5peFBlcm1pc3Npb25zJiYoaC5kaXI9ITApLGguZG9zUGVybWlzc2lvbnMmJjE2JmguZG9zUGVybWlzc2lvbnMmJihoLmRpcj0hMCksaC5kaXImJihhPXEoYSkpLGguY3JlYXRlRm9sZGVycyYmKGQ9cChhKSkmJnIuY2FsbCh0aGlzLGQsITApO3ZhciBsPSJzdHJpbmciPT09ZSYmaC5iaW5hcnk9PT0hMSYmaC5iYXNlNjQ9PT0hMTtjJiYidW5kZWZpbmVkIiE9dHlwZW9mIGMuYmluYXJ5fHwoaC5iaW5hcnk9IWwpO3ZhciBvPWIgaW5zdGFuY2VvZiBqJiYwPT09Yi51bmNvbXByZXNzZWRTaXplOyhvfHxoLmRpcnx8IWJ8fDA9PT1iLmxlbmd0aCkmJihoLmJhc2U2ND0hMSxoLmJpbmFyeT0hMCxiPSIiLGguY29tcHJlc3Npb249IlNUT1JFIixlPSJzdHJpbmciKTt2YXIgcz1udWxsO3M9YiBpbnN0YW5jZW9mIGp8fGIgaW5zdGFuY2VvZiBnP2I6bS5pc05vZGUmJm0uaXNTdHJlYW0oYik/bmV3IG4oYSxiKTpmLnByZXBhcmVDb250ZW50KGEsYixoLmJpbmFyeSxoLm9wdGltaXplZEJpbmFyeVN0cmluZyxoLmJhc2U2NCk7dmFyIHQ9bmV3IGsoYSxzLGgpO3RoaXMuZmlsZXNbYV09dH0scD1mdW5jdGlvbihhKXsiLyI9PT1hLnNsaWNlKC0xKSYmKGE9YS5zdWJzdHJpbmcoMCxhLmxlbmd0aC0xKSk7dmFyIGI9YS5sYXN0SW5kZXhPZigiLyIpO3JldHVybiBiPjA/YS5zdWJzdHJpbmcoMCxiKToiIn0scT1mdW5jdGlvbihhKXtyZXR1cm4iLyIhPT1hLnNsaWNlKC0xKSYmKGErPSIvIiksYX0scj1mdW5jdGlvbihhLGIpe3JldHVybiBiPSJ1bmRlZmluZWQiIT10eXBlb2YgYj9iOmkuY3JlYXRlRm9sZGVycyxhPXEoYSksdGhpcy5maWxlc1thXXx8by5jYWxsKHRoaXMsYSxudWxsLHtkaXI6ITAsY3JlYXRlRm9sZGVyczpifSksdGhpcy5maWxlc1thXX0scz17bG9hZDpmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigiVGhpcyBtZXRob2QgaGFzIGJlZW4gcmVtb3ZlZCBpbiBKU1ppcCAzLjAsIHBsZWFzZSBjaGVjayB0aGUgdXBncmFkZSBndWlkZS4iKX0sZm9yRWFjaDpmdW5jdGlvbihhKXt2YXIgYixjLGQ7Zm9yKGIgaW4gdGhpcy5maWxlcyl0aGlzLmZpbGVzLmhhc093blByb3BlcnR5KGIpJiYoZD10aGlzLmZpbGVzW2JdLGM9Yi5zbGljZSh0aGlzLnJvb3QubGVuZ3RoLGIubGVuZ3RoKSxjJiZiLnNsaWNlKDAsdGhpcy5yb290Lmxlbmd0aCk9PT10aGlzLnJvb3QmJmEoYyxkKSl9LGZpbHRlcjpmdW5jdGlvbihhKXt2YXIgYj1bXTtyZXR1cm4gdGhpcy5mb3JFYWNoKGZ1bmN0aW9uKGMsZCl7YShjLGQpJiZiLnB1c2goZCl9KSxifSxmaWxlOmZ1bmN0aW9uKGEsYixjKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aCl7aWYoZChhKSl7dmFyIGU9YTtyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oYSxiKXtyZXR1cm4hYi5kaXImJmUudGVzdChhKX0pfXZhciBmPXRoaXMuZmlsZXNbdGhpcy5yb290K2FdO3JldHVybiBmJiYhZi5kaXI/ZjpudWxsfXJldHVybiBhPXRoaXMucm9vdCthLG8uY2FsbCh0aGlzLGEsYixjKSx0aGlzfSxmb2xkZXI6ZnVuY3Rpb24oYSl7aWYoIWEpcmV0dXJuIHRoaXM7aWYoZChhKSlyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oYixjKXtyZXR1cm4gYy5kaXImJmEudGVzdChiKX0pO3ZhciBiPXRoaXMucm9vdCthLGM9ci5jYWxsKHRoaXMsYiksZT10aGlzLmNsb25lKCk7cmV0dXJuIGUucm9vdD1jLm5hbWUsZX0scmVtb3ZlOmZ1bmN0aW9uKGEpe2E9dGhpcy5yb290K2E7dmFyIGI9dGhpcy5maWxlc1thXTtpZihifHwoIi8iIT09YS5zbGljZSgtMSkmJihhKz0iLyIpLGI9dGhpcy5maWxlc1thXSksYiYmIWIuZGlyKWRlbGV0ZSB0aGlzLmZpbGVzW2FdO2Vsc2UgZm9yKHZhciBjPXRoaXMuZmlsdGVyKGZ1bmN0aW9uKGIsYyl7cmV0dXJuIGMubmFtZS5zbGljZSgwLGEubGVuZ3RoKT09PWF9KSxkPTA7ZDxjLmxlbmd0aDtkKyspZGVsZXRlIHRoaXMuZmlsZXNbY1tkXS5uYW1lXTtyZXR1cm4gdGhpc30sZ2VuZXJhdGU6ZnVuY3Rpb24oYSl7dGhyb3cgbmV3IEVycm9yKCJUaGlzIG1ldGhvZCBoYXMgYmVlbiByZW1vdmVkIGluIEpTWmlwIDMuMCwgcGxlYXNlIGNoZWNrIHRoZSB1cGdyYWRlIGd1aWRlLiIpfSxnZW5lcmF0ZUludGVybmFsU3RyZWFtOmZ1bmN0aW9uKGEpe3ZhciBiLGM9e307dHJ5e2lmKGM9Zi5leHRlbmQoYXx8e30se3N0cmVhbUZpbGVzOiExLGNvbXByZXNzaW9uOiJTVE9SRSIsY29tcHJlc3Npb25PcHRpb25zOm51bGwsdHlwZToiIixwbGF0Zm9ybToiRE9TIixjb21tZW50Om51bGwsbWltZVR5cGU6ImFwcGxpY2F0aW9uL3ppcCIsZW5jb2RlRmlsZU5hbWU6ZS51dGY4ZW5jb2RlfSksYy50eXBlPWMudHlwZS50b0xvd2VyQ2FzZSgpLGMuY29tcHJlc3Npb249Yy5jb21wcmVzc2lvbi50b1VwcGVyQ2FzZSgpLCJiaW5hcnlzdHJpbmciPT09Yy50eXBlJiYoYy50eXBlPSJzdHJpbmciKSwhYy50eXBlKXRocm93IG5ldyBFcnJvcigiTm8gb3V0cHV0IHR5cGUgc3BlY2lmaWVkLiIpO2YuY2hlY2tTdXBwb3J0KGMudHlwZSksImRhcndpbiIhPT1jLnBsYXRmb3JtJiYiZnJlZWJzZCIhPT1jLnBsYXRmb3JtJiYibGludXgiIT09Yy5wbGF0Zm9ybSYmInN1bm9zIiE9PWMucGxhdGZvcm18fChjLnBsYXRmb3JtPSJVTklYIiksIndpbjMyIj09PWMucGxhdGZvcm0mJihjLnBsYXRmb3JtPSJET1MiKTt2YXIgZD1jLmNvbW1lbnR8fHRoaXMuY29tbWVudHx8IiI7Yj1sLmdlbmVyYXRlV29ya2VyKHRoaXMsYyxkKX1jYXRjaChpKXtiPW5ldyBnKCJlcnJvciIpLGIuZXJyb3IoaSl9cmV0dXJuIG5ldyBoKGIsYy50eXBlfHwic3RyaW5nIixjLm1pbWVUeXBlKX0sZ2VuZXJhdGVBc3luYzpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmdlbmVyYXRlSW50ZXJuYWxTdHJlYW0oYSkuYWNjdW11bGF0ZShiKX0sZ2VuZXJhdGVOb2RlU3RyZWFtOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9YXx8e30sYS50eXBlfHwoYS50eXBlPSJub2RlYnVmZmVyIiksdGhpcy5nZW5lcmF0ZUludGVybmFsU3RyZWFtKGEpLnRvTm9kZWpzU3RyZWFtKGIpfX07Yi5leHBvcnRzPXN9LHsiLi9jb21wcmVzc2VkT2JqZWN0IjoyLCIuL2RlZmF1bHRzIjo1LCIuL2dlbmVyYXRlIjo5LCIuL25vZGVqcy9Ob2RlanNTdHJlYW1JbnB1dEFkYXB0ZXIiOjEyLCIuL25vZGVqc1V0aWxzIjoxNCwiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciI6MjgsIi4vc3RyZWFtL1N0cmVhbUhlbHBlciI6MjksIi4vdXRmOCI6MzEsIi4vdXRpbHMiOjMyLCIuL3ppcE9iamVjdCI6MzV9XSwxNjpbZnVuY3Rpb24oYSxiLGMpe2IuZXhwb3J0cz1hKCJzdHJlYW0iKX0se3N0cmVhbTp2b2lkIDB9XSwxNzpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEpe2UuY2FsbCh0aGlzLGEpO2Zvcih2YXIgYj0wO2I8dGhpcy5kYXRhLmxlbmd0aDtiKyspYVtiXT0yNTUmYVtiXX12YXIgZT1hKCIuL0RhdGFSZWFkZXIiKSxmPWEoIi4uL3V0aWxzIik7Zi5pbmhlcml0cyhkLGUpLGQucHJvdG90eXBlLmJ5dGVBdD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5kYXRhW3RoaXMuemVybythXX0sZC5wcm90b3R5cGUubGFzdEluZGV4T2ZTaWduYXR1cmU9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPWEuY2hhckNvZGVBdCgwKSxjPWEuY2hhckNvZGVBdCgxKSxkPWEuY2hhckNvZGVBdCgyKSxlPWEuY2hhckNvZGVBdCgzKSxmPXRoaXMubGVuZ3RoLTQ7Zj49MDstLWYpaWYodGhpcy5kYXRhW2ZdPT09YiYmdGhpcy5kYXRhW2YrMV09PT1jJiZ0aGlzLmRhdGFbZisyXT09PWQmJnRoaXMuZGF0YVtmKzNdPT09ZSlyZXR1cm4gZi10aGlzLnplcm87cmV0dXJuLTF9LGQucHJvdG90eXBlLnJlYWRBbmRDaGVja1NpZ25hdHVyZT1mdW5jdGlvbihhKXt2YXIgYj1hLmNoYXJDb2RlQXQoMCksYz1hLmNoYXJDb2RlQXQoMSksZD1hLmNoYXJDb2RlQXQoMiksZT1hLmNoYXJDb2RlQXQoMyksZj10aGlzLnJlYWREYXRhKDQpO3JldHVybiBiPT09ZlswXSYmYz09PWZbMV0mJmQ9PT1mWzJdJiZlPT09ZlszXX0sZC5wcm90b3R5cGUucmVhZERhdGE9ZnVuY3Rpb24oYSl7aWYodGhpcy5jaGVja09mZnNldChhKSwwPT09YSlyZXR1cm5bXTt2YXIgYj10aGlzLmRhdGEuc2xpY2UodGhpcy56ZXJvK3RoaXMuaW5kZXgsdGhpcy56ZXJvK3RoaXMuaW5kZXgrYSk7cmV0dXJuIHRoaXMuaW5kZXgrPWEsYn0sYi5leHBvcnRzPWR9LHsiLi4vdXRpbHMiOjMyLCIuL0RhdGFSZWFkZXIiOjE4fV0sMTg6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhKXt0aGlzLmRhdGE9YSx0aGlzLmxlbmd0aD1hLmxlbmd0aCx0aGlzLmluZGV4PTAsdGhpcy56ZXJvPTB9dmFyIGU9YSgiLi4vdXRpbHMiKTtkLnByb3RvdHlwZT17Y2hlY2tPZmZzZXQ6ZnVuY3Rpb24oYSl7dGhpcy5jaGVja0luZGV4KHRoaXMuaW5kZXgrYSl9LGNoZWNrSW5kZXg6ZnVuY3Rpb24oYSl7aWYodGhpcy5sZW5ndGg8dGhpcy56ZXJvK2F8fGE8MCl0aHJvdyBuZXcgRXJyb3IoIkVuZCBvZiBkYXRhIHJlYWNoZWQgKGRhdGEgbGVuZ3RoID0gIit0aGlzLmxlbmd0aCsiLCBhc2tlZCBpbmRleCA9ICIrYSsiKS4gQ29ycnVwdGVkIHppcCA/Iil9LHNldEluZGV4OmZ1bmN0aW9uKGEpe3RoaXMuY2hlY2tJbmRleChhKSx0aGlzLmluZGV4PWF9LHNraXA6ZnVuY3Rpb24oYSl7dGhpcy5zZXRJbmRleCh0aGlzLmluZGV4K2EpfSxieXRlQXQ6ZnVuY3Rpb24oYSl7fSxyZWFkSW50OmZ1bmN0aW9uKGEpe3ZhciBiLGM9MDtmb3IodGhpcy5jaGVja09mZnNldChhKSxiPXRoaXMuaW5kZXgrYS0xO2I+PXRoaXMuaW5kZXg7Yi0tKWM9KGM8PDgpK3RoaXMuYnl0ZUF0KGIpO3JldHVybiB0aGlzLmluZGV4Kz1hLGN9LHJlYWRTdHJpbmc6ZnVuY3Rpb24oYSl7cmV0dXJuIGUudHJhbnNmb3JtVG8oInN0cmluZyIsdGhpcy5yZWFkRGF0YShhKSl9LHJlYWREYXRhOmZ1bmN0aW9uKGEpe30sbGFzdEluZGV4T2ZTaWduYXR1cmU6ZnVuY3Rpb24oYSl7fSxyZWFkQW5kQ2hlY2tTaWduYXR1cmU6ZnVuY3Rpb24oYSl7fSxyZWFkRGF0ZTpmdW5jdGlvbigpe3ZhciBhPXRoaXMucmVhZEludCg0KTtyZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoKGE+PjI1JjEyNykrMTk4MCwoYT4+MjEmMTUpLTEsYT4+MTYmMzEsYT4+MTEmMzEsYT4+NSY2MywoMzEmYSk8PDEpKX19LGIuZXhwb3J0cz1kfSx7Ii4uL3V0aWxzIjozMn1dLDE5OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7ZS5jYWxsKHRoaXMsYSl9dmFyIGU9YSgiLi9VaW50OEFycmF5UmVhZGVyIiksZj1hKCIuLi91dGlscyIpO2YuaW5oZXJpdHMoZCxlKSxkLnByb3RvdHlwZS5yZWFkRGF0YT1mdW5jdGlvbihhKXt0aGlzLmNoZWNrT2Zmc2V0KGEpO3ZhciBiPXRoaXMuZGF0YS5zbGljZSh0aGlzLnplcm8rdGhpcy5pbmRleCx0aGlzLnplcm8rdGhpcy5pbmRleCthKTtyZXR1cm4gdGhpcy5pbmRleCs9YSxifSxiLmV4cG9ydHM9ZH0seyIuLi91dGlscyI6MzIsIi4vVWludDhBcnJheVJlYWRlciI6MjF9XSwyMDpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEpe2UuY2FsbCh0aGlzLGEpfXZhciBlPWEoIi4vRGF0YVJlYWRlciIpLGY9YSgiLi4vdXRpbHMiKTtmLmluaGVyaXRzKGQsZSksZC5wcm90b3R5cGUuYnl0ZUF0PWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmRhdGEuY2hhckNvZGVBdCh0aGlzLnplcm8rYSl9LGQucHJvdG90eXBlLmxhc3RJbmRleE9mU2lnbmF0dXJlPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmRhdGEubGFzdEluZGV4T2YoYSktdGhpcy56ZXJvfSxkLnByb3RvdHlwZS5yZWFkQW5kQ2hlY2tTaWduYXR1cmU9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5yZWFkRGF0YSg0KTtyZXR1cm4gYT09PWJ9LGQucHJvdG90eXBlLnJlYWREYXRhPWZ1bmN0aW9uKGEpe3RoaXMuY2hlY2tPZmZzZXQoYSk7dmFyIGI9dGhpcy5kYXRhLnNsaWNlKHRoaXMuemVybyt0aGlzLmluZGV4LHRoaXMuemVybyt0aGlzLmluZGV4K2EpO3JldHVybiB0aGlzLmluZGV4Kz1hLGJ9LGIuZXhwb3J0cz1kfSx7Ii4uL3V0aWxzIjozMiwiLi9EYXRhUmVhZGVyIjoxOH1dLDIxOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7ZS5jYWxsKHRoaXMsYSl9dmFyIGU9YSgiLi9BcnJheVJlYWRlciIpLGY9YSgiLi4vdXRpbHMiKTtmLmluaGVyaXRzKGQsZSksZC5wcm90b3R5cGUucmVhZERhdGE9ZnVuY3Rpb24oYSl7aWYodGhpcy5jaGVja09mZnNldChhKSwwPT09YSlyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoMCk7dmFyIGI9dGhpcy5kYXRhLnN1YmFycmF5KHRoaXMuemVybyt0aGlzLmluZGV4LHRoaXMuemVybyt0aGlzLmluZGV4K2EpO3JldHVybiB0aGlzLmluZGV4Kz1hLGJ9LGIuZXhwb3J0cz1kfSx7Ii4uL3V0aWxzIjozMiwiLi9BcnJheVJlYWRlciI6MTd9XSwyMjpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0Ijt2YXIgZD1hKCIuLi91dGlscyIpLGU9YSgiLi4vc3VwcG9ydCIpLGY9YSgiLi9BcnJheVJlYWRlciIpLGc9YSgiLi9TdHJpbmdSZWFkZXIiKSxoPWEoIi4vTm9kZUJ1ZmZlclJlYWRlciIpLGk9YSgiLi9VaW50OEFycmF5UmVhZGVyIik7Yi5leHBvcnRzPWZ1bmN0aW9uKGEpe3ZhciBiPWQuZ2V0VHlwZU9mKGEpO3JldHVybiBkLmNoZWNrU3VwcG9ydChiKSwic3RyaW5nIiE9PWJ8fGUudWludDhhcnJheT8ibm9kZWJ1ZmZlciI9PT1iP25ldyBoKGEpOmUudWludDhhcnJheT9uZXcgaShkLnRyYW5zZm9ybVRvKCJ1aW50OGFycmF5IixhKSk6bmV3IGYoZC50cmFuc2Zvcm1UbygiYXJyYXkiLGEpKTpuZXcgZyhhKX19LHsiLi4vc3VwcG9ydCI6MzAsIi4uL3V0aWxzIjozMiwiLi9BcnJheVJlYWRlciI6MTcsIi4vTm9kZUJ1ZmZlclJlYWRlciI6MTksIi4vU3RyaW5nUmVhZGVyIjoyMCwiLi9VaW50OEFycmF5UmVhZGVyIjoyMX1dLDIzOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2MuTE9DQUxfRklMRV9IRUFERVI9IlBLAwQiLGMuQ0VOVFJBTF9GSUxFX0hFQURFUj0iUEsBAiIsYy5DRU5UUkFMX0RJUkVDVE9SWV9FTkQ9IlBLBQYiLGMuWklQNjRfQ0VOVFJBTF9ESVJFQ1RPUllfTE9DQVRPUj0iUEsGByIsYy5aSVA2NF9DRU5UUkFMX0RJUkVDVE9SWV9FTkQ9IlBLBgYiLGMuREFUQV9ERVNDUklQVE9SPSJQSwdcYiJ9LHt9XSwyNDpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEpe2UuY2FsbCh0aGlzLCJDb252ZXJ0V29ya2VyIHRvICIrYSksdGhpcy5kZXN0VHlwZT1hfXZhciBlPWEoIi4vR2VuZXJpY1dvcmtlciIpLGY9YSgiLi4vdXRpbHMiKTtmLmluaGVyaXRzKGQsZSksZC5wcm90b3R5cGUucHJvY2Vzc0NodW5rPWZ1bmN0aW9uKGEpe3RoaXMucHVzaCh7ZGF0YTpmLnRyYW5zZm9ybVRvKHRoaXMuZGVzdFR5cGUsYS5kYXRhKSxtZXRhOmEubWV0YX0pfSxiLmV4cG9ydHM9ZH0seyIuLi91dGlscyI6MzIsIi4vR2VuZXJpY1dvcmtlciI6Mjh9XSwyNTpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKCl7ZS5jYWxsKHRoaXMsIkNyYzMyUHJvYmUiKSx0aGlzLndpdGhTdHJlYW1JbmZvKCJjcmMzMiIsMCl9dmFyIGU9YSgiLi9HZW5lcmljV29ya2VyIiksZj1hKCIuLi9jcmMzMiIpLGc9YSgiLi4vdXRpbHMiKTtnLmluaGVyaXRzKGQsZSksZC5wcm90b3R5cGUucHJvY2Vzc0NodW5rPWZ1bmN0aW9uKGEpe3RoaXMuc3RyZWFtSW5mby5jcmMzMj1mKGEuZGF0YSx0aGlzLnN0cmVhbUluZm8uY3JjMzJ8fDApLHRoaXMucHVzaChhKX0sYi5leHBvcnRzPWR9LHsiLi4vY3JjMzIiOjQsIi4uL3V0aWxzIjozMiwiLi9HZW5lcmljV29ya2VyIjoyOH1dLDI2OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7Zi5jYWxsKHRoaXMsIkRhdGFMZW5ndGhQcm9iZSBmb3IgIithKSx0aGlzLnByb3BOYW1lPWEsdGhpcy53aXRoU3RyZWFtSW5mbyhhLDApfXZhciBlPWEoIi4uL3V0aWxzIiksZj1hKCIuL0dlbmVyaWNXb3JrZXIiKTtlLmluaGVyaXRzKGQsZiksZC5wcm90b3R5cGUucHJvY2Vzc0NodW5rPWZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiPXRoaXMuc3RyZWFtSW5mb1t0aGlzLnByb3BOYW1lXXx8MDt0aGlzLnN0cmVhbUluZm9bdGhpcy5wcm9wTmFtZV09YithLmRhdGEubGVuZ3RofWYucHJvdG90eXBlLnByb2Nlc3NDaHVuay5jYWxsKHRoaXMsYSl9LGIuZXhwb3J0cz1kfSx7Ii4uL3V0aWxzIjozMiwiLi9HZW5lcmljV29ya2VyIjoyOH1dLDI3OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7Zi5jYWxsKHRoaXMsIkRhdGFXb3JrZXIiKTt2YXIgYj10aGlzO3RoaXMuZGF0YUlzUmVhZHk9ITEsdGhpcy5pbmRleD0wLHRoaXMubWF4PTAsdGhpcy5kYXRhPW51bGwsdGhpcy50eXBlPSIiLHRoaXMuX3RpY2tTY2hlZHVsZWQ9ITEsYS50aGVuKGZ1bmN0aW9uKGEpe2IuZGF0YUlzUmVhZHk9ITAsYi5kYXRhPWEsYi5tYXg9YSYmYS5sZW5ndGh8fDAsYi50eXBlPWUuZ2V0VHlwZU9mKGEpLGIuaXNQYXVzZWR8fGIuX3RpY2tBbmRSZXBlYXQoKX0sZnVuY3Rpb24oYSl7Yi5lcnJvcihhKX0pfXZhciBlPWEoIi4uL3V0aWxzIiksZj1hKCIuL0dlbmVyaWNXb3JrZXIiKSxnPTE2Mzg0O2UuaW5oZXJpdHMoZCxmKSxkLnByb3RvdHlwZS5jbGVhblVwPWZ1bmN0aW9uKCl7Zi5wcm90b3R5cGUuY2xlYW5VcC5jYWxsKHRoaXMpLHRoaXMuZGF0YT1udWxsfSxkLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXtyZXR1cm4hIWYucHJvdG90eXBlLnJlc3VtZS5jYWxsKHRoaXMpJiYoIXRoaXMuX3RpY2tTY2hlZHVsZWQmJnRoaXMuZGF0YUlzUmVhZHkmJih0aGlzLl90aWNrU2NoZWR1bGVkPSEwLGUuZGVsYXkodGhpcy5fdGlja0FuZFJlcGVhdCxbXSx0aGlzKSksITApfSxkLnByb3RvdHlwZS5fdGlja0FuZFJlcGVhdD1mdW5jdGlvbigpe3RoaXMuX3RpY2tTY2hlZHVsZWQ9ITEsdGhpcy5pc1BhdXNlZHx8dGhpcy5pc0ZpbmlzaGVkfHwodGhpcy5fdGljaygpLHRoaXMuaXNGaW5pc2hlZHx8KGUuZGVsYXkodGhpcy5fdGlja0FuZFJlcGVhdCxbXSx0aGlzKSx0aGlzLl90aWNrU2NoZWR1bGVkPSEwKSl9LGQucHJvdG90eXBlLl90aWNrPWZ1bmN0aW9uKCl7aWYodGhpcy5pc1BhdXNlZHx8dGhpcy5pc0ZpbmlzaGVkKXJldHVybiExO3ZhciBhPWcsYj1udWxsLGM9TWF0aC5taW4odGhpcy5tYXgsdGhpcy5pbmRleCthKTtpZih0aGlzLmluZGV4Pj10aGlzLm1heClyZXR1cm4gdGhpcy5lbmQoKTtzd2l0Y2godGhpcy50eXBlKXtjYXNlInN0cmluZyI6Yj10aGlzLmRhdGEuc3Vic3RyaW5nKHRoaXMuaW5kZXgsYyk7YnJlYWs7Y2FzZSJ1aW50OGFycmF5IjpiPXRoaXMuZGF0YS5zdWJhcnJheSh0aGlzLmluZGV4LGMpO2JyZWFrO2Nhc2UiYXJyYXkiOmNhc2Uibm9kZWJ1ZmZlciI6Yj10aGlzLmRhdGEuc2xpY2UodGhpcy5pbmRleCxjKX1yZXR1cm4gdGhpcy5pbmRleD1jLHRoaXMucHVzaCh7ZGF0YTpiLG1ldGE6e3BlcmNlbnQ6dGhpcy5tYXg/dGhpcy5pbmRleC90aGlzLm1heCoxMDA6MH19KX0sYi5leHBvcnRzPWR9LHsiLi4vdXRpbHMiOjMyLCIuL0dlbmVyaWNXb3JrZXIiOjI4fV0sMjg6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhKXt0aGlzLm5hbWU9YXx8ImRlZmF1bHQiLHRoaXMuc3RyZWFtSW5mbz17fSx0aGlzLmdlbmVyYXRlZEVycm9yPW51bGwsdGhpcy5leHRyYVN0cmVhbUluZm89e30sdGhpcy5pc1BhdXNlZD0hMCx0aGlzLmlzRmluaXNoZWQ9ITEsdGhpcy5pc0xvY2tlZD0hMSx0aGlzLl9saXN0ZW5lcnM9e2RhdGE6W10sZW5kOltdLGVycm9yOltdfSx0aGlzLnByZXZpb3VzPW51bGx9ZC5wcm90b3R5cGU9e3B1c2g6ZnVuY3Rpb24oYSl7dGhpcy5lbWl0KCJkYXRhIixhKX0sZW5kOmZ1bmN0aW9uKCl7aWYodGhpcy5pc0ZpbmlzaGVkKXJldHVybiExO3RoaXMuZmx1c2goKTt0cnl7dGhpcy5lbWl0KCJlbmQiKSx0aGlzLmNsZWFuVXAoKSx0aGlzLmlzRmluaXNoZWQ9ITB9Y2F0Y2goYSl7dGhpcy5lbWl0KCJlcnJvciIsYSl9cmV0dXJuITB9LGVycm9yOmZ1bmN0aW9uKGEpe3JldHVybiF0aGlzLmlzRmluaXNoZWQmJih0aGlzLmlzUGF1c2VkP3RoaXMuZ2VuZXJhdGVkRXJyb3I9YToodGhpcy5pc0ZpbmlzaGVkPSEwLHRoaXMuZW1pdCgiZXJyb3IiLGEpLHRoaXMucHJldmlvdXMmJnRoaXMucHJldmlvdXMuZXJyb3IoYSksdGhpcy5jbGVhblVwKCkpLCEwKX0sb246ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5fbGlzdGVuZXJzW2FdLnB1c2goYiksdGhpc30sY2xlYW5VcDpmdW5jdGlvbigpe3RoaXMuc3RyZWFtSW5mbz10aGlzLmdlbmVyYXRlZEVycm9yPXRoaXMuZXh0cmFTdHJlYW1JbmZvPW51bGwsdGhpcy5fbGlzdGVuZXJzPVtdfSxlbWl0OmZ1bmN0aW9uKGEsYil7aWYodGhpcy5fbGlzdGVuZXJzW2FdKWZvcih2YXIgYz0wO2M8dGhpcy5fbGlzdGVuZXJzW2FdLmxlbmd0aDtjKyspdGhpcy5fbGlzdGVuZXJzW2FdW2NdLmNhbGwodGhpcyxiKX0scGlwZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWdpc3RlclByZXZpb3VzKHRoaXMpfSxyZWdpc3RlclByZXZpb3VzOmZ1bmN0aW9uKGEpe2lmKHRoaXMuaXNMb2NrZWQpdGhyb3cgbmV3IEVycm9yKCJUaGUgc3RyZWFtICciK3RoaXMrIicgaGFzIGFscmVhZHkgYmVlbiB1c2VkLiIpO3RoaXMuc3RyZWFtSW5mbz1hLnN0cmVhbUluZm8sdGhpcy5tZXJnZVN0cmVhbUluZm8oKSx0aGlzLnByZXZpb3VzPWE7dmFyIGI9dGhpcztyZXR1cm4gYS5vbigiZGF0YSIsZnVuY3Rpb24oYSl7Yi5wcm9jZXNzQ2h1bmsoYSl9KSxhLm9uKCJlbmQiLGZ1bmN0aW9uKCl7Yi5lbmQoKX0pLGEub24oImVycm9yIixmdW5jdGlvbihhKXtiLmVycm9yKGEpfSksdGhpc30scGF1c2U6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5pc1BhdXNlZCYmIXRoaXMuaXNGaW5pc2hlZCYmKHRoaXMuaXNQYXVzZWQ9ITAsdGhpcy5wcmV2aW91cyYmdGhpcy5wcmV2aW91cy5wYXVzZSgpLCEwKX0scmVzdW1lOmZ1bmN0aW9uKCl7aWYoIXRoaXMuaXNQYXVzZWR8fHRoaXMuaXNGaW5pc2hlZClyZXR1cm4hMTt0aGlzLmlzUGF1c2VkPSExO3ZhciBhPSExO3JldHVybiB0aGlzLmdlbmVyYXRlZEVycm9yJiYodGhpcy5lcnJvcih0aGlzLmdlbmVyYXRlZEVycm9yKSxhPSEwKSx0aGlzLnByZXZpb3VzJiZ0aGlzLnByZXZpb3VzLnJlc3VtZSgpLCFhfSxmbHVzaDpmdW5jdGlvbigpe30scHJvY2Vzc0NodW5rOmZ1bmN0aW9uKGEpe3RoaXMucHVzaChhKX0sd2l0aFN0cmVhbUluZm86ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5leHRyYVN0cmVhbUluZm9bYV09Yix0aGlzLm1lcmdlU3RyZWFtSW5mbygpLHRoaXN9LG1lcmdlU3RyZWFtSW5mbzpmdW5jdGlvbigpe2Zvcih2YXIgYSBpbiB0aGlzLmV4dHJhU3RyZWFtSW5mbyl0aGlzLmV4dHJhU3RyZWFtSW5mby5oYXNPd25Qcm9wZXJ0eShhKSYmKHRoaXMuc3RyZWFtSW5mb1thXT10aGlzLmV4dHJhU3RyZWFtSW5mb1thXSl9LGxvY2s6ZnVuY3Rpb24oKXtpZih0aGlzLmlzTG9ja2VkKXRocm93IG5ldyBFcnJvcigiVGhlIHN0cmVhbSAnIit0aGlzKyInIGhhcyBhbHJlYWR5IGJlZW4gdXNlZC4iKTt0aGlzLmlzTG9ja2VkPSEwLHRoaXMucHJldmlvdXMmJnRoaXMucHJldmlvdXMubG9jaygpfSx0b1N0cmluZzpmdW5jdGlvbigpe3ZhciBhPSJXb3JrZXIgIit0aGlzLm5hbWU7cmV0dXJuIHRoaXMucHJldmlvdXM/dGhpcy5wcmV2aW91cysiIC0+ICIrYTphfX0sYi5leHBvcnRzPWR9LHt9XSwyOTpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEsYixjKXtzd2l0Y2goYSl7Y2FzZSJibG9iIjpyZXR1cm4gaC5uZXdCbG9iKGgudHJhbnNmb3JtVG8oImFycmF5YnVmZmVyIixiKSxjKTtjYXNlImJhc2U2NCI6cmV0dXJuIGsuZW5jb2RlKGIpO2RlZmF1bHQ6cmV0dXJuIGgudHJhbnNmb3JtVG8oYSxiKX19ZnVuY3Rpb24gZShhLGIpe3ZhciBjLGQ9MCxlPW51bGwsZj0wO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspZis9YltjXS5sZW5ndGg7c3dpdGNoKGEpe2Nhc2Uic3RyaW5nIjpyZXR1cm4gYi5qb2luKCIiKTtjYXNlImFycmF5IjpyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxiKTtjYXNlInVpbnQ4YXJyYXkiOmZvcihlPW5ldyBVaW50OEFycmF5KGYpLGM9MDtjPGIubGVuZ3RoO2MrKyllLnNldChiW2NdLGQpLGQrPWJbY10ubGVuZ3RoO3JldHVybiBlO2Nhc2Uibm9kZWJ1ZmZlciI6cmV0dXJuIEJ1ZmZlci5jb25jYXQoYik7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoImNvbmNhdCA6IHVuc3VwcG9ydGVkIHR5cGUgJyIrYSsiJyIpfX1mdW5jdGlvbiBmKGEsYil7cmV0dXJuIG5ldyBtLlByb21pc2UoZnVuY3Rpb24oYyxmKXt2YXIgZz1bXSxoPWEuX2ludGVybmFsVHlwZSxpPWEuX291dHB1dFR5cGUsaj1hLl9taW1lVHlwZTthLm9uKCJkYXRhIixmdW5jdGlvbihhLGMpe2cucHVzaChhKSxiJiZiKGMpfSkub24oImVycm9yIixmdW5jdGlvbihhKXtnPVtdLGYoYSl9KS5vbigiZW5kIixmdW5jdGlvbigpe3RyeXt2YXIgYT1kKGksZShoLGcpLGopO2MoYSl9Y2F0Y2goYil7ZihiKX1nPVtdfSkucmVzdW1lKCl9KX1mdW5jdGlvbiBnKGEsYixjKXt2YXIgZD1iO3N3aXRjaChiKXtjYXNlImJsb2IiOmNhc2UiYXJyYXlidWZmZXIiOmQ9InVpbnQ4YXJyYXkiO2JyZWFrO2Nhc2UiYmFzZTY0IjpkPSJzdHJpbmcifXRyeXt0aGlzLl9pbnRlcm5hbFR5cGU9ZCx0aGlzLl9vdXRwdXRUeXBlPWIsdGhpcy5fbWltZVR5cGU9YyxoLmNoZWNrU3VwcG9ydChkKSx0aGlzLl93b3JrZXI9YS5waXBlKG5ldyBpKGQpKSxhLmxvY2soKX1jYXRjaChlKXt0aGlzLl93b3JrZXI9bmV3IGooImVycm9yIiksdGhpcy5fd29ya2VyLmVycm9yKGUpfX12YXIgaD1hKCIuLi91dGlscyIpLGk9YSgiLi9Db252ZXJ0V29ya2VyIiksaj1hKCIuL0dlbmVyaWNXb3JrZXIiKSxrPWEoIi4uL2Jhc2U2NCIpLGw9YSgiLi4vc3VwcG9ydCIpLG09YSgiLi4vZXh0ZXJuYWwiKSxuPW51bGw7aWYobC5ub2Rlc3RyZWFtKXRyeXtuPWEoIi4uL25vZGVqcy9Ob2RlanNTdHJlYW1PdXRwdXRBZGFwdGVyIil9Y2F0Y2gobyl7fWcucHJvdG90eXBlPXthY2N1bXVsYXRlOmZ1bmN0aW9uKGEpe3JldHVybiBmKHRoaXMsYSl9LG9uOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztyZXR1cm4iZGF0YSI9PT1hP3RoaXMuX3dvcmtlci5vbihhLGZ1bmN0aW9uKGEpe2IuY2FsbChjLGEuZGF0YSxhLm1ldGEpfSk6dGhpcy5fd29ya2VyLm9uKGEsZnVuY3Rpb24oKXtoLmRlbGF5KGIsYXJndW1lbnRzLGMpfSksdGhpc30scmVzdW1lOmZ1bmN0aW9uKCl7cmV0dXJuIGguZGVsYXkodGhpcy5fd29ya2VyLnJlc3VtZSxbXSx0aGlzLl93b3JrZXIpLHRoaXN9LHBhdXNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dvcmtlci5wYXVzZSgpLHRoaXN9LHRvTm9kZWpzU3RyZWFtOmZ1bmN0aW9uKGEpe2lmKGguY2hlY2tTdXBwb3J0KCJub2Rlc3RyZWFtIiksIm5vZGVidWZmZXIiIT09dGhpcy5fb3V0cHV0VHlwZSl0aHJvdyBuZXcgRXJyb3IodGhpcy5fb3V0cHV0VHlwZSsiIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBtZXRob2QiKTtyZXR1cm4gbmV3IG4odGhpcyx7b2JqZWN0TW9kZToibm9kZWJ1ZmZlciIhPT10aGlzLl9vdXRwdXRUeXBlfSxhKX19LGIuZXhwb3J0cz1nfSx7Ii4uL2Jhc2U2NCI6MSwiLi4vZXh0ZXJuYWwiOjYsIi4uL25vZGVqcy9Ob2RlanNTdHJlYW1PdXRwdXRBZGFwdGVyIjoxMywiLi4vc3VwcG9ydCI6MzAsIi4uL3V0aWxzIjozMiwiLi9Db252ZXJ0V29ya2VyIjoyNCwiLi9HZW5lcmljV29ya2VyIjoyOH1dLDMwOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2lmKGMuYmFzZTY0PSEwLGMuYXJyYXk9ITAsYy5zdHJpbmc9ITAsYy5hcnJheWJ1ZmZlcj0idW5kZWZpbmVkIiE9dHlwZW9mIEFycmF5QnVmZmVyJiYidW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQ4QXJyYXksYy5ub2RlYnVmZmVyPSJ1bmRlZmluZWQiIT10eXBlb2YgQnVmZmVyLGMudWludDhhcnJheT0idW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQ4QXJyYXksInVuZGVmaW5lZCI9PXR5cGVvZiBBcnJheUJ1ZmZlciljLmJsb2I9ITE7ZWxzZXt2YXIgZD1uZXcgQXJyYXlCdWZmZXIoMCk7dHJ5e2MuYmxvYj0wPT09bmV3IEJsb2IoW2RdLHt0eXBlOiJhcHBsaWNhdGlvbi96aXAifSkuc2l6ZX1jYXRjaChlKXt0cnl7dmFyIGY9c2VsZi5CbG9iQnVpbGRlcnx8c2VsZi5XZWJLaXRCbG9iQnVpbGRlcnx8c2VsZi5Nb3pCbG9iQnVpbGRlcnx8c2VsZi5NU0Jsb2JCdWlsZGVyLGc9bmV3IGY7Zy5hcHBlbmQoZCksYy5ibG9iPTA9PT1nLmdldEJsb2IoImFwcGxpY2F0aW9uL3ppcCIpLnNpemV9Y2F0Y2goZSl7Yy5ibG9iPSExfX19dHJ5e2Mubm9kZXN0cmVhbT0hIWEoInJlYWRhYmxlLXN0cmVhbSIpLlJlYWRhYmxlfWNhdGNoKGUpe2Mubm9kZXN0cmVhbT0hMX19LHsicmVhZGFibGUtc3RyZWFtIjoxNn1dLDMxOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoKXtpLmNhbGwodGhpcywidXRmLTggZGVjb2RlIiksdGhpcy5sZWZ0T3Zlcj1udWxsfWZ1bmN0aW9uIGUoKXtpLmNhbGwodGhpcywidXRmLTggZW5jb2RlIil9Zm9yKHZhciBmPWEoIi4vdXRpbHMiKSxnPWEoIi4vc3VwcG9ydCIpLGg9YSgiLi9ub2RlanNVdGlscyIpLGk9YSgiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciIpLGo9bmV3IEFycmF5KDI1Niksaz0wO2s8MjU2O2srKylqW2tdPWs+PTI1Mj82Oms+PTI0OD81Oms+PTI0MD80Oms+PTIyND8zOms+PTE5Mj8yOjE7alsyNTRdPWpbMjU0XT0xO3ZhciBsPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsaD1hLmxlbmd0aCxpPTA7Zm9yKGU9MDtlPGg7ZSsrKWM9YS5jaGFyQ29kZUF0KGUpLDU1Mjk2PT09KDY0NTEyJmMpJiZlKzE8aCYmKGQ9YS5jaGFyQ29kZUF0KGUrMSksNTYzMjA9PT0oNjQ1MTImZCkmJihjPTY1NTM2KyhjLTU1Mjk2PDwxMCkrKGQtNTYzMjApLGUrKykpLGkrPWM8MTI4PzE6YzwyMDQ4PzI6Yzw2NTUzNj8zOjQ7Zm9yKGI9Zy51aW50OGFycmF5P25ldyBVaW50OEFycmF5KGkpOm5ldyBBcnJheShpKSxmPTAsZT0wO2Y8aTtlKyspYz1hLmNoYXJDb2RlQXQoZSksNTUyOTY9PT0oNjQ1MTImYykmJmUrMTxoJiYoZD1hLmNoYXJDb2RlQXQoZSsxKSw1NjMyMD09PSg2NDUxMiZkKSYmKGM9NjU1MzYrKGMtNTUyOTY8PDEwKSsoZC01NjMyMCksZSsrKSksYzwxMjg/YltmKytdPWM6YzwyMDQ4PyhiW2YrK109MTkyfGM+Pj42LGJbZisrXT0xMjh8NjMmYyk6Yzw2NTUzNj8oYltmKytdPTIyNHxjPj4+MTIsYltmKytdPTEyOHxjPj4+NiY2MyxiW2YrK109MTI4fDYzJmMpOihiW2YrK109MjQwfGM+Pj4xOCxiW2YrK109MTI4fGM+Pj4xMiY2MyxiW2YrK109MTI4fGM+Pj42JjYzLGJbZisrXT0xMjh8NjMmYyk7cmV0dXJuIGJ9LG09ZnVuY3Rpb24oYSxiKXt2YXIgYztmb3IoYj1ifHxhLmxlbmd0aCxiPmEubGVuZ3RoJiYoYj1hLmxlbmd0aCksYz1iLTE7Yz49MCYmMTI4PT09KDE5MiZhW2NdKTspYy0tO3JldHVybiBjPDA/YjowPT09Yz9iOmMralthW2NdXT5iP2M6Yn0sbj1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxnPWEubGVuZ3RoLGg9bmV3IEFycmF5KDIqZyk7Zm9yKGM9MCxiPTA7YjxnOylpZihkPWFbYisrXSxkPDEyOCloW2MrK109ZDtlbHNlIGlmKGU9altkXSxlPjQpaFtjKytdPTY1NTMzLGIrPWUtMTtlbHNle2ZvcihkJj0yPT09ZT8zMTozPT09ZT8xNTo3O2U+MSYmYjxnOylkPWQ8PDZ8NjMmYVtiKytdLGUtLTtlPjE/aFtjKytdPTY1NTMzOmQ8NjU1MzY/aFtjKytdPWQ6KGQtPTY1NTM2LGhbYysrXT01NTI5NnxkPj4xMCYxMDIzLGhbYysrXT01NjMyMHwxMDIzJmQpfXJldHVybiBoLmxlbmd0aCE9PWMmJihoLnN1YmFycmF5P2g9aC5zdWJhcnJheSgwLGMpOmgubGVuZ3RoPWMpLGYuYXBwbHlGcm9tQ2hhckNvZGUoaCl9O2MudXRmOGVuY29kZT1mdW5jdGlvbihhKXtyZXR1cm4gZy5ub2RlYnVmZmVyP2gubmV3QnVmZmVyRnJvbShhLCJ1dGYtOCIpOmwoYSl9LGMudXRmOGRlY29kZT1mdW5jdGlvbihhKXtyZXR1cm4gZy5ub2RlYnVmZmVyP2YudHJhbnNmb3JtVG8oIm5vZGVidWZmZXIiLGEpLnRvU3RyaW5nKCJ1dGYtOCIpOihhPWYudHJhbnNmb3JtVG8oZy51aW50OGFycmF5PyJ1aW50OGFycmF5IjoiYXJyYXkiLGEpLG4oYSkpfSxmLmluaGVyaXRzKGQsaSksZC5wcm90b3R5cGUucHJvY2Vzc0NodW5rPWZ1bmN0aW9uKGEpe3ZhciBiPWYudHJhbnNmb3JtVG8oZy51aW50OGFycmF5PyJ1aW50OGFycmF5IjoiYXJyYXkiLGEuZGF0YSk7aWYodGhpcy5sZWZ0T3ZlciYmdGhpcy5sZWZ0T3Zlci5sZW5ndGgpe2lmKGcudWludDhhcnJheSl7dmFyIGQ9YjtiPW5ldyBVaW50OEFycmF5KGQubGVuZ3RoK3RoaXMubGVmdE92ZXIubGVuZ3RoKSxiLnNldCh0aGlzLmxlZnRPdmVyLDApLGIuc2V0KGQsdGhpcy5sZWZ0T3Zlci5sZW5ndGgpfWVsc2UgYj10aGlzLmxlZnRPdmVyLmNvbmNhdChiKTt0aGlzLmxlZnRPdmVyPW51bGx9dmFyIGU9bShiKSxoPWI7ZSE9PWIubGVuZ3RoJiYoZy51aW50OGFycmF5PyhoPWIuc3ViYXJyYXkoMCxlKSx0aGlzLmxlZnRPdmVyPWIuc3ViYXJyYXkoZSxiLmxlbmd0aCkpOihoPWIuc2xpY2UoMCxlKSx0aGlzLmxlZnRPdmVyPWIuc2xpY2UoZSxiLmxlbmd0aCkpKSx0aGlzLnB1c2goe2RhdGE6Yy51dGY4ZGVjb2RlKGgpLG1ldGE6YS5tZXRhfSl9LGQucHJvdG90eXBlLmZsdXNoPWZ1bmN0aW9uKCl7dGhpcy5sZWZ0T3ZlciYmdGhpcy5sZWZ0T3Zlci5sZW5ndGgmJih0aGlzLnB1c2goe2RhdGE6Yy51dGY4ZGVjb2RlKHRoaXMubGVmdE92ZXIpLG1ldGE6e319KSx0aGlzLmxlZnRPdmVyPW51bGwpfSxjLlV0ZjhEZWNvZGVXb3JrZXI9ZCxmLmluaGVyaXRzKGUsaSksZS5wcm90b3R5cGUucHJvY2Vzc0NodW5rPWZ1bmN0aW9uKGEpe3RoaXMucHVzaCh7ZGF0YTpjLnV0ZjhlbmNvZGUoYS5kYXRhKSxtZXRhOmEubWV0YX0pfSxjLlV0ZjhFbmNvZGVXb3JrZXI9ZX0seyIuL25vZGVqc1V0aWxzIjoxNCwiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciI6MjgsIi4vc3VwcG9ydCI6MzAsIi4vdXRpbHMiOjMyfV0sMzI6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhKXt2YXIgYj1udWxsO3JldHVybiBiPWkudWludDhhcnJheT9uZXcgVWludDhBcnJheShhLmxlbmd0aCk6bmV3IEFycmF5KGEubGVuZ3RoKSxmKGEsYil9ZnVuY3Rpb24gZShhKXtyZXR1cm4gYX1mdW5jdGlvbiBmKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDsrK2MpYltjXT0yNTUmYS5jaGFyQ29kZUF0KGMpO3JldHVybiBifWZ1bmN0aW9uIGcoYSl7dmFyIGI9NjU1MzYsZD1jLmdldFR5cGVPZihhKSxlPSEwO2lmKCJ1aW50OGFycmF5Ij09PWQ/ZT1uLmFwcGx5Q2FuQmVVc2VkLnVpbnQ4YXJyYXk6Im5vZGVidWZmZXIiPT09ZCYmKGU9bi5hcHBseUNhbkJlVXNlZC5ub2RlYnVmZmVyKSxlKWZvcig7Yj4xOyl0cnl7cmV0dXJuIG4uc3RyaW5naWZ5QnlDaHVuayhhLGQsYil9Y2F0Y2goZil7Yj1NYXRoLmZsb29yKGIvMil9cmV0dXJuIG4uc3RyaW5naWZ5QnlDaGFyKGEpfWZ1bmN0aW9uIGgoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyliW2NdPWFbY107CnJldHVybiBifXZhciBpPWEoIi4vc3VwcG9ydCIpLGo9YSgiLi9iYXNlNjQiKSxrPWEoIi4vbm9kZWpzVXRpbHMiKSxsPWEoImNvcmUtanMvbGlicmFyeS9mbi9zZXQtaW1tZWRpYXRlIiksbT1hKCIuL2V4dGVybmFsIik7Yy5uZXdCbG9iPWZ1bmN0aW9uKGEsYil7Yy5jaGVja1N1cHBvcnQoImJsb2IiKTt0cnl7cmV0dXJuIG5ldyBCbG9iKFthXSx7dHlwZTpifSl9Y2F0Y2goZCl7dHJ5e3ZhciBlPXNlbGYuQmxvYkJ1aWxkZXJ8fHNlbGYuV2ViS2l0QmxvYkJ1aWxkZXJ8fHNlbGYuTW96QmxvYkJ1aWxkZXJ8fHNlbGYuTVNCbG9iQnVpbGRlcixmPW5ldyBlO3JldHVybiBmLmFwcGVuZChhKSxmLmdldEJsb2IoYil9Y2F0Y2goZCl7dGhyb3cgbmV3IEVycm9yKCJCdWcgOiBjYW4ndCBjb25zdHJ1Y3QgdGhlIEJsb2IuIil9fX07dmFyIG49e3N0cmluZ2lmeUJ5Q2h1bms6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVtdLGU9MCxmPWEubGVuZ3RoO2lmKGY8PWMpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxhKTtmb3IoO2U8ZjspImFycmF5Ij09PWJ8fCJub2RlYnVmZmVyIj09PWI/ZC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxhLnNsaWNlKGUsTWF0aC5taW4oZStjLGYpKSkpOmQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsYS5zdWJhcnJheShlLE1hdGgubWluKGUrYyxmKSkpKSxlKz1jO3JldHVybiBkLmpvaW4oIiIpfSxzdHJpbmdpZnlCeUNoYXI6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPSIiLGM9MDtjPGEubGVuZ3RoO2MrKyliKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGFbY10pO3JldHVybiBifSxhcHBseUNhbkJlVXNlZDp7dWludDhhcnJheTpmdW5jdGlvbigpe3RyeXtyZXR1cm4gaS51aW50OGFycmF5JiYxPT09U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG5ldyBVaW50OEFycmF5KDEpKS5sZW5ndGh9Y2F0Y2goYSl7cmV0dXJuITF9fSgpLG5vZGVidWZmZXI6ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIGkubm9kZWJ1ZmZlciYmMT09PVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxrLmFsbG9jQnVmZmVyKDEpKS5sZW5ndGh9Y2F0Y2goYSl7cmV0dXJuITF9fSgpfX07Yy5hcHBseUZyb21DaGFyQ29kZT1nO3ZhciBvPXt9O28uc3RyaW5nPXtzdHJpbmc6ZSxhcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gZihhLG5ldyBBcnJheShhLmxlbmd0aCkpfSxhcnJheWJ1ZmZlcjpmdW5jdGlvbihhKXtyZXR1cm4gby5zdHJpbmcudWludDhhcnJheShhKS5idWZmZXJ9LHVpbnQ4YXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIGYoYSxuZXcgVWludDhBcnJheShhLmxlbmd0aCkpfSxub2RlYnVmZmVyOmZ1bmN0aW9uKGEpe3JldHVybiBmKGEsay5hbGxvY0J1ZmZlcihhLmxlbmd0aCkpfX0sby5hcnJheT17c3RyaW5nOmcsYXJyYXk6ZSxhcnJheWJ1ZmZlcjpmdW5jdGlvbihhKXtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYSkuYnVmZmVyfSx1aW50OGFycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBuZXcgVWludDhBcnJheShhKX0sbm9kZWJ1ZmZlcjpmdW5jdGlvbihhKXtyZXR1cm4gay5uZXdCdWZmZXJGcm9tKGEpfX0sby5hcnJheWJ1ZmZlcj17c3RyaW5nOmZ1bmN0aW9uKGEpe3JldHVybiBnKG5ldyBVaW50OEFycmF5KGEpKX0sYXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIGgobmV3IFVpbnQ4QXJyYXkoYSksbmV3IEFycmF5KGEuYnl0ZUxlbmd0aCkpfSxhcnJheWJ1ZmZlcjplLHVpbnQ4YXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBVaW50OEFycmF5KGEpfSxub2RlYnVmZmVyOmZ1bmN0aW9uKGEpe3JldHVybiBrLm5ld0J1ZmZlckZyb20obmV3IFVpbnQ4QXJyYXkoYSkpfX0sby51aW50OGFycmF5PXtzdHJpbmc6ZyxhcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gaChhLG5ldyBBcnJheShhLmxlbmd0aCkpfSxhcnJheWJ1ZmZlcjpmdW5jdGlvbihhKXtyZXR1cm4gYS5idWZmZXJ9LHVpbnQ4YXJyYXk6ZSxub2RlYnVmZmVyOmZ1bmN0aW9uKGEpe3JldHVybiBrLm5ld0J1ZmZlckZyb20oYSl9fSxvLm5vZGVidWZmZXI9e3N0cmluZzpnLGFycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBoKGEsbmV3IEFycmF5KGEubGVuZ3RoKSl9LGFycmF5YnVmZmVyOmZ1bmN0aW9uKGEpe3JldHVybiBvLm5vZGVidWZmZXIudWludDhhcnJheShhKS5idWZmZXJ9LHVpbnQ4YXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIGgoYSxuZXcgVWludDhBcnJheShhLmxlbmd0aCkpfSxub2RlYnVmZmVyOmV9LGMudHJhbnNmb3JtVG89ZnVuY3Rpb24oYSxiKXtpZihifHwoYj0iIiksIWEpcmV0dXJuIGI7Yy5jaGVja1N1cHBvcnQoYSk7dmFyIGQ9Yy5nZXRUeXBlT2YoYiksZT1vW2RdW2FdKGIpO3JldHVybiBlfSxjLmdldFR5cGVPZj1mdW5jdGlvbihhKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGE/InN0cmluZyI6IltvYmplY3QgQXJyYXldIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKT8iYXJyYXkiOmkubm9kZWJ1ZmZlciYmay5pc0J1ZmZlcihhKT8ibm9kZWJ1ZmZlciI6aS51aW50OGFycmF5JiZhIGluc3RhbmNlb2YgVWludDhBcnJheT8idWludDhhcnJheSI6aS5hcnJheWJ1ZmZlciYmYSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyPyJhcnJheWJ1ZmZlciI6dm9pZCAwfSxjLmNoZWNrU3VwcG9ydD1mdW5jdGlvbihhKXt2YXIgYj1pW2EudG9Mb3dlckNhc2UoKV07aWYoIWIpdGhyb3cgbmV3IEVycm9yKGErIiBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgcGxhdGZvcm0iKX0sYy5NQVhfVkFMVUVfMTZCSVRTPTY1NTM1LGMuTUFYX1ZBTFVFXzMyQklUUz0tMSxjLnByZXR0eT1mdW5jdGlvbihhKXt2YXIgYixjLGQ9IiI7Zm9yKGM9MDtjPChhfHwiIikubGVuZ3RoO2MrKyliPWEuY2hhckNvZGVBdChjKSxkKz0iXFx4IisoYjwxNj8iMCI6IiIpK2IudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7cmV0dXJuIGR9LGMuZGVsYXk9ZnVuY3Rpb24oYSxiLGMpe2woZnVuY3Rpb24oKXthLmFwcGx5KGN8fG51bGwsYnx8W10pfSl9LGMuaW5oZXJpdHM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1mdW5jdGlvbigpe307Yy5wcm90b3R5cGU9Yi5wcm90b3R5cGUsYS5wcm90b3R5cGU9bmV3IGN9LGMuZXh0ZW5kPWZ1bmN0aW9uKCl7dmFyIGEsYixjPXt9O2ZvcihhPTA7YTxhcmd1bWVudHMubGVuZ3RoO2ErKylmb3IoYiBpbiBhcmd1bWVudHNbYV0pYXJndW1lbnRzW2FdLmhhc093blByb3BlcnR5KGIpJiYidW5kZWZpbmVkIj09dHlwZW9mIGNbYl0mJihjW2JdPWFyZ3VtZW50c1thXVtiXSk7cmV0dXJuIGN9LGMucHJlcGFyZUNvbnRlbnQ9ZnVuY3Rpb24oYSxiLGUsZixnKXt2YXIgaD1tLlByb21pc2UucmVzb2x2ZShiKS50aGVuKGZ1bmN0aW9uKGEpe3ZhciBiPWkuYmxvYiYmKGEgaW5zdGFuY2VvZiBCbG9ifHxbIltvYmplY3QgRmlsZV0iLCJbb2JqZWN0IEJsb2JdIl0uaW5kZXhPZihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSkpIT09LTEpO3JldHVybiBiJiYidW5kZWZpbmVkIiE9dHlwZW9mIEZpbGVSZWFkZXI/bmV3IG0uUHJvbWlzZShmdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBGaWxlUmVhZGVyO2Qub25sb2FkPWZ1bmN0aW9uKGEpe2IoYS50YXJnZXQucmVzdWx0KX0sZC5vbmVycm9yPWZ1bmN0aW9uKGEpe2MoYS50YXJnZXQuZXJyb3IpfSxkLnJlYWRBc0FycmF5QnVmZmVyKGEpfSk6YX0pO3JldHVybiBoLnRoZW4oZnVuY3Rpb24oYil7dmFyIGg9Yy5nZXRUeXBlT2YoYik7cmV0dXJuIGg/KCJhcnJheWJ1ZmZlciI9PT1oP2I9Yy50cmFuc2Zvcm1UbygidWludDhhcnJheSIsYik6InN0cmluZyI9PT1oJiYoZz9iPWouZGVjb2RlKGIpOmUmJmYhPT0hMCYmKGI9ZChiKSkpLGIpOm0uUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCJDYW4ndCByZWFkIHRoZSBkYXRhIG9mICciK2ErIicuIElzIGl0IGluIGEgc3VwcG9ydGVkIEphdmFTY3JpcHQgdHlwZSAoU3RyaW5nLCBCbG9iLCBBcnJheUJ1ZmZlciwgZXRjKSA/IikpfSl9fSx7Ii4vYmFzZTY0IjoxLCIuL2V4dGVybmFsIjo2LCIuL25vZGVqc1V0aWxzIjoxNCwiLi9zdXBwb3J0IjozMCwiY29yZS1qcy9saWJyYXJ5L2ZuL3NldC1pbW1lZGlhdGUiOjM2fV0sMzM6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhKXt0aGlzLmZpbGVzPVtdLHRoaXMubG9hZE9wdGlvbnM9YX12YXIgZT1hKCIuL3JlYWRlci9yZWFkZXJGb3IiKSxmPWEoIi4vdXRpbHMiKSxnPWEoIi4vc2lnbmF0dXJlIiksaD1hKCIuL3ppcEVudHJ5IiksaT0oYSgiLi91dGY4IiksYSgiLi9zdXBwb3J0IikpO2QucHJvdG90eXBlPXtjaGVja1NpZ25hdHVyZTpmdW5jdGlvbihhKXtpZighdGhpcy5yZWFkZXIucmVhZEFuZENoZWNrU2lnbmF0dXJlKGEpKXt0aGlzLnJlYWRlci5pbmRleC09NDt2YXIgYj10aGlzLnJlYWRlci5yZWFkU3RyaW5nKDQpO3Rocm93IG5ldyBFcnJvcigiQ29ycnVwdGVkIHppcCBvciBidWc6IHVuZXhwZWN0ZWQgc2lnbmF0dXJlICgiK2YucHJldHR5KGIpKyIsIGV4cGVjdGVkICIrZi5wcmV0dHkoYSkrIikiKX19LGlzU2lnbmF0dXJlOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5yZWFkZXIuaW5kZXg7dGhpcy5yZWFkZXIuc2V0SW5kZXgoYSk7dmFyIGQ9dGhpcy5yZWFkZXIucmVhZFN0cmluZyg0KSxlPWQ9PT1iO3JldHVybiB0aGlzLnJlYWRlci5zZXRJbmRleChjKSxlfSxyZWFkQmxvY2tFbmRPZkNlbnRyYWw6ZnVuY3Rpb24oKXt0aGlzLmRpc2tOdW1iZXI9dGhpcy5yZWFkZXIucmVhZEludCgyKSx0aGlzLmRpc2tXaXRoQ2VudHJhbERpclN0YXJ0PXRoaXMucmVhZGVyLnJlYWRJbnQoMiksdGhpcy5jZW50cmFsRGlyUmVjb3Jkc09uVGhpc0Rpc2s9dGhpcy5yZWFkZXIucmVhZEludCgyKSx0aGlzLmNlbnRyYWxEaXJSZWNvcmRzPXRoaXMucmVhZGVyLnJlYWRJbnQoMiksdGhpcy5jZW50cmFsRGlyU2l6ZT10aGlzLnJlYWRlci5yZWFkSW50KDQpLHRoaXMuY2VudHJhbERpck9mZnNldD10aGlzLnJlYWRlci5yZWFkSW50KDQpLHRoaXMuemlwQ29tbWVudExlbmd0aD10aGlzLnJlYWRlci5yZWFkSW50KDIpO3ZhciBhPXRoaXMucmVhZGVyLnJlYWREYXRhKHRoaXMuemlwQ29tbWVudExlbmd0aCksYj1pLnVpbnQ4YXJyYXk/InVpbnQ4YXJyYXkiOiJhcnJheSIsYz1mLnRyYW5zZm9ybVRvKGIsYSk7dGhpcy56aXBDb21tZW50PXRoaXMubG9hZE9wdGlvbnMuZGVjb2RlRmlsZU5hbWUoYyl9LHJlYWRCbG9ja1ppcDY0RW5kT2ZDZW50cmFsOmZ1bmN0aW9uKCl7dGhpcy56aXA2NEVuZE9mQ2VudHJhbFNpemU9dGhpcy5yZWFkZXIucmVhZEludCg4KSx0aGlzLnJlYWRlci5za2lwKDQpLHRoaXMuZGlza051bWJlcj10aGlzLnJlYWRlci5yZWFkSW50KDQpLHRoaXMuZGlza1dpdGhDZW50cmFsRGlyU3RhcnQ9dGhpcy5yZWFkZXIucmVhZEludCg0KSx0aGlzLmNlbnRyYWxEaXJSZWNvcmRzT25UaGlzRGlzaz10aGlzLnJlYWRlci5yZWFkSW50KDgpLHRoaXMuY2VudHJhbERpclJlY29yZHM9dGhpcy5yZWFkZXIucmVhZEludCg4KSx0aGlzLmNlbnRyYWxEaXJTaXplPXRoaXMucmVhZGVyLnJlYWRJbnQoOCksdGhpcy5jZW50cmFsRGlyT2Zmc2V0PXRoaXMucmVhZGVyLnJlYWRJbnQoOCksdGhpcy56aXA2NEV4dGVuc2libGVEYXRhPXt9O2Zvcih2YXIgYSxiLGMsZD10aGlzLnppcDY0RW5kT2ZDZW50cmFsU2l6ZS00NCxlPTA7ZTxkOylhPXRoaXMucmVhZGVyLnJlYWRJbnQoMiksYj10aGlzLnJlYWRlci5yZWFkSW50KDQpLGM9dGhpcy5yZWFkZXIucmVhZERhdGEoYiksdGhpcy56aXA2NEV4dGVuc2libGVEYXRhW2FdPXtpZDphLGxlbmd0aDpiLHZhbHVlOmN9fSxyZWFkQmxvY2taaXA2NEVuZE9mQ2VudHJhbExvY2F0b3I6ZnVuY3Rpb24oKXtpZih0aGlzLmRpc2tXaXRoWmlwNjRDZW50cmFsRGlyU3RhcnQ9dGhpcy5yZWFkZXIucmVhZEludCg0KSx0aGlzLnJlbGF0aXZlT2Zmc2V0RW5kT2ZaaXA2NENlbnRyYWxEaXI9dGhpcy5yZWFkZXIucmVhZEludCg4KSx0aGlzLmRpc2tzQ291bnQ9dGhpcy5yZWFkZXIucmVhZEludCg0KSx0aGlzLmRpc2tzQ291bnQ+MSl0aHJvdyBuZXcgRXJyb3IoIk11bHRpLXZvbHVtZXMgemlwIGFyZSBub3Qgc3VwcG9ydGVkIil9LHJlYWRMb2NhbEZpbGVzOmZ1bmN0aW9uKCl7dmFyIGEsYjtmb3IoYT0wO2E8dGhpcy5maWxlcy5sZW5ndGg7YSsrKWI9dGhpcy5maWxlc1thXSx0aGlzLnJlYWRlci5zZXRJbmRleChiLmxvY2FsSGVhZGVyT2Zmc2V0KSx0aGlzLmNoZWNrU2lnbmF0dXJlKGcuTE9DQUxfRklMRV9IRUFERVIpLGIucmVhZExvY2FsUGFydCh0aGlzLnJlYWRlciksYi5oYW5kbGVVVEY4KCksYi5wcm9jZXNzQXR0cmlidXRlcygpfSxyZWFkQ2VudHJhbERpcjpmdW5jdGlvbigpe3ZhciBhO2Zvcih0aGlzLnJlYWRlci5zZXRJbmRleCh0aGlzLmNlbnRyYWxEaXJPZmZzZXQpO3RoaXMucmVhZGVyLnJlYWRBbmRDaGVja1NpZ25hdHVyZShnLkNFTlRSQUxfRklMRV9IRUFERVIpOylhPW5ldyBoKHt6aXA2NDp0aGlzLnppcDY0fSx0aGlzLmxvYWRPcHRpb25zKSxhLnJlYWRDZW50cmFsUGFydCh0aGlzLnJlYWRlciksdGhpcy5maWxlcy5wdXNoKGEpO2lmKHRoaXMuY2VudHJhbERpclJlY29yZHMhPT10aGlzLmZpbGVzLmxlbmd0aCYmMCE9PXRoaXMuY2VudHJhbERpclJlY29yZHMmJjA9PT10aGlzLmZpbGVzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkNvcnJ1cHRlZCB6aXAgb3IgYnVnOiBleHBlY3RlZCAiK3RoaXMuY2VudHJhbERpclJlY29yZHMrIiByZWNvcmRzIGluIGNlbnRyYWwgZGlyLCBnb3QgIit0aGlzLmZpbGVzLmxlbmd0aCl9LHJlYWRFbmRPZkNlbnRyYWw6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnJlYWRlci5sYXN0SW5kZXhPZlNpZ25hdHVyZShnLkNFTlRSQUxfRElSRUNUT1JZX0VORCk7aWYoYTwwKXt2YXIgYj0hdGhpcy5pc1NpZ25hdHVyZSgwLGcuTE9DQUxfRklMRV9IRUFERVIpO3Rocm93IGI/bmV3IEVycm9yKCJDYW4ndCBmaW5kIGVuZCBvZiBjZW50cmFsIGRpcmVjdG9yeSA6IGlzIHRoaXMgYSB6aXAgZmlsZSA/IElmIGl0IGlzLCBzZWUgaHR0cHM6Ly9zdHVrLmdpdGh1Yi5pby9qc3ppcC9kb2N1bWVudGF0aW9uL2hvd3RvL3JlYWRfemlwLmh0bWwiKTpuZXcgRXJyb3IoIkNvcnJ1cHRlZCB6aXA6IGNhbid0IGZpbmQgZW5kIG9mIGNlbnRyYWwgZGlyZWN0b3J5Iil9dGhpcy5yZWFkZXIuc2V0SW5kZXgoYSk7dmFyIGM9YTtpZih0aGlzLmNoZWNrU2lnbmF0dXJlKGcuQ0VOVFJBTF9ESVJFQ1RPUllfRU5EKSx0aGlzLnJlYWRCbG9ja0VuZE9mQ2VudHJhbCgpLHRoaXMuZGlza051bWJlcj09PWYuTUFYX1ZBTFVFXzE2QklUU3x8dGhpcy5kaXNrV2l0aENlbnRyYWxEaXJTdGFydD09PWYuTUFYX1ZBTFVFXzE2QklUU3x8dGhpcy5jZW50cmFsRGlyUmVjb3Jkc09uVGhpc0Rpc2s9PT1mLk1BWF9WQUxVRV8xNkJJVFN8fHRoaXMuY2VudHJhbERpclJlY29yZHM9PT1mLk1BWF9WQUxVRV8xNkJJVFN8fHRoaXMuY2VudHJhbERpclNpemU9PT1mLk1BWF9WQUxVRV8zMkJJVFN8fHRoaXMuY2VudHJhbERpck9mZnNldD09PWYuTUFYX1ZBTFVFXzMyQklUUyl7aWYodGhpcy56aXA2ND0hMCxhPXRoaXMucmVhZGVyLmxhc3RJbmRleE9mU2lnbmF0dXJlKGcuWklQNjRfQ0VOVFJBTF9ESVJFQ1RPUllfTE9DQVRPUiksYTwwKXRocm93IG5ldyBFcnJvcigiQ29ycnVwdGVkIHppcDogY2FuJ3QgZmluZCB0aGUgWklQNjQgZW5kIG9mIGNlbnRyYWwgZGlyZWN0b3J5IGxvY2F0b3IiKTtpZih0aGlzLnJlYWRlci5zZXRJbmRleChhKSx0aGlzLmNoZWNrU2lnbmF0dXJlKGcuWklQNjRfQ0VOVFJBTF9ESVJFQ1RPUllfTE9DQVRPUiksdGhpcy5yZWFkQmxvY2taaXA2NEVuZE9mQ2VudHJhbExvY2F0b3IoKSwhdGhpcy5pc1NpZ25hdHVyZSh0aGlzLnJlbGF0aXZlT2Zmc2V0RW5kT2ZaaXA2NENlbnRyYWxEaXIsZy5aSVA2NF9DRU5UUkFMX0RJUkVDVE9SWV9FTkQpJiYodGhpcy5yZWxhdGl2ZU9mZnNldEVuZE9mWmlwNjRDZW50cmFsRGlyPXRoaXMucmVhZGVyLmxhc3RJbmRleE9mU2lnbmF0dXJlKGcuWklQNjRfQ0VOVFJBTF9ESVJFQ1RPUllfRU5EKSx0aGlzLnJlbGF0aXZlT2Zmc2V0RW5kT2ZaaXA2NENlbnRyYWxEaXI8MCkpdGhyb3cgbmV3IEVycm9yKCJDb3JydXB0ZWQgemlwOiBjYW4ndCBmaW5kIHRoZSBaSVA2NCBlbmQgb2YgY2VudHJhbCBkaXJlY3RvcnkiKTt0aGlzLnJlYWRlci5zZXRJbmRleCh0aGlzLnJlbGF0aXZlT2Zmc2V0RW5kT2ZaaXA2NENlbnRyYWxEaXIpLHRoaXMuY2hlY2tTaWduYXR1cmUoZy5aSVA2NF9DRU5UUkFMX0RJUkVDVE9SWV9FTkQpLHRoaXMucmVhZEJsb2NrWmlwNjRFbmRPZkNlbnRyYWwoKX12YXIgZD10aGlzLmNlbnRyYWxEaXJPZmZzZXQrdGhpcy5jZW50cmFsRGlyU2l6ZTt0aGlzLnppcDY0JiYoZCs9MjAsZCs9MTIrdGhpcy56aXA2NEVuZE9mQ2VudHJhbFNpemUpO3ZhciBlPWMtZDtpZihlPjApdGhpcy5pc1NpZ25hdHVyZShjLGcuQ0VOVFJBTF9GSUxFX0hFQURFUil8fCh0aGlzLnJlYWRlci56ZXJvPWUpO2Vsc2UgaWYoZTwwKXRocm93IG5ldyBFcnJvcigiQ29ycnVwdGVkIHppcDogbWlzc2luZyAiK01hdGguYWJzKGUpKyIgYnl0ZXMuIil9LHByZXBhcmVSZWFkZXI6ZnVuY3Rpb24oYSl7dGhpcy5yZWFkZXI9ZShhKX0sbG9hZDpmdW5jdGlvbihhKXt0aGlzLnByZXBhcmVSZWFkZXIoYSksdGhpcy5yZWFkRW5kT2ZDZW50cmFsKCksdGhpcy5yZWFkQ2VudHJhbERpcigpLHRoaXMucmVhZExvY2FsRmlsZXMoKX19LGIuZXhwb3J0cz1kfSx7Ii4vcmVhZGVyL3JlYWRlckZvciI6MjIsIi4vc2lnbmF0dXJlIjoyMywiLi9zdXBwb3J0IjozMCwiLi91dGY4IjozMSwiLi91dGlscyI6MzIsIi4vemlwRW50cnkiOjM0fV0sMzQ6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhLGIpe3RoaXMub3B0aW9ucz1hLHRoaXMubG9hZE9wdGlvbnM9Yn12YXIgZT1hKCIuL3JlYWRlci9yZWFkZXJGb3IiKSxmPWEoIi4vdXRpbHMiKSxnPWEoIi4vY29tcHJlc3NlZE9iamVjdCIpLGg9YSgiLi9jcmMzMiIpLGk9YSgiLi91dGY4Iiksaj1hKCIuL2NvbXByZXNzaW9ucyIpLGs9YSgiLi9zdXBwb3J0IiksbD0wLG09MyxuPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYiBpbiBqKWlmKGouaGFzT3duUHJvcGVydHkoYikmJmpbYl0ubWFnaWM9PT1hKXJldHVybiBqW2JdO3JldHVybiBudWxsfTtkLnByb3RvdHlwZT17aXNFbmNyeXB0ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gMT09PSgxJnRoaXMuYml0RmxhZyl9LHVzZVVURjg6ZnVuY3Rpb24oKXtyZXR1cm4gMjA0OD09PSgyMDQ4JnRoaXMuYml0RmxhZyl9LHJlYWRMb2NhbFBhcnQ6ZnVuY3Rpb24oYSl7dmFyIGIsYztpZihhLnNraXAoMjIpLHRoaXMuZmlsZU5hbWVMZW5ndGg9YS5yZWFkSW50KDIpLGM9YS5yZWFkSW50KDIpLHRoaXMuZmlsZU5hbWU9YS5yZWFkRGF0YSh0aGlzLmZpbGVOYW1lTGVuZ3RoKSxhLnNraXAoYyksdGhpcy5jb21wcmVzc2VkU2l6ZT09PS0xfHx0aGlzLnVuY29tcHJlc3NlZFNpemU9PT0tMSl0aHJvdyBuZXcgRXJyb3IoIkJ1ZyBvciBjb3JydXB0ZWQgemlwIDogZGlkbid0IGdldCBlbm91Z2ggaW5mb3JtYXRpb25zIGZyb20gdGhlIGNlbnRyYWwgZGlyZWN0b3J5IChjb21wcmVzc2VkU2l6ZSA9PT0gLTEgfHwgdW5jb21wcmVzc2VkU2l6ZSA9PT0gLTEpIik7aWYoYj1uKHRoaXMuY29tcHJlc3Npb25NZXRob2QpLG51bGw9PT1iKXRocm93IG5ldyBFcnJvcigiQ29ycnVwdGVkIHppcCA6IGNvbXByZXNzaW9uICIrZi5wcmV0dHkodGhpcy5jb21wcmVzc2lvbk1ldGhvZCkrIiB1bmtub3duIChpbm5lciBmaWxlIDogIitmLnRyYW5zZm9ybVRvKCJzdHJpbmciLHRoaXMuZmlsZU5hbWUpKyIpIik7dGhpcy5kZWNvbXByZXNzZWQ9bmV3IGcodGhpcy5jb21wcmVzc2VkU2l6ZSx0aGlzLnVuY29tcHJlc3NlZFNpemUsdGhpcy5jcmMzMixiLGEucmVhZERhdGEodGhpcy5jb21wcmVzc2VkU2l6ZSkpfSxyZWFkQ2VudHJhbFBhcnQ6ZnVuY3Rpb24oYSl7dGhpcy52ZXJzaW9uTWFkZUJ5PWEucmVhZEludCgyKSxhLnNraXAoMiksdGhpcy5iaXRGbGFnPWEucmVhZEludCgyKSx0aGlzLmNvbXByZXNzaW9uTWV0aG9kPWEucmVhZFN0cmluZygyKSx0aGlzLmRhdGU9YS5yZWFkRGF0ZSgpLHRoaXMuY3JjMzI9YS5yZWFkSW50KDQpLHRoaXMuY29tcHJlc3NlZFNpemU9YS5yZWFkSW50KDQpLHRoaXMudW5jb21wcmVzc2VkU2l6ZT1hLnJlYWRJbnQoNCk7dmFyIGI9YS5yZWFkSW50KDIpO2lmKHRoaXMuZXh0cmFGaWVsZHNMZW5ndGg9YS5yZWFkSW50KDIpLHRoaXMuZmlsZUNvbW1lbnRMZW5ndGg9YS5yZWFkSW50KDIpLHRoaXMuZGlza051bWJlclN0YXJ0PWEucmVhZEludCgyKSx0aGlzLmludGVybmFsRmlsZUF0dHJpYnV0ZXM9YS5yZWFkSW50KDIpLHRoaXMuZXh0ZXJuYWxGaWxlQXR0cmlidXRlcz1hLnJlYWRJbnQoNCksdGhpcy5sb2NhbEhlYWRlck9mZnNldD1hLnJlYWRJbnQoNCksdGhpcy5pc0VuY3J5cHRlZCgpKXRocm93IG5ldyBFcnJvcigiRW5jcnlwdGVkIHppcCBhcmUgbm90IHN1cHBvcnRlZCIpO2Euc2tpcChiKSx0aGlzLnJlYWRFeHRyYUZpZWxkcyhhKSx0aGlzLnBhcnNlWklQNjRFeHRyYUZpZWxkKGEpLHRoaXMuZmlsZUNvbW1lbnQ9YS5yZWFkRGF0YSh0aGlzLmZpbGVDb21tZW50TGVuZ3RoKX0scHJvY2Vzc0F0dHJpYnV0ZXM6ZnVuY3Rpb24oKXt0aGlzLnVuaXhQZXJtaXNzaW9ucz1udWxsLHRoaXMuZG9zUGVybWlzc2lvbnM9bnVsbDt2YXIgYT10aGlzLnZlcnNpb25NYWRlQnk+Pjg7dGhpcy5kaXI9ISEoMTYmdGhpcy5leHRlcm5hbEZpbGVBdHRyaWJ1dGVzKSxhPT09bCYmKHRoaXMuZG9zUGVybWlzc2lvbnM9NjMmdGhpcy5leHRlcm5hbEZpbGVBdHRyaWJ1dGVzKSxhPT09bSYmKHRoaXMudW5peFBlcm1pc3Npb25zPXRoaXMuZXh0ZXJuYWxGaWxlQXR0cmlidXRlcz4+MTYmNjU1MzUpLHRoaXMuZGlyfHwiLyIhPT10aGlzLmZpbGVOYW1lU3RyLnNsaWNlKC0xKXx8KHRoaXMuZGlyPSEwKX0scGFyc2VaSVA2NEV4dHJhRmllbGQ6ZnVuY3Rpb24oYSl7aWYodGhpcy5leHRyYUZpZWxkc1sxXSl7dmFyIGI9ZSh0aGlzLmV4dHJhRmllbGRzWzFdLnZhbHVlKTt0aGlzLnVuY29tcHJlc3NlZFNpemU9PT1mLk1BWF9WQUxVRV8zMkJJVFMmJih0aGlzLnVuY29tcHJlc3NlZFNpemU9Yi5yZWFkSW50KDgpKSx0aGlzLmNvbXByZXNzZWRTaXplPT09Zi5NQVhfVkFMVUVfMzJCSVRTJiYodGhpcy5jb21wcmVzc2VkU2l6ZT1iLnJlYWRJbnQoOCkpLHRoaXMubG9jYWxIZWFkZXJPZmZzZXQ9PT1mLk1BWF9WQUxVRV8zMkJJVFMmJih0aGlzLmxvY2FsSGVhZGVyT2Zmc2V0PWIucmVhZEludCg4KSksdGhpcy5kaXNrTnVtYmVyU3RhcnQ9PT1mLk1BWF9WQUxVRV8zMkJJVFMmJih0aGlzLmRpc2tOdW1iZXJTdGFydD1iLnJlYWRJbnQoNCkpfX0scmVhZEV4dHJhRmllbGRzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlPWEuaW5kZXgrdGhpcy5leHRyYUZpZWxkc0xlbmd0aDtmb3IodGhpcy5leHRyYUZpZWxkc3x8KHRoaXMuZXh0cmFGaWVsZHM9e30pO2EuaW5kZXg8ZTspYj1hLnJlYWRJbnQoMiksYz1hLnJlYWRJbnQoMiksZD1hLnJlYWREYXRhKGMpLHRoaXMuZXh0cmFGaWVsZHNbYl09e2lkOmIsbGVuZ3RoOmMsdmFsdWU6ZH19LGhhbmRsZVVURjg6ZnVuY3Rpb24oKXt2YXIgYT1rLnVpbnQ4YXJyYXk/InVpbnQ4YXJyYXkiOiJhcnJheSI7aWYodGhpcy51c2VVVEY4KCkpdGhpcy5maWxlTmFtZVN0cj1pLnV0ZjhkZWNvZGUodGhpcy5maWxlTmFtZSksdGhpcy5maWxlQ29tbWVudFN0cj1pLnV0ZjhkZWNvZGUodGhpcy5maWxlQ29tbWVudCk7ZWxzZXt2YXIgYj10aGlzLmZpbmRFeHRyYUZpZWxkVW5pY29kZVBhdGgoKTtpZihudWxsIT09Yil0aGlzLmZpbGVOYW1lU3RyPWI7ZWxzZXt2YXIgYz1mLnRyYW5zZm9ybVRvKGEsdGhpcy5maWxlTmFtZSk7dGhpcy5maWxlTmFtZVN0cj10aGlzLmxvYWRPcHRpb25zLmRlY29kZUZpbGVOYW1lKGMpfXZhciBkPXRoaXMuZmluZEV4dHJhRmllbGRVbmljb2RlQ29tbWVudCgpO2lmKG51bGwhPT1kKXRoaXMuZmlsZUNvbW1lbnRTdHI9ZDtlbHNle3ZhciBlPWYudHJhbnNmb3JtVG8oYSx0aGlzLmZpbGVDb21tZW50KTt0aGlzLmZpbGVDb21tZW50U3RyPXRoaXMubG9hZE9wdGlvbnMuZGVjb2RlRmlsZU5hbWUoZSl9fX0sZmluZEV4dHJhRmllbGRVbmljb2RlUGF0aDpmdW5jdGlvbigpe3ZhciBhPXRoaXMuZXh0cmFGaWVsZHNbMjg3ODldO2lmKGEpe3ZhciBiPWUoYS52YWx1ZSk7cmV0dXJuIDEhPT1iLnJlYWRJbnQoMSk/bnVsbDpoKHRoaXMuZmlsZU5hbWUpIT09Yi5yZWFkSW50KDQpP251bGw6aS51dGY4ZGVjb2RlKGIucmVhZERhdGEoYS5sZW5ndGgtNSkpfXJldHVybiBudWxsfSxmaW5kRXh0cmFGaWVsZFVuaWNvZGVDb21tZW50OmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5leHRyYUZpZWxkc1syNTQ2MV07aWYoYSl7dmFyIGI9ZShhLnZhbHVlKTtyZXR1cm4gMSE9PWIucmVhZEludCgxKT9udWxsOmgodGhpcy5maWxlQ29tbWVudCkhPT1iLnJlYWRJbnQoNCk/bnVsbDppLnV0ZjhkZWNvZGUoYi5yZWFkRGF0YShhLmxlbmd0aC01KSl9cmV0dXJuIG51bGx9fSxiLmV4cG9ydHM9ZH0seyIuL2NvbXByZXNzZWRPYmplY3QiOjIsIi4vY29tcHJlc3Npb25zIjozLCIuL2NyYzMyIjo0LCIuL3JlYWRlci9yZWFkZXJGb3IiOjIyLCIuL3N1cHBvcnQiOjMwLCIuL3V0ZjgiOjMxLCIuL3V0aWxzIjozMn1dLDM1OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO3ZhciBkPWEoIi4vc3RyZWFtL1N0cmVhbUhlbHBlciIpLGU9YSgiLi9zdHJlYW0vRGF0YVdvcmtlciIpLGY9YSgiLi91dGY4IiksZz1hKCIuL2NvbXByZXNzZWRPYmplY3QiKSxoPWEoIi4vc3RyZWFtL0dlbmVyaWNXb3JrZXIiKSxpPWZ1bmN0aW9uKGEsYixjKXt0aGlzLm5hbWU9YSx0aGlzLmRpcj1jLmRpcix0aGlzLmRhdGU9Yy5kYXRlLHRoaXMuY29tbWVudD1jLmNvbW1lbnQsdGhpcy51bml4UGVybWlzc2lvbnM9Yy51bml4UGVybWlzc2lvbnMsdGhpcy5kb3NQZXJtaXNzaW9ucz1jLmRvc1Blcm1pc3Npb25zLHRoaXMuX2RhdGE9Yix0aGlzLl9kYXRhQmluYXJ5PWMuYmluYXJ5LHRoaXMub3B0aW9ucz17Y29tcHJlc3Npb246Yy5jb21wcmVzc2lvbixjb21wcmVzc2lvbk9wdGlvbnM6Yy5jb21wcmVzc2lvbk9wdGlvbnN9fTtpLnByb3RvdHlwZT17aW50ZXJuYWxTdHJlYW06ZnVuY3Rpb24oYSl7dmFyIGI9bnVsbCxjPSJzdHJpbmciO3RyeXtpZighYSl0aHJvdyBuZXcgRXJyb3IoIk5vIG91dHB1dCB0eXBlIHNwZWNpZmllZC4iKTtjPWEudG9Mb3dlckNhc2UoKTt2YXIgZT0ic3RyaW5nIj09PWN8fCJ0ZXh0Ij09PWM7ImJpbmFyeXN0cmluZyIhPT1jJiYidGV4dCIhPT1jfHwoYz0ic3RyaW5nIiksYj10aGlzLl9kZWNvbXByZXNzV29ya2VyKCk7dmFyIGc9IXRoaXMuX2RhdGFCaW5hcnk7ZyYmIWUmJihiPWIucGlwZShuZXcgZi5VdGY4RW5jb2RlV29ya2VyKSksIWcmJmUmJihiPWIucGlwZShuZXcgZi5VdGY4RGVjb2RlV29ya2VyKSl9Y2F0Y2goaSl7Yj1uZXcgaCgiZXJyb3IiKSxiLmVycm9yKGkpfXJldHVybiBuZXcgZChiLGMsIiIpfSxhc3luYzpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmludGVybmFsU3RyZWFtKGEpLmFjY3VtdWxhdGUoYil9LG5vZGVTdHJlYW06ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5pbnRlcm5hbFN0cmVhbShhfHwibm9kZWJ1ZmZlciIpLnRvTm9kZWpzU3RyZWFtKGIpfSxfY29tcHJlc3NXb3JrZXI6ZnVuY3Rpb24oYSxiKXtpZih0aGlzLl9kYXRhIGluc3RhbmNlb2YgZyYmdGhpcy5fZGF0YS5jb21wcmVzc2lvbi5tYWdpYz09PWEubWFnaWMpcmV0dXJuIHRoaXMuX2RhdGEuZ2V0Q29tcHJlc3NlZFdvcmtlcigpO3ZhciBjPXRoaXMuX2RlY29tcHJlc3NXb3JrZXIoKTtyZXR1cm4gdGhpcy5fZGF0YUJpbmFyeXx8KGM9Yy5waXBlKG5ldyBmLlV0ZjhFbmNvZGVXb3JrZXIpKSxnLmNyZWF0ZVdvcmtlckZyb20oYyxhLGIpfSxfZGVjb21wcmVzc1dvcmtlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhIGluc3RhbmNlb2YgZz90aGlzLl9kYXRhLmdldENvbnRlbnRXb3JrZXIoKTp0aGlzLl9kYXRhIGluc3RhbmNlb2YgaD90aGlzLl9kYXRhOm5ldyBlKHRoaXMuX2RhdGEpfX07Zm9yKHZhciBqPVsiYXNUZXh0IiwiYXNCaW5hcnkiLCJhc05vZGVCdWZmZXIiLCJhc1VpbnQ4QXJyYXkiLCJhc0FycmF5QnVmZmVyIl0saz1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcigiVGhpcyBtZXRob2QgaGFzIGJlZW4gcmVtb3ZlZCBpbiBKU1ppcCAzLjAsIHBsZWFzZSBjaGVjayB0aGUgdXBncmFkZSBndWlkZS4iKX0sbD0wO2w8ai5sZW5ndGg7bCsrKWkucHJvdG90eXBlW2pbbF1dPWs7Yi5leHBvcnRzPWl9LHsiLi9jb21wcmVzc2VkT2JqZWN0IjoyLCIuL3N0cmVhbS9EYXRhV29ya2VyIjoyNywiLi9zdHJlYW0vR2VuZXJpY1dvcmtlciI6MjgsIi4vc3RyZWFtL1N0cmVhbUhlbHBlciI6MjksIi4vdXRmOCI6MzF9XSwzNjpbZnVuY3Rpb24oYSxiLGMpe2EoIi4uL21vZHVsZXMvd2ViLmltbWVkaWF0ZSIpLGIuZXhwb3J0cz1hKCIuLi9tb2R1bGVzL19jb3JlIikuc2V0SW1tZWRpYXRlfSx7Ii4uL21vZHVsZXMvX2NvcmUiOjQwLCIuLi9tb2R1bGVzL3dlYi5pbW1lZGlhdGUiOjU2fV0sMzc6W2Z1bmN0aW9uKGEsYixjKXtiLmV4cG9ydHM9ZnVuY3Rpb24oYSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGEpdGhyb3cgVHlwZUVycm9yKGErIiBpcyBub3QgYSBmdW5jdGlvbiEiKTtyZXR1cm4gYX19LHt9XSwzODpbZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEoIi4vX2lzLW9iamVjdCIpO2IuZXhwb3J0cz1mdW5jdGlvbihhKXtpZighZChhKSl0aHJvdyBUeXBlRXJyb3IoYSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGF9fSx7Ii4vX2lzLW9iamVjdCI6NTF9XSwzOTpbZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXt9LnRvU3RyaW5nO2IuZXhwb3J0cz1mdW5jdGlvbihhKXtyZXR1cm4gZC5jYWxsKGEpLnNsaWNlKDgsLTEpfX0se31dLDQwOltmdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBvcnRzPXt2ZXJzaW9uOiIyLjMuMCJ9OyJudW1iZXIiPT10eXBlb2YgX19lJiYoX19lPWQpfSx7fV0sNDE6W2Z1bmN0aW9uKGEsYixjKXt2YXIgZD1hKCIuL19hLWZ1bmN0aW9uIik7Yi5leHBvcnRzPWZ1bmN0aW9uKGEsYixjKXtpZihkKGEpLHZvaWQgMD09PWIpcmV0dXJuIGE7c3dpdGNoKGMpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24oYyl7cmV0dXJuIGEuY2FsbChiLGMpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKGMsZCl7cmV0dXJuIGEuY2FsbChiLGMsZCl9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24oYyxkLGUpe3JldHVybiBhLmNhbGwoYixjLGQsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGIsYXJndW1lbnRzKX19fSx7Ii4vX2EtZnVuY3Rpb24iOjM3fV0sNDI6W2Z1bmN0aW9uKGEsYixjKXtiLmV4cG9ydHM9IWEoIi4vX2ZhaWxzIikoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2ZhaWxzIjo0NX1dLDQzOltmdW5jdGlvbihhLGIsYyl7dmFyIGQ9YSgiLi9faXMtb2JqZWN0IiksZT1hKCIuL19nbG9iYWwiKS5kb2N1bWVudCxmPWQoZSkmJmQoZS5jcmVhdGVFbGVtZW50KTtiLmV4cG9ydHM9ZnVuY3Rpb24oYSl7cmV0dXJuIGY/ZS5jcmVhdGVFbGVtZW50KGEpOnt9fX0seyIuL19nbG9iYWwiOjQ2LCIuL19pcy1vYmplY3QiOjUxfV0sNDQ6W2Z1bmN0aW9uKGEsYixjKXt2YXIgZD1hKCIuL19nbG9iYWwiKSxlPWEoIi4vX2NvcmUiKSxmPWEoIi4vX2N0eCIpLGc9YSgiLi9faGlkZSIpLGg9InByb3RvdHlwZSIsaT1mdW5jdGlvbihhLGIsYyl7dmFyIGosayxsLG09YSZpLkYsbj1hJmkuRyxvPWEmaS5TLHA9YSZpLlAscT1hJmkuQixyPWEmaS5XLHM9bj9lOmVbYl18fChlW2JdPXt9KSx0PXNbaF0sdT1uP2Q6bz9kW2JdOihkW2JdfHx7fSlbaF07biYmKGM9Yik7Zm9yKGogaW4gYylrPSFtJiZ1JiZ2b2lkIDAhPT11W2pdLGsmJmogaW4gc3x8KGw9az91W2pdOmNbal0sc1tqXT1uJiYiZnVuY3Rpb24iIT10eXBlb2YgdVtqXT9jW2pdOnEmJms/ZihsLGQpOnImJnVbal09PWw/ZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oYixjLGQpe2lmKHRoaXMgaW5zdGFuY2VvZiBhKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgYTtjYXNlIDE6cmV0dXJuIG5ldyBhKGIpO2Nhc2UgMjpyZXR1cm4gbmV3IGEoYixjKX1yZXR1cm4gbmV3IGEoYixjLGQpfXJldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIGJbaF09YVtoXSxifShsKTpwJiYiZnVuY3Rpb24iPT10eXBlb2YgbD9mKEZ1bmN0aW9uLmNhbGwsbCk6bCxwJiYoKHMudmlydHVhbHx8KHMudmlydHVhbD17fSkpW2pdPWwsYSZpLlImJnQmJiF0W2pdJiZnKHQsaixsKSkpfTtpLkY9MSxpLkc9MixpLlM9NCxpLlA9OCxpLkI9MTYsaS5XPTMyLGkuVT02NCxpLlI9MTI4LGIuZXhwb3J0cz1pfSx7Ii4vX2NvcmUiOjQwLCIuL19jdHgiOjQxLCIuL19nbG9iYWwiOjQ2LCIuL19oaWRlIjo0N31dLDQ1OltmdW5jdGlvbihhLGIsYyl7Yi5leHBvcnRzPWZ1bmN0aW9uKGEpe3RyeXtyZXR1cm4hIWEoKX1jYXRjaChiKXtyZXR1cm4hMH19fSx7fV0sNDY6W2Z1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9ZCl9LHt9XSw0NzpbZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEoIi4vX29iamVjdC1kcCIpLGU9YSgiLi9fcHJvcGVydHktZGVzYyIpO2IuZXhwb3J0cz1hKCIuL19kZXNjcmlwdG9ycyIpP2Z1bmN0aW9uKGEsYixjKXtyZXR1cm4gZC5mKGEsYixlKDEsYykpfTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGFbYl09YyxhfX0seyIuL19kZXNjcmlwdG9ycyI6NDIsIi4vX29iamVjdC1kcCI6NTIsIi4vX3Byb3BlcnR5LWRlc2MiOjUzfV0sNDg6W2Z1bmN0aW9uKGEsYixjKXtiLmV4cG9ydHM9YSgiLi9fZ2xvYmFsIikuZG9jdW1lbnQmJmRvY3VtZW50LmRvY3VtZW50RWxlbWVudH0seyIuL19nbG9iYWwiOjQ2fV0sNDk6W2Z1bmN0aW9uKGEsYixjKXtiLmV4cG9ydHM9IWEoIi4vX2Rlc2NyaXB0b3JzIikmJiFhKCIuL19mYWlscyIpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShhKCIuL19kb20tY3JlYXRlIikoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSx7Ii4vX2Rlc2NyaXB0b3JzIjo0MiwiLi9fZG9tLWNyZWF0ZSI6NDMsIi4vX2ZhaWxzIjo0NX1dLDUwOltmdW5jdGlvbihhLGIsYyl7Yi5leHBvcnRzPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD12b2lkIDA9PT1jO3N3aXRjaChiLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBkP2EoKTphLmNhbGwoYyk7Y2FzZSAxOnJldHVybiBkP2EoYlswXSk6YS5jYWxsKGMsYlswXSk7Y2FzZSAyOnJldHVybiBkP2EoYlswXSxiWzFdKTphLmNhbGwoYyxiWzBdLGJbMV0pO2Nhc2UgMzpyZXR1cm4gZD9hKGJbMF0sYlsxXSxiWzJdKTphLmNhbGwoYyxiWzBdLGJbMV0sYlsyXSk7Y2FzZSA0OnJldHVybiBkP2EoYlswXSxiWzFdLGJbMl0sYlszXSk6YS5jYWxsKGMsYlswXSxiWzFdLGJbMl0sYlszXSl9cmV0dXJuIGEuYXBwbHkoYyxiKX19LHt9XSw1MTpbZnVuY3Rpb24oYSxiLGMpe2IuZXhwb3J0cz1mdW5jdGlvbihhKXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGE/bnVsbCE9PWE6ImZ1bmN0aW9uIj09dHlwZW9mIGF9fSx7fV0sNTI6W2Z1bmN0aW9uKGEsYixjKXt2YXIgZD1hKCIuL19hbi1vYmplY3QiKSxlPWEoIi4vX2llOC1kb20tZGVmaW5lIiksZj1hKCIuL190by1wcmltaXRpdmUiKSxnPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTtjLmY9YSgiLi9fZGVzY3JpcHRvcnMiKT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oYSxiLGMpe2lmKGQoYSksYj1mKGIsITApLGQoYyksZSl0cnl7cmV0dXJuIGcoYSxiLGMpfWNhdGNoKGgpe31pZigiZ2V0ImluIGN8fCJzZXQiaW4gYyl0aHJvdyBUeXBlRXJyb3IoIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkISIpO3JldHVybiJ2YWx1ZSJpbiBjJiYoYVtiXT1jLnZhbHVlKSxhfX0seyIuL19hbi1vYmplY3QiOjM4LCIuL19kZXNjcmlwdG9ycyI6NDIsIi4vX2llOC1kb20tZGVmaW5lIjo0OSwiLi9fdG8tcHJpbWl0aXZlIjo1NX1dLDUzOltmdW5jdGlvbihhLGIsYyl7Yi5leHBvcnRzPWZ1bmN0aW9uKGEsYil7cmV0dXJue2VudW1lcmFibGU6ISgxJmEpLGNvbmZpZ3VyYWJsZTohKDImYSksd3JpdGFibGU6ISg0JmEpLHZhbHVlOmJ9fX0se31dLDU0OltmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmLGc9YSgiLi9fY3R4IiksaD1hKCIuL19pbnZva2UiKSxpPWEoIi4vX2h0bWwiKSxqPWEoIi4vX2RvbS1jcmVhdGUiKSxrPWEoIi4vX2dsb2JhbCIpLGw9ay5wcm9jZXNzLG09ay5zZXRJbW1lZGlhdGUsbj1rLmNsZWFySW1tZWRpYXRlLG89ay5NZXNzYWdlQ2hhbm5lbCxwPTAscT17fSxyPSJvbnJlYWR5c3RhdGVjaGFuZ2UiLHM9ZnVuY3Rpb24oKXt2YXIgYT0rdGhpcztpZihxLmhhc093blByb3BlcnR5KGEpKXt2YXIgYj1xW2FdO2RlbGV0ZSBxW2FdLGIoKX19LHQ9ZnVuY3Rpb24oYSl7cy5jYWxsKGEuZGF0YSl9O20mJm58fChtPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1bXSxjPTE7YXJndW1lbnRzLmxlbmd0aD5jOyliLnB1c2goYXJndW1lbnRzW2MrK10pO3JldHVybiBxWysrcF09ZnVuY3Rpb24oKXtoKCJmdW5jdGlvbiI9PXR5cGVvZiBhP2E6RnVuY3Rpb24oYSksYil9LGQocCkscH0sbj1mdW5jdGlvbihhKXtkZWxldGUgcVthXX0sInByb2Nlc3MiPT1hKCIuL19jb2YiKShsKT9kPWZ1bmN0aW9uKGEpe2wubmV4dFRpY2soZyhzLGEsMSkpfTpvPyhlPW5ldyBvLGY9ZS5wb3J0MixlLnBvcnQxLm9ubWVzc2FnZT10LGQ9ZyhmLnBvc3RNZXNzYWdlLGYsMSkpOmsuYWRkRXZlbnRMaXN0ZW5lciYmImZ1bmN0aW9uIj09dHlwZW9mIHBvc3RNZXNzYWdlJiYhay5pbXBvcnRTY3JpcHRzPyhkPWZ1bmN0aW9uKGEpe2sucG9zdE1lc3NhZ2UoYSsiIiwiKiIpfSxrLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHQsITEpKTpkPXIgaW4gaigic2NyaXB0Iik/ZnVuY3Rpb24oYSl7aS5hcHBlbmRDaGlsZChqKCJzY3JpcHQiKSlbcl09ZnVuY3Rpb24oKXtpLnJlbW92ZUNoaWxkKHRoaXMpLHMuY2FsbChhKX19OmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZyhzLGEsMSksMCl9KSxiLmV4cG9ydHM9e3NldDptLGNsZWFyOm59fSx7Ii4vX2NvZiI6MzksIi4vX2N0eCI6NDEsIi4vX2RvbS1jcmVhdGUiOjQzLCIuL19nbG9iYWwiOjQ2LCIuL19odG1sIjo0OCwiLi9faW52b2tlIjo1MH1dLDU1OltmdW5jdGlvbihhLGIsYyl7dmFyIGQ9YSgiLi9faXMtb2JqZWN0Iik7Yi5leHBvcnRzPWZ1bmN0aW9uKGEsYil7aWYoIWQoYSkpcmV0dXJuIGE7dmFyIGMsZTtpZihiJiYiZnVuY3Rpb24iPT10eXBlb2YoYz1hLnRvU3RyaW5nKSYmIWQoZT1jLmNhbGwoYSkpKXJldHVybiBlO2lmKCJmdW5jdGlvbiI9PXR5cGVvZihjPWEudmFsdWVPZikmJiFkKGU9Yy5jYWxsKGEpKSlyZXR1cm4gZTtpZighYiYmImZ1bmN0aW9uIj09dHlwZW9mKGM9YS50b1N0cmluZykmJiFkKGU9Yy5jYWxsKGEpKSlyZXR1cm4gZTt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfX0seyIuL19pcy1vYmplY3QiOjUxfV0sNTY6W2Z1bmN0aW9uKGEsYixjKXt2YXIgZD1hKCIuL19leHBvcnQiKSxlPWEoIi4vX3Rhc2siKTtkKGQuRytkLkIse3NldEltbWVkaWF0ZTplLnNldCxjbGVhckltbWVkaWF0ZTplLmNsZWFyfSl9LHsiLi9fZXhwb3J0Ijo0NCwiLi9fdGFzayI6NTR9XSw1NzpbZnVuY3Rpb24oYSxiLGMpeyhmdW5jdGlvbihhKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYygpe2s9ITA7Zm9yKHZhciBhLGIsYz1sLmxlbmd0aDtjOyl7Zm9yKGI9bCxsPVtdLGE9LTE7KythPGM7KWJbYV0oKTtjPWwubGVuZ3RofWs9ITF9ZnVuY3Rpb24gZChhKXsxIT09bC5wdXNoKGEpfHxrfHxlKCl9dmFyIGUsZj1hLk11dGF0aW9uT2JzZXJ2ZXJ8fGEuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtpZihmKXt2YXIgZz0wLGg9bmV3IGYoYyksaT1hLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtoLm9ic2VydmUoaSx7Y2hhcmFjdGVyRGF0YTohMH0pLGU9ZnVuY3Rpb24oKXtpLmRhdGE9Zz0rK2clMn19ZWxzZSBpZihhLnNldEltbWVkaWF0ZXx8InVuZGVmaW5lZCI9PXR5cGVvZiBhLk1lc3NhZ2VDaGFubmVsKWU9ImRvY3VtZW50ImluIGEmJiJvbnJlYWR5c3RhdGVjaGFuZ2UiaW4gYS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKT9mdW5jdGlvbigpe3ZhciBiPWEuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7Yi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtjKCksYi5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYiksYj1udWxsfSxhLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChiKX06ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGMsMCl9O2Vsc2V7dmFyIGo9bmV3IGEuTWVzc2FnZUNoYW5uZWw7ai5wb3J0MS5vbm1lc3NhZ2U9YyxlPWZ1bmN0aW9uKCl7ai5wb3J0Mi5wb3N0TWVzc2FnZSgwKX19dmFyIGssbD1bXTtiLmV4cG9ydHM9ZH0pLmNhbGwodGhpcywidW5kZWZpbmVkIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmP3NlbGY6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9KX0se31dLDU4OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoKXt9ZnVuY3Rpb24gZShhKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgYSl0aHJvdyBuZXcgVHlwZUVycm9yKCJyZXNvbHZlciBtdXN0IGJlIGEgZnVuY3Rpb24iKTt0aGlzLnN0YXRlPXMsdGhpcy5xdWV1ZT1bXSx0aGlzLm91dGNvbWU9dm9pZCAwLGEhPT1kJiZpKHRoaXMsYSl9ZnVuY3Rpb24gZihhLGIsYyl7dGhpcy5wcm9taXNlPWEsImZ1bmN0aW9uIj09dHlwZW9mIGImJih0aGlzLm9uRnVsZmlsbGVkPWIsdGhpcy5jYWxsRnVsZmlsbGVkPXRoaXMub3RoZXJDYWxsRnVsZmlsbGVkKSwiZnVuY3Rpb24iPT10eXBlb2YgYyYmKHRoaXMub25SZWplY3RlZD1jLHRoaXMuY2FsbFJlamVjdGVkPXRoaXMub3RoZXJDYWxsUmVqZWN0ZWQpfWZ1bmN0aW9uIGcoYSxiLGMpe28oZnVuY3Rpb24oKXt2YXIgZDt0cnl7ZD1iKGMpfWNhdGNoKGUpe3JldHVybiBwLnJlamVjdChhLGUpfWQ9PT1hP3AucmVqZWN0KGEsbmV3IFR5cGVFcnJvcigiQ2Fubm90IHJlc29sdmUgcHJvbWlzZSB3aXRoIGl0c2VsZiIpKTpwLnJlc29sdmUoYSxkKX0pfWZ1bmN0aW9uIGgoYSl7dmFyIGI9YSYmYS50aGVuO2lmKGEmJigib2JqZWN0Ij09dHlwZW9mIGF8fCJmdW5jdGlvbiI9PXR5cGVvZiBhKSYmImZ1bmN0aW9uIj09dHlwZW9mIGIpcmV0dXJuIGZ1bmN0aW9uKCl7Yi5hcHBseShhLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIGkoYSxiKXtmdW5jdGlvbiBjKGIpe2Z8fChmPSEwLHAucmVqZWN0KGEsYikpfWZ1bmN0aW9uIGQoYil7Znx8KGY9ITAscC5yZXNvbHZlKGEsYikpfWZ1bmN0aW9uIGUoKXtiKGQsYyl9dmFyIGY9ITEsZz1qKGUpOyJlcnJvciI9PT1nLnN0YXR1cyYmYyhnLnZhbHVlKX1mdW5jdGlvbiBqKGEsYil7dmFyIGM9e307dHJ5e2MudmFsdWU9YShiKSxjLnN0YXR1cz0ic3VjY2VzcyJ9Y2F0Y2goZCl7Yy5zdGF0dXM9ImVycm9yIixjLnZhbHVlPWR9cmV0dXJuIGN9ZnVuY3Rpb24gayhhKXtyZXR1cm4gYSBpbnN0YW5jZW9mIHRoaXM/YTpwLnJlc29sdmUobmV3IHRoaXMoZCksYSl9ZnVuY3Rpb24gbChhKXt2YXIgYj1uZXcgdGhpcyhkKTtyZXR1cm4gcC5yZWplY3QoYixhKX1mdW5jdGlvbiBtKGEpe2Z1bmN0aW9uIGIoYSxiKXtmdW5jdGlvbiBkKGEpe2dbYl09YSwrK2ghPT1lfHxmfHwoZj0hMCxwLnJlc29sdmUoaixnKSl9Yy5yZXNvbHZlKGEpLnRoZW4oZCxmdW5jdGlvbihhKXtmfHwoZj0hMCxwLnJlamVjdChqLGEpKX0pfXZhciBjPXRoaXM7aWYoIltvYmplY3QgQXJyYXldIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKSlyZXR1cm4gdGhpcy5yZWplY3QobmV3IFR5cGVFcnJvcigibXVzdCBiZSBhbiBhcnJheSIpKTt2YXIgZT1hLmxlbmd0aCxmPSExO2lmKCFlKXJldHVybiB0aGlzLnJlc29sdmUoW10pO2Zvcih2YXIgZz1uZXcgQXJyYXkoZSksaD0wLGk9LTEsaj1uZXcgdGhpcyhkKTsrK2k8ZTspYihhW2ldLGkpO3JldHVybiBqfWZ1bmN0aW9uIG4oYSl7ZnVuY3Rpb24gYihhKXtjLnJlc29sdmUoYSkudGhlbihmdW5jdGlvbihhKXtmfHwoZj0hMCxwLnJlc29sdmUoaCxhKSl9LGZ1bmN0aW9uKGEpe2Z8fChmPSEwLHAucmVqZWN0KGgsYSkpfSl9dmFyIGM9dGhpcztpZigiW29iamVjdCBBcnJheV0iIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpKXJldHVybiB0aGlzLnJlamVjdChuZXcgVHlwZUVycm9yKCJtdXN0IGJlIGFuIGFycmF5IikpO3ZhciBlPWEubGVuZ3RoLGY9ITE7aWYoIWUpcmV0dXJuIHRoaXMucmVzb2x2ZShbXSk7Zm9yKHZhciBnPS0xLGg9bmV3IHRoaXMoZCk7KytnPGU7KWIoYVtnXSk7cmV0dXJuIGh9dmFyIG89YSgiaW1tZWRpYXRlIikscD17fSxxPVsiUkVKRUNURUQiXSxyPVsiRlVMRklMTEVEIl0scz1bIlBFTkRJTkciXTtiLmV4cG9ydHM9ZSxlLnByb3RvdHlwZVsiY2F0Y2giXT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy50aGVuKG51bGwsYSl9LGUucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSxiKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgYSYmdGhpcy5zdGF0ZT09PXJ8fCJmdW5jdGlvbiIhPXR5cGVvZiBiJiZ0aGlzLnN0YXRlPT09cSlyZXR1cm4gdGhpczt2YXIgYz1uZXcgdGhpcy5jb25zdHJ1Y3RvcihkKTtpZih0aGlzLnN0YXRlIT09cyl7dmFyIGU9dGhpcy5zdGF0ZT09PXI/YTpiO2coYyxlLHRoaXMub3V0Y29tZSl9ZWxzZSB0aGlzLnF1ZXVlLnB1c2gobmV3IGYoYyxhLGIpKTtyZXR1cm4gY30sZi5wcm90b3R5cGUuY2FsbEZ1bGZpbGxlZD1mdW5jdGlvbihhKXtwLnJlc29sdmUodGhpcy5wcm9taXNlLGEpfSxmLnByb3RvdHlwZS5vdGhlckNhbGxGdWxmaWxsZWQ9ZnVuY3Rpb24oYSl7Zyh0aGlzLnByb21pc2UsdGhpcy5vbkZ1bGZpbGxlZCxhKX0sZi5wcm90b3R5cGUuY2FsbFJlamVjdGVkPWZ1bmN0aW9uKGEpe3AucmVqZWN0KHRoaXMucHJvbWlzZSxhKX0sZi5wcm90b3R5cGUub3RoZXJDYWxsUmVqZWN0ZWQ9ZnVuY3Rpb24oYSl7Zyh0aGlzLnByb21pc2UsdGhpcy5vblJlamVjdGVkLGEpfSxwLnJlc29sdmU9ZnVuY3Rpb24oYSxiKXt2YXIgYz1qKGgsYik7aWYoImVycm9yIj09PWMuc3RhdHVzKXJldHVybiBwLnJlamVjdChhLGMudmFsdWUpO3ZhciBkPWMudmFsdWU7aWYoZClpKGEsZCk7ZWxzZXthLnN0YXRlPXIsYS5vdXRjb21lPWI7Zm9yKHZhciBlPS0xLGY9YS5xdWV1ZS5sZW5ndGg7KytlPGY7KWEucXVldWVbZV0uY2FsbEZ1bGZpbGxlZChiKX1yZXR1cm4gYX0scC5yZWplY3Q9ZnVuY3Rpb24oYSxiKXthLnN0YXRlPXEsYS5vdXRjb21lPWI7Zm9yKHZhciBjPS0xLGQ9YS5xdWV1ZS5sZW5ndGg7KytjPGQ7KWEucXVldWVbY10uY2FsbFJlamVjdGVkKGIpO3JldHVybiBhfSxlLnJlc29sdmU9ayxlLnJlamVjdD1sLGUuYWxsPW0sZS5yYWNlPW59LHtpbW1lZGlhdGU6NTd9XSw1OTpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0Ijt2YXIgZD1hKCIuL2xpYi91dGlscy9jb21tb24iKS5hc3NpZ24sZT1hKCIuL2xpYi9kZWZsYXRlIiksZj1hKCIuL2xpYi9pbmZsYXRlIiksZz1hKCIuL2xpYi96bGliL2NvbnN0YW50cyIpLGg9e307ZChoLGUsZixnKSxiLmV4cG9ydHM9aH0seyIuL2xpYi9kZWZsYXRlIjo2MCwiLi9saWIvaW5mbGF0ZSI6NjEsIi4vbGliL3V0aWxzL2NvbW1vbiI6NjIsIi4vbGliL3psaWIvY29uc3RhbnRzIjo2NX1dLDYwOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7aWYoISh0aGlzIGluc3RhbmNlb2YgZCkpcmV0dXJuIG5ldyBkKGEpO3RoaXMub3B0aW9ucz1pLmFzc2lnbih7bGV2ZWw6cyxtZXRob2Q6dSxjaHVua1NpemU6MTYzODQsd2luZG93Qml0czoxNSxtZW1MZXZlbDo4LHN0cmF0ZWd5OnQsdG86IiJ9LGF8fHt9KTt2YXIgYj10aGlzLm9wdGlvbnM7Yi5yYXcmJmIud2luZG93Qml0cz4wP2Iud2luZG93Qml0cz0tYi53aW5kb3dCaXRzOmIuZ3ppcCYmYi53aW5kb3dCaXRzPjAmJmIud2luZG93Qml0czwxNiYmKGIud2luZG93Qml0cys9MTYpLHRoaXMuZXJyPTAsdGhpcy5tc2c9IiIsdGhpcy5lbmRlZD0hMSx0aGlzLmNodW5rcz1bXSx0aGlzLnN0cm09bmV3IGwsdGhpcy5zdHJtLmF2YWlsX291dD0wO3ZhciBjPWguZGVmbGF0ZUluaXQyKHRoaXMuc3RybSxiLmxldmVsLGIubWV0aG9kLGIud2luZG93Qml0cyxiLm1lbUxldmVsLGIuc3RyYXRlZ3kpO2lmKGMhPT1wKXRocm93IG5ldyBFcnJvcihrW2NdKTtpZihiLmhlYWRlciYmaC5kZWZsYXRlU2V0SGVhZGVyKHRoaXMuc3RybSxiLmhlYWRlciksYi5kaWN0aW9uYXJ5KXt2YXIgZTtpZihlPSJzdHJpbmciPT10eXBlb2YgYi5kaWN0aW9uYXJ5P2ouc3RyaW5nMmJ1ZihiLmRpY3Rpb25hcnkpOiJbb2JqZWN0IEFycmF5QnVmZmVyXSI9PT1tLmNhbGwoYi5kaWN0aW9uYXJ5KT9uZXcgVWludDhBcnJheShiLmRpY3Rpb25hcnkpOmIuZGljdGlvbmFyeSxjPWguZGVmbGF0ZVNldERpY3Rpb25hcnkodGhpcy5zdHJtLGUpLGMhPT1wKXRocm93IG5ldyBFcnJvcihrW2NdKTt0aGlzLl9kaWN0X3NldD0hMH19ZnVuY3Rpb24gZShhLGIpe3ZhciBjPW5ldyBkKGIpO2lmKGMucHVzaChhLCEwKSxjLmVycil0aHJvdyBjLm1zZ3x8a1tjLmVycl07cmV0dXJuIGMucmVzdWx0fWZ1bmN0aW9uIGYoYSxiKXtyZXR1cm4gYj1ifHx7fSxiLnJhdz0hMCxlKGEsYil9ZnVuY3Rpb24gZyhhLGIpe3JldHVybiBiPWJ8fHt9LGIuZ3ppcD0hMCxlKGEsYil9dmFyIGg9YSgiLi96bGliL2RlZmxhdGUiKSxpPWEoIi4vdXRpbHMvY29tbW9uIiksaj1hKCIuL3V0aWxzL3N0cmluZ3MiKSxrPWEoIi4vemxpYi9tZXNzYWdlcyIpLGw9YSgiLi96bGliL3pzdHJlYW0iKSxtPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsbj0wLG89NCxwPTAscT0xLHI9MixzPS0xLHQ9MCx1PTg7ZC5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZT10aGlzLnN0cm0sZj10aGlzLm9wdGlvbnMuY2h1bmtTaXplO2lmKHRoaXMuZW5kZWQpcmV0dXJuITE7ZD1iPT09fn5iP2I6Yj09PSEwP286biwic3RyaW5nIj09dHlwZW9mIGE/ZS5pbnB1dD1qLnN0cmluZzJidWYoYSk6IltvYmplY3QgQXJyYXlCdWZmZXJdIj09PW0uY2FsbChhKT9lLmlucHV0PW5ldyBVaW50OEFycmF5KGEpOmUuaW5wdXQ9YSxlLm5leHRfaW49MCxlLmF2YWlsX2luPWUuaW5wdXQubGVuZ3RoO2Rve2lmKDA9PT1lLmF2YWlsX291dCYmKGUub3V0cHV0PW5ldyBpLkJ1ZjgoZiksZS5uZXh0X291dD0wLGUuYXZhaWxfb3V0PWYpLGM9aC5kZWZsYXRlKGUsZCksYyE9PXEmJmMhPT1wKXJldHVybiB0aGlzLm9uRW5kKGMpLHRoaXMuZW5kZWQ9ITAsITE7MCE9PWUuYXZhaWxfb3V0JiYoMCE9PWUuYXZhaWxfaW58fGQhPT1vJiZkIT09cil8fCgic3RyaW5nIj09PXRoaXMub3B0aW9ucy50bz90aGlzLm9uRGF0YShqLmJ1ZjJiaW5zdHJpbmcoaS5zaHJpbmtCdWYoZS5vdXRwdXQsZS5uZXh0X291dCkpKTp0aGlzLm9uRGF0YShpLnNocmlua0J1ZihlLm91dHB1dCxlLm5leHRfb3V0KSkpfXdoaWxlKChlLmF2YWlsX2luPjB8fDA9PT1lLmF2YWlsX291dCkmJmMhPT1xKTtyZXR1cm4gZD09PW8/KGM9aC5kZWZsYXRlRW5kKHRoaXMuc3RybSksdGhpcy5vbkVuZChjKSx0aGlzLmVuZGVkPSEwLGM9PT1wKTpkIT09cnx8KHRoaXMub25FbmQocCksZS5hdmFpbF9vdXQ9MCwhMCl9LGQucHJvdG90eXBlLm9uRGF0YT1mdW5jdGlvbihhKXt0aGlzLmNodW5rcy5wdXNoKGEpfSxkLnByb3RvdHlwZS5vbkVuZD1mdW5jdGlvbihhKXthPT09cCYmKCJzdHJpbmciPT09dGhpcy5vcHRpb25zLnRvP3RoaXMucmVzdWx0PXRoaXMuY2h1bmtzLmpvaW4oIiIpOnRoaXMucmVzdWx0PWkuZmxhdHRlbkNodW5rcyh0aGlzLmNodW5rcykpLHRoaXMuY2h1bmtzPVtdLHRoaXMuZXJyPWEsdGhpcy5tc2c9dGhpcy5zdHJtLm1zZ30sYy5EZWZsYXRlPWQsYy5kZWZsYXRlPWUsYy5kZWZsYXRlUmF3PWYsYy5nemlwPWd9LHsiLi91dGlscy9jb21tb24iOjYyLCIuL3V0aWxzL3N0cmluZ3MiOjYzLCIuL3psaWIvZGVmbGF0ZSI6NjcsIi4vemxpYi9tZXNzYWdlcyI6NzIsIi4vemxpYi96c3RyZWFtIjo3NH1dLDYxOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7aWYoISh0aGlzIGluc3RhbmNlb2YgZCkpcmV0dXJuIG5ldyBkKGEpO3RoaXMub3B0aW9ucz1oLmFzc2lnbih7Y2h1bmtTaXplOjE2Mzg0LHdpbmRvd0JpdHM6MCx0bzoiIn0sYXx8e30pO3ZhciBiPXRoaXMub3B0aW9ucztiLnJhdyYmYi53aW5kb3dCaXRzPj0wJiZiLndpbmRvd0JpdHM8MTYmJihiLndpbmRvd0JpdHM9LWIud2luZG93Qml0cywwPT09Yi53aW5kb3dCaXRzJiYoYi53aW5kb3dCaXRzPS0xNSkpLCEoYi53aW5kb3dCaXRzPj0wJiZiLndpbmRvd0JpdHM8MTYpfHxhJiZhLndpbmRvd0JpdHN8fChiLndpbmRvd0JpdHMrPTMyKSxiLndpbmRvd0JpdHM+MTUmJmIud2luZG93Qml0czw0OCYmMD09PSgxNSZiLndpbmRvd0JpdHMpJiYoYi53aW5kb3dCaXRzfD0xNSksdGhpcy5lcnI9MCx0aGlzLm1zZz0iIix0aGlzLmVuZGVkPSExLHRoaXMuY2h1bmtzPVtdLHRoaXMuc3RybT1uZXcgbCx0aGlzLnN0cm0uYXZhaWxfb3V0PTA7dmFyIGM9Zy5pbmZsYXRlSW5pdDIodGhpcy5zdHJtLGIud2luZG93Qml0cyk7aWYoYyE9PWouWl9PSyl0aHJvdyBuZXcgRXJyb3Ioa1tjXSk7dGhpcy5oZWFkZXI9bmV3IG0sZy5pbmZsYXRlR2V0SGVhZGVyKHRoaXMuc3RybSx0aGlzLmhlYWRlcil9ZnVuY3Rpb24gZShhLGIpe3ZhciBjPW5ldyBkKGIpO2lmKGMucHVzaChhLCEwKSxjLmVycil0aHJvdyBjLm1zZ3x8a1tjLmVycl07cmV0dXJuIGMucmVzdWx0fWZ1bmN0aW9uIGYoYSxiKXtyZXR1cm4gYj1ifHx7fSxiLnJhdz0hMCxlKGEsYil9dmFyIGc9YSgiLi96bGliL2luZmxhdGUiKSxoPWEoIi4vdXRpbHMvY29tbW9uIiksaT1hKCIuL3V0aWxzL3N0cmluZ3MiKSxqPWEoIi4vemxpYi9jb25zdGFudHMiKSxrPWEoIi4vemxpYi9tZXNzYWdlcyIpLGw9YSgiLi96bGliL3pzdHJlYW0iKSxtPWEoIi4vemxpYi9nemhlYWRlciIpLG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztkLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsayxsLG09dGhpcy5zdHJtLG89dGhpcy5vcHRpb25zLmNodW5rU2l6ZSxwPXRoaXMub3B0aW9ucy5kaWN0aW9uYXJ5LHE9ITE7aWYodGhpcy5lbmRlZClyZXR1cm4hMTtkPWI9PT1+fmI/YjpiPT09ITA/ai5aX0ZJTklTSDpqLlpfTk9fRkxVU0gsInN0cmluZyI9PXR5cGVvZiBhP20uaW5wdXQ9aS5iaW5zdHJpbmcyYnVmKGEpOiJbb2JqZWN0IEFycmF5QnVmZmVyXSI9PT1uLmNhbGwoYSk/bS5pbnB1dD1uZXcgVWludDhBcnJheShhKTptLmlucHV0PWEsbS5uZXh0X2luPTAsbS5hdmFpbF9pbj1tLmlucHV0Lmxlbmd0aDtkb3tpZigwPT09bS5hdmFpbF9vdXQmJihtLm91dHB1dD1uZXcgaC5CdWY4KG8pLG0ubmV4dF9vdXQ9MCxtLmF2YWlsX291dD1vKSxjPWcuaW5mbGF0ZShtLGouWl9OT19GTFVTSCksYz09PWouWl9ORUVEX0RJQ1QmJnAmJihsPSJzdHJpbmciPT10eXBlb2YgcD9pLnN0cmluZzJidWYocCk6IltvYmplY3QgQXJyYXlCdWZmZXJdIj09PW4uY2FsbChwKT9uZXcgVWludDhBcnJheShwKTpwLGM9Zy5pbmZsYXRlU2V0RGljdGlvbmFyeSh0aGlzLnN0cm0sbCkpLGM9PT1qLlpfQlVGX0VSUk9SJiZxPT09ITAmJihjPWouWl9PSyxxPSExKSxjIT09ai5aX1NUUkVBTV9FTkQmJmMhPT1qLlpfT0spcmV0dXJuIHRoaXMub25FbmQoYyksdGhpcy5lbmRlZD0hMCwhMTttLm5leHRfb3V0JiYoMCE9PW0uYXZhaWxfb3V0JiZjIT09ai5aX1NUUkVBTV9FTkQmJigwIT09bS5hdmFpbF9pbnx8ZCE9PWouWl9GSU5JU0gmJmQhPT1qLlpfU1lOQ19GTFVTSCl8fCgic3RyaW5nIj09PXRoaXMub3B0aW9ucy50bz8oZT1pLnV0Zjhib3JkZXIobS5vdXRwdXQsbS5uZXh0X291dCksZj1tLm5leHRfb3V0LWUsaz1pLmJ1ZjJzdHJpbmcobS5vdXRwdXQsZSksbS5uZXh0X291dD1mLG0uYXZhaWxfb3V0PW8tZixmJiZoLmFycmF5U2V0KG0ub3V0cHV0LG0ub3V0cHV0LGUsZiwwKSx0aGlzLm9uRGF0YShrKSk6dGhpcy5vbkRhdGEoaC5zaHJpbmtCdWYobS5vdXRwdXQsbS5uZXh0X291dCkpKSksMD09PW0uYXZhaWxfaW4mJjA9PT1tLmF2YWlsX291dCYmKHE9ITApfXdoaWxlKChtLmF2YWlsX2luPjB8fDA9PT1tLmF2YWlsX291dCkmJmMhPT1qLlpfU1RSRUFNX0VORCk7cmV0dXJuIGM9PT1qLlpfU1RSRUFNX0VORCYmKGQ9ai5aX0ZJTklTSCksZD09PWouWl9GSU5JU0g/KGM9Zy5pbmZsYXRlRW5kKHRoaXMuc3RybSksdGhpcy5vbkVuZChjKSx0aGlzLmVuZGVkPSEwLGM9PT1qLlpfT0spOmQhPT1qLlpfU1lOQ19GTFVTSHx8KHRoaXMub25FbmQoai5aX09LKSxtLmF2YWlsX291dD0wLCEwKX0sZC5wcm90b3R5cGUub25EYXRhPWZ1bmN0aW9uKGEpe3RoaXMuY2h1bmtzLnB1c2goYSl9LGQucHJvdG90eXBlLm9uRW5kPWZ1bmN0aW9uKGEpe2E9PT1qLlpfT0smJigic3RyaW5nIj09PXRoaXMub3B0aW9ucy50bz90aGlzLnJlc3VsdD10aGlzLmNodW5rcy5qb2luKCIiKTp0aGlzLnJlc3VsdD1oLmZsYXR0ZW5DaHVua3ModGhpcy5jaHVua3MpKSx0aGlzLmNodW5rcz1bXSx0aGlzLmVycj1hLHRoaXMubXNnPXRoaXMuc3RybS5tc2d9LGMuSW5mbGF0ZT1kLGMuaW5mbGF0ZT1lLGMuaW5mbGF0ZVJhdz1mLGMudW5nemlwPWV9LHsiLi91dGlscy9jb21tb24iOjYyLCIuL3V0aWxzL3N0cmluZ3MiOjYzLCIuL3psaWIvY29uc3RhbnRzIjo2NSwiLi96bGliL2d6aGVhZGVyIjo2OCwiLi96bGliL2luZmxhdGUiOjcwLCIuL3psaWIvbWVzc2FnZXMiOjcyLCIuL3psaWIvenN0cmVhbSI6NzR9XSw2MjpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0Ijt2YXIgZD0idW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQ4QXJyYXkmJiJ1bmRlZmluZWQiIT10eXBlb2YgVWludDE2QXJyYXkmJiJ1bmRlZmluZWQiIT10eXBlb2YgSW50MzJBcnJheTtjLmFzc2lnbj1mdW5jdGlvbihhKXtmb3IodmFyIGI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO2IubGVuZ3RoOyl7dmFyIGM9Yi5zaGlmdCgpO2lmKGMpe2lmKCJvYmplY3QiIT10eXBlb2YgYyl0aHJvdyBuZXcgVHlwZUVycm9yKGMrIm11c3QgYmUgbm9uLW9iamVjdCIpO2Zvcih2YXIgZCBpbiBjKWMuaGFzT3duUHJvcGVydHkoZCkmJihhW2RdPWNbZF0pfX1yZXR1cm4gYX0sYy5zaHJpbmtCdWY9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5sZW5ndGg9PT1iP2E6YS5zdWJhcnJheT9hLnN1YmFycmF5KDAsYik6KGEubGVuZ3RoPWIsYSl9O3ZhciBlPXthcnJheVNldDpmdW5jdGlvbihhLGIsYyxkLGUpe2lmKGIuc3ViYXJyYXkmJmEuc3ViYXJyYXkpcmV0dXJuIHZvaWQgYS5zZXQoYi5zdWJhcnJheShjLGMrZCksZSk7Zm9yKHZhciBmPTA7ZjxkO2YrKylhW2UrZl09YltjK2ZdfSxmbGF0dGVuQ2h1bmtzOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZztmb3IoZD0wLGI9MCxjPWEubGVuZ3RoO2I8YztiKyspZCs9YVtiXS5sZW5ndGg7Zm9yKGc9bmV3IFVpbnQ4QXJyYXkoZCksZT0wLGI9MCxjPWEubGVuZ3RoO2I8YztiKyspZj1hW2JdLGcuc2V0KGYsZSksZSs9Zi5sZW5ndGg7cmV0dXJuIGd9fSxmPXthcnJheVNldDpmdW5jdGlvbihhLGIsYyxkLGUpe2Zvcih2YXIgZj0wO2Y8ZDtmKyspYVtlK2ZdPWJbYytmXX0sZmxhdHRlbkNodW5rczpmdW5jdGlvbihhKXtyZXR1cm5bXS5jb25jYXQuYXBwbHkoW10sYSl9fTtjLnNldFR5cGVkPWZ1bmN0aW9uKGEpe2E/KGMuQnVmOD1VaW50OEFycmF5LGMuQnVmMTY9VWludDE2QXJyYXksYy5CdWYzMj1JbnQzMkFycmF5LGMuYXNzaWduKGMsZSkpOihjLkJ1Zjg9QXJyYXksYy5CdWYxNj1BcnJheSxjLkJ1ZjMyPUFycmF5LGMuYXNzaWduKGMsZikpfSxjLnNldFR5cGVkKGQpfSx7fV0sNjM6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhLGIpe2lmKGI8NjU1MzcmJihhLnN1YmFycmF5JiZnfHwhYS5zdWJhcnJheSYmZikpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxlLnNocmlua0J1ZihhLGIpKTtmb3IodmFyIGM9IiIsZD0wO2Q8YjtkKyspYys9U3RyaW5nLmZyb21DaGFyQ29kZShhW2RdKTtyZXR1cm4gY312YXIgZT1hKCIuL2NvbW1vbiIpLGY9ITAsZz0hMDt0cnl7U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLFswXSl9Y2F0Y2goaCl7Zj0hMX10cnl7U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLG5ldyBVaW50OEFycmF5KDEpKX1jYXRjaChoKXtnPSExfWZvcih2YXIgaT1uZXcgZS5CdWY4KDI1Niksaj0wO2o8MjU2O2orKylpW2pdPWo+PTI1Mj82Omo+PTI0OD81Omo+PTI0MD80Omo+PTIyND8zOmo+PTE5Mj8yOjE7aVsyNTRdPWlbMjU0XT0xLGMuc3RyaW5nMmJ1Zj1mdW5jdGlvbihhKXt2YXIgYixjLGQsZixnLGg9YS5sZW5ndGgsaT0wO2ZvcihmPTA7ZjxoO2YrKyljPWEuY2hhckNvZGVBdChmKSw1NTI5Nj09PSg2NDUxMiZjKSYmZisxPGgmJihkPWEuY2hhckNvZGVBdChmKzEpLDU2MzIwPT09KDY0NTEyJmQpJiYoYz02NTUzNisoYy01NTI5Njw8MTApKyhkLTU2MzIwKSxmKyspKSxpKz1jPDEyOD8xOmM8MjA0OD8yOmM8NjU1MzY/Mzo0O2ZvcihiPW5ldyBlLkJ1ZjgoaSksZz0wLGY9MDtnPGk7ZisrKWM9YS5jaGFyQ29kZUF0KGYpLDU1Mjk2PT09KDY0NTEyJmMpJiZmKzE8aCYmKGQ9YS5jaGFyQ29kZUF0KGYrMSksNTYzMjA9PT0oNjQ1MTImZCkmJihjPTY1NTM2KyhjLTU1Mjk2PDwxMCkrKGQtNTYzMjApLGYrKykpLGM8MTI4P2JbZysrXT1jOmM8MjA0OD8oYltnKytdPTE5MnxjPj4+NixiW2crK109MTI4fDYzJmMpOmM8NjU1MzY/KGJbZysrXT0yMjR8Yz4+PjEyLGJbZysrXT0xMjh8Yz4+PjYmNjMsYltnKytdPTEyOHw2MyZjKTooYltnKytdPTI0MHxjPj4+MTgsYltnKytdPTEyOHxjPj4+MTImNjMsYltnKytdPTEyOHxjPj4+NiY2MyxiW2crK109MTI4fDYzJmMpO3JldHVybiBifSxjLmJ1ZjJiaW5zdHJpbmc9ZnVuY3Rpb24oYSl7cmV0dXJuIGQoYSxhLmxlbmd0aCl9LGMuYmluc3RyaW5nMmJ1Zj1mdW5jdGlvbihhKXtmb3IodmFyIGI9bmV3IGUuQnVmOChhLmxlbmd0aCksYz0wLGQ9Yi5sZW5ndGg7YzxkO2MrKyliW2NdPWEuY2hhckNvZGVBdChjKTtyZXR1cm4gYn0sYy5idWYyc3RyaW5nPWZ1bmN0aW9uKGEsYil7dmFyIGMsZSxmLGcsaD1ifHxhLmxlbmd0aCxqPW5ldyBBcnJheSgyKmgpO2ZvcihlPTAsYz0wO2M8aDspaWYoZj1hW2MrK10sZjwxMjgpaltlKytdPWY7ZWxzZSBpZihnPWlbZl0sZz40KWpbZSsrXT02NTUzMyxjKz1nLTE7ZWxzZXtmb3IoZiY9Mj09PWc/MzE6Mz09PWc/MTU6NztnPjEmJmM8aDspZj1mPDw2fDYzJmFbYysrXSxnLS07Zz4xP2pbZSsrXT02NTUzMzpmPDY1NTM2P2pbZSsrXT1mOihmLT02NTUzNixqW2UrK109NTUyOTZ8Zj4+MTAmMTAyMyxqW2UrK109NTYzMjB8MTAyMyZmKX1yZXR1cm4gZChqLGUpfSxjLnV0Zjhib3JkZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYztmb3IoYj1ifHxhLmxlbmd0aCxiPmEubGVuZ3RoJiYoYj1hLmxlbmd0aCksYz1iLTE7Yz49MCYmMTI4PT09KDE5MiZhW2NdKTspYy0tO3JldHVybiBjPDA/YjowPT09Yz9iOmMraVthW2NdXT5iP2M6Yn19LHsiLi9jb21tb24iOjYyfV0sNjQ6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZChhLGIsYyxkKXtmb3IodmFyIGU9NjU1MzUmYXwwLGY9YT4+PjE2JjY1NTM1fDAsZz0wOzAhPT1jOyl7Zz1jPjJlMz8yZTM6YyxjLT1nO2RvIGU9ZStiW2QrK118MCxmPWYrZXwwO3doaWxlKC0tZyk7ZSU9NjU1MjEsZiU9NjU1MjF9cmV0dXJuIGV8Zjw8MTZ8MDsKfWIuZXhwb3J0cz1kfSx7fV0sNjU6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7Yi5leHBvcnRzPXtaX05PX0ZMVVNIOjAsWl9QQVJUSUFMX0ZMVVNIOjEsWl9TWU5DX0ZMVVNIOjIsWl9GVUxMX0ZMVVNIOjMsWl9GSU5JU0g6NCxaX0JMT0NLOjUsWl9UUkVFUzo2LFpfT0s6MCxaX1NUUkVBTV9FTkQ6MSxaX05FRURfRElDVDoyLFpfRVJSTk86LTEsWl9TVFJFQU1fRVJST1I6LTIsWl9EQVRBX0VSUk9SOi0zLFpfQlVGX0VSUk9SOi01LFpfTk9fQ09NUFJFU1NJT046MCxaX0JFU1RfU1BFRUQ6MSxaX0JFU1RfQ09NUFJFU1NJT046OSxaX0RFRkFVTFRfQ09NUFJFU1NJT046LTEsWl9GSUxURVJFRDoxLFpfSFVGRk1BTl9PTkxZOjIsWl9STEU6MyxaX0ZJWEVEOjQsWl9ERUZBVUxUX1NUUkFURUdZOjAsWl9CSU5BUlk6MCxaX1RFWFQ6MSxaX1VOS05PV046MixaX0RFRkxBVEVEOjh9fSx7fV0sNjY6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZCgpe2Zvcih2YXIgYSxiPVtdLGM9MDtjPDI1NjtjKyspe2E9Yztmb3IodmFyIGQ9MDtkPDg7ZCsrKWE9MSZhPzM5ODgyOTIzODReYT4+PjE6YT4+PjE7YltjXT1hfXJldHVybiBifWZ1bmN0aW9uIGUoYSxiLGMsZCl7dmFyIGU9ZixnPWQrYzthXj0tMTtmb3IodmFyIGg9ZDtoPGc7aCsrKWE9YT4+PjheZVsyNTUmKGFeYltoXSldO3JldHVybiBhXi0xfXZhciBmPWQoKTtiLmV4cG9ydHM9ZX0se31dLDY3OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSxiKXtyZXR1cm4gYS5tc2c9SVtiXSxifWZ1bmN0aW9uIGUoYSl7cmV0dXJuKGE8PDEpLShhPjQ/OTowKX1mdW5jdGlvbiBmKGEpe2Zvcih2YXIgYj1hLmxlbmd0aDstLWI+PTA7KWFbYl09MH1mdW5jdGlvbiBnKGEpe3ZhciBiPWEuc3RhdGUsYz1iLnBlbmRpbmc7Yz5hLmF2YWlsX291dCYmKGM9YS5hdmFpbF9vdXQpLDAhPT1jJiYoRS5hcnJheVNldChhLm91dHB1dCxiLnBlbmRpbmdfYnVmLGIucGVuZGluZ19vdXQsYyxhLm5leHRfb3V0KSxhLm5leHRfb3V0Kz1jLGIucGVuZGluZ19vdXQrPWMsYS50b3RhbF9vdXQrPWMsYS5hdmFpbF9vdXQtPWMsYi5wZW5kaW5nLT1jLDA9PT1iLnBlbmRpbmcmJihiLnBlbmRpbmdfb3V0PTApKX1mdW5jdGlvbiBoKGEsYil7Ri5fdHJfZmx1c2hfYmxvY2soYSxhLmJsb2NrX3N0YXJ0Pj0wP2EuYmxvY2tfc3RhcnQ6LTEsYS5zdHJzdGFydC1hLmJsb2NrX3N0YXJ0LGIpLGEuYmxvY2tfc3RhcnQ9YS5zdHJzdGFydCxnKGEuc3RybSl9ZnVuY3Rpb24gaShhLGIpe2EucGVuZGluZ19idWZbYS5wZW5kaW5nKytdPWJ9ZnVuY3Rpb24gaihhLGIpe2EucGVuZGluZ19idWZbYS5wZW5kaW5nKytdPWI+Pj44JjI1NSxhLnBlbmRpbmdfYnVmW2EucGVuZGluZysrXT0yNTUmYn1mdW5jdGlvbiBrKGEsYixjLGQpe3ZhciBlPWEuYXZhaWxfaW47cmV0dXJuIGU+ZCYmKGU9ZCksMD09PWU/MDooYS5hdmFpbF9pbi09ZSxFLmFycmF5U2V0KGIsYS5pbnB1dCxhLm5leHRfaW4sZSxjKSwxPT09YS5zdGF0ZS53cmFwP2EuYWRsZXI9RyhhLmFkbGVyLGIsZSxjKToyPT09YS5zdGF0ZS53cmFwJiYoYS5hZGxlcj1IKGEuYWRsZXIsYixlLGMpKSxhLm5leHRfaW4rPWUsYS50b3RhbF9pbis9ZSxlKX1mdW5jdGlvbiBsKGEsYil7dmFyIGMsZCxlPWEubWF4X2NoYWluX2xlbmd0aCxmPWEuc3Ryc3RhcnQsZz1hLnByZXZfbGVuZ3RoLGg9YS5uaWNlX21hdGNoLGk9YS5zdHJzdGFydD5hLndfc2l6ZS1sYT9hLnN0cnN0YXJ0LShhLndfc2l6ZS1sYSk6MCxqPWEud2luZG93LGs9YS53X21hc2ssbD1hLnByZXYsbT1hLnN0cnN0YXJ0K2thLG49altmK2ctMV0sbz1qW2YrZ107YS5wcmV2X2xlbmd0aD49YS5nb29kX21hdGNoJiYoZT4+PTIpLGg+YS5sb29rYWhlYWQmJihoPWEubG9va2FoZWFkKTtkbyBpZihjPWIsaltjK2ddPT09byYmaltjK2ctMV09PT1uJiZqW2NdPT09altmXSYmalsrK2NdPT09altmKzFdKXtmKz0yLGMrKztkbzt3aGlsZShqWysrZl09PT1qWysrY10mJmpbKytmXT09PWpbKytjXSYmalsrK2ZdPT09alsrK2NdJiZqWysrZl09PT1qWysrY10mJmpbKytmXT09PWpbKytjXSYmalsrK2ZdPT09alsrK2NdJiZqWysrZl09PT1qWysrY10mJmpbKytmXT09PWpbKytjXSYmZjxtKTtpZihkPWthLShtLWYpLGY9bS1rYSxkPmcpe2lmKGEubWF0Y2hfc3RhcnQ9YixnPWQsZD49aClicmVhaztuPWpbZitnLTFdLG89altmK2ddfX13aGlsZSgoYj1sW2Ima10pPmkmJjAhPT0tLWUpO3JldHVybiBnPD1hLmxvb2thaGVhZD9nOmEubG9va2FoZWFkfWZ1bmN0aW9uIG0oYSl7dmFyIGIsYyxkLGUsZixnPWEud19zaXplO2Rve2lmKGU9YS53aW5kb3dfc2l6ZS1hLmxvb2thaGVhZC1hLnN0cnN0YXJ0LGEuc3Ryc3RhcnQ+PWcrKGctbGEpKXtFLmFycmF5U2V0KGEud2luZG93LGEud2luZG93LGcsZywwKSxhLm1hdGNoX3N0YXJ0LT1nLGEuc3Ryc3RhcnQtPWcsYS5ibG9ja19zdGFydC09ZyxjPWEuaGFzaF9zaXplLGI9YztkbyBkPWEuaGVhZFstLWJdLGEuaGVhZFtiXT1kPj1nP2QtZzowO3doaWxlKC0tYyk7Yz1nLGI9YztkbyBkPWEucHJldlstLWJdLGEucHJldltiXT1kPj1nP2QtZzowO3doaWxlKC0tYyk7ZSs9Z31pZigwPT09YS5zdHJtLmF2YWlsX2luKWJyZWFrO2lmKGM9ayhhLnN0cm0sYS53aW5kb3csYS5zdHJzdGFydCthLmxvb2thaGVhZCxlKSxhLmxvb2thaGVhZCs9YyxhLmxvb2thaGVhZCthLmluc2VydD49amEpZm9yKGY9YS5zdHJzdGFydC1hLmluc2VydCxhLmluc19oPWEud2luZG93W2ZdLGEuaW5zX2g9KGEuaW5zX2g8PGEuaGFzaF9zaGlmdF5hLndpbmRvd1tmKzFdKSZhLmhhc2hfbWFzazthLmluc2VydCYmKGEuaW5zX2g9KGEuaW5zX2g8PGEuaGFzaF9zaGlmdF5hLndpbmRvd1tmK2phLTFdKSZhLmhhc2hfbWFzayxhLnByZXZbZiZhLndfbWFza109YS5oZWFkW2EuaW5zX2hdLGEuaGVhZFthLmluc19oXT1mLGYrKyxhLmluc2VydC0tLCEoYS5sb29rYWhlYWQrYS5pbnNlcnQ8amEpKTspO313aGlsZShhLmxvb2thaGVhZDxsYSYmMCE9PWEuc3RybS5hdmFpbF9pbil9ZnVuY3Rpb24gbihhLGIpe3ZhciBjPTY1NTM1O2ZvcihjPmEucGVuZGluZ19idWZfc2l6ZS01JiYoYz1hLnBlbmRpbmdfYnVmX3NpemUtNSk7Oyl7aWYoYS5sb29rYWhlYWQ8PTEpe2lmKG0oYSksMD09PWEubG9va2FoZWFkJiZiPT09SilyZXR1cm4gdWE7aWYoMD09PWEubG9va2FoZWFkKWJyZWFrfWEuc3Ryc3RhcnQrPWEubG9va2FoZWFkLGEubG9va2FoZWFkPTA7dmFyIGQ9YS5ibG9ja19zdGFydCtjO2lmKCgwPT09YS5zdHJzdGFydHx8YS5zdHJzdGFydD49ZCkmJihhLmxvb2thaGVhZD1hLnN0cnN0YXJ0LWQsYS5zdHJzdGFydD1kLGgoYSwhMSksMD09PWEuc3RybS5hdmFpbF9vdXQpKXJldHVybiB1YTtpZihhLnN0cnN0YXJ0LWEuYmxvY2tfc3RhcnQ+PWEud19zaXplLWxhJiYoaChhLCExKSwwPT09YS5zdHJtLmF2YWlsX291dCkpcmV0dXJuIHVhfXJldHVybiBhLmluc2VydD0wLGI9PT1NPyhoKGEsITApLDA9PT1hLnN0cm0uYXZhaWxfb3V0P3dhOnhhKTphLnN0cnN0YXJ0PmEuYmxvY2tfc3RhcnQmJihoKGEsITEpLDA9PT1hLnN0cm0uYXZhaWxfb3V0KT91YTp1YX1mdW5jdGlvbiBvKGEsYil7Zm9yKHZhciBjLGQ7Oyl7aWYoYS5sb29rYWhlYWQ8bGEpe2lmKG0oYSksYS5sb29rYWhlYWQ8bGEmJmI9PT1KKXJldHVybiB1YTtpZigwPT09YS5sb29rYWhlYWQpYnJlYWt9aWYoYz0wLGEubG9va2FoZWFkPj1qYSYmKGEuaW5zX2g9KGEuaW5zX2g8PGEuaGFzaF9zaGlmdF5hLndpbmRvd1thLnN0cnN0YXJ0K2phLTFdKSZhLmhhc2hfbWFzayxjPWEucHJldlthLnN0cnN0YXJ0JmEud19tYXNrXT1hLmhlYWRbYS5pbnNfaF0sYS5oZWFkW2EuaW5zX2hdPWEuc3Ryc3RhcnQpLDAhPT1jJiZhLnN0cnN0YXJ0LWM8PWEud19zaXplLWxhJiYoYS5tYXRjaF9sZW5ndGg9bChhLGMpKSxhLm1hdGNoX2xlbmd0aD49amEpaWYoZD1GLl90cl90YWxseShhLGEuc3Ryc3RhcnQtYS5tYXRjaF9zdGFydCxhLm1hdGNoX2xlbmd0aC1qYSksYS5sb29rYWhlYWQtPWEubWF0Y2hfbGVuZ3RoLGEubWF0Y2hfbGVuZ3RoPD1hLm1heF9sYXp5X21hdGNoJiZhLmxvb2thaGVhZD49amEpe2EubWF0Y2hfbGVuZ3RoLS07ZG8gYS5zdHJzdGFydCsrLGEuaW5zX2g9KGEuaW5zX2g8PGEuaGFzaF9zaGlmdF5hLndpbmRvd1thLnN0cnN0YXJ0K2phLTFdKSZhLmhhc2hfbWFzayxjPWEucHJldlthLnN0cnN0YXJ0JmEud19tYXNrXT1hLmhlYWRbYS5pbnNfaF0sYS5oZWFkW2EuaW5zX2hdPWEuc3Ryc3RhcnQ7d2hpbGUoMCE9PS0tYS5tYXRjaF9sZW5ndGgpO2Euc3Ryc3RhcnQrK31lbHNlIGEuc3Ryc3RhcnQrPWEubWF0Y2hfbGVuZ3RoLGEubWF0Y2hfbGVuZ3RoPTAsYS5pbnNfaD1hLndpbmRvd1thLnN0cnN0YXJ0XSxhLmluc19oPShhLmluc19oPDxhLmhhc2hfc2hpZnReYS53aW5kb3dbYS5zdHJzdGFydCsxXSkmYS5oYXNoX21hc2s7ZWxzZSBkPUYuX3RyX3RhbGx5KGEsMCxhLndpbmRvd1thLnN0cnN0YXJ0XSksYS5sb29rYWhlYWQtLSxhLnN0cnN0YXJ0Kys7aWYoZCYmKGgoYSwhMSksMD09PWEuc3RybS5hdmFpbF9vdXQpKXJldHVybiB1YX1yZXR1cm4gYS5pbnNlcnQ9YS5zdHJzdGFydDxqYS0xP2Euc3Ryc3RhcnQ6amEtMSxiPT09TT8oaChhLCEwKSwwPT09YS5zdHJtLmF2YWlsX291dD93YTp4YSk6YS5sYXN0X2xpdCYmKGgoYSwhMSksMD09PWEuc3RybS5hdmFpbF9vdXQpP3VhOnZhfWZ1bmN0aW9uIHAoYSxiKXtmb3IodmFyIGMsZCxlOzspe2lmKGEubG9va2FoZWFkPGxhKXtpZihtKGEpLGEubG9va2FoZWFkPGxhJiZiPT09SilyZXR1cm4gdWE7aWYoMD09PWEubG9va2FoZWFkKWJyZWFrfWlmKGM9MCxhLmxvb2thaGVhZD49amEmJihhLmluc19oPShhLmluc19oPDxhLmhhc2hfc2hpZnReYS53aW5kb3dbYS5zdHJzdGFydCtqYS0xXSkmYS5oYXNoX21hc2ssYz1hLnByZXZbYS5zdHJzdGFydCZhLndfbWFza109YS5oZWFkW2EuaW5zX2hdLGEuaGVhZFthLmluc19oXT1hLnN0cnN0YXJ0KSxhLnByZXZfbGVuZ3RoPWEubWF0Y2hfbGVuZ3RoLGEucHJldl9tYXRjaD1hLm1hdGNoX3N0YXJ0LGEubWF0Y2hfbGVuZ3RoPWphLTEsMCE9PWMmJmEucHJldl9sZW5ndGg8YS5tYXhfbGF6eV9tYXRjaCYmYS5zdHJzdGFydC1jPD1hLndfc2l6ZS1sYSYmKGEubWF0Y2hfbGVuZ3RoPWwoYSxjKSxhLm1hdGNoX2xlbmd0aDw9NSYmKGEuc3RyYXRlZ3k9PT1VfHxhLm1hdGNoX2xlbmd0aD09PWphJiZhLnN0cnN0YXJ0LWEubWF0Y2hfc3RhcnQ+NDA5NikmJihhLm1hdGNoX2xlbmd0aD1qYS0xKSksYS5wcmV2X2xlbmd0aD49amEmJmEubWF0Y2hfbGVuZ3RoPD1hLnByZXZfbGVuZ3RoKXtlPWEuc3Ryc3RhcnQrYS5sb29rYWhlYWQtamEsZD1GLl90cl90YWxseShhLGEuc3Ryc3RhcnQtMS1hLnByZXZfbWF0Y2gsYS5wcmV2X2xlbmd0aC1qYSksYS5sb29rYWhlYWQtPWEucHJldl9sZW5ndGgtMSxhLnByZXZfbGVuZ3RoLT0yO2RvKythLnN0cnN0YXJ0PD1lJiYoYS5pbnNfaD0oYS5pbnNfaDw8YS5oYXNoX3NoaWZ0XmEud2luZG93W2Euc3Ryc3RhcnQramEtMV0pJmEuaGFzaF9tYXNrLGM9YS5wcmV2W2Euc3Ryc3RhcnQmYS53X21hc2tdPWEuaGVhZFthLmluc19oXSxhLmhlYWRbYS5pbnNfaF09YS5zdHJzdGFydCk7d2hpbGUoMCE9PS0tYS5wcmV2X2xlbmd0aCk7aWYoYS5tYXRjaF9hdmFpbGFibGU9MCxhLm1hdGNoX2xlbmd0aD1qYS0xLGEuc3Ryc3RhcnQrKyxkJiYoaChhLCExKSwwPT09YS5zdHJtLmF2YWlsX291dCkpcmV0dXJuIHVhfWVsc2UgaWYoYS5tYXRjaF9hdmFpbGFibGUpe2lmKGQ9Ri5fdHJfdGFsbHkoYSwwLGEud2luZG93W2Euc3Ryc3RhcnQtMV0pLGQmJmgoYSwhMSksYS5zdHJzdGFydCsrLGEubG9va2FoZWFkLS0sMD09PWEuc3RybS5hdmFpbF9vdXQpcmV0dXJuIHVhfWVsc2UgYS5tYXRjaF9hdmFpbGFibGU9MSxhLnN0cnN0YXJ0KyssYS5sb29rYWhlYWQtLX1yZXR1cm4gYS5tYXRjaF9hdmFpbGFibGUmJihkPUYuX3RyX3RhbGx5KGEsMCxhLndpbmRvd1thLnN0cnN0YXJ0LTFdKSxhLm1hdGNoX2F2YWlsYWJsZT0wKSxhLmluc2VydD1hLnN0cnN0YXJ0PGphLTE/YS5zdHJzdGFydDpqYS0xLGI9PT1NPyhoKGEsITApLDA9PT1hLnN0cm0uYXZhaWxfb3V0P3dhOnhhKTphLmxhc3RfbGl0JiYoaChhLCExKSwwPT09YS5zdHJtLmF2YWlsX291dCk/dWE6dmF9ZnVuY3Rpb24gcShhLGIpe2Zvcih2YXIgYyxkLGUsZixnPWEud2luZG93Ozspe2lmKGEubG9va2FoZWFkPD1rYSl7aWYobShhKSxhLmxvb2thaGVhZDw9a2EmJmI9PT1KKXJldHVybiB1YTtpZigwPT09YS5sb29rYWhlYWQpYnJlYWt9aWYoYS5tYXRjaF9sZW5ndGg9MCxhLmxvb2thaGVhZD49amEmJmEuc3Ryc3RhcnQ+MCYmKGU9YS5zdHJzdGFydC0xLGQ9Z1tlXSxkPT09Z1srK2VdJiZkPT09Z1srK2VdJiZkPT09Z1srK2VdKSl7Zj1hLnN0cnN0YXJ0K2thO2RvO3doaWxlKGQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmQ9PT1nWysrZV0mJmU8Zik7YS5tYXRjaF9sZW5ndGg9a2EtKGYtZSksYS5tYXRjaF9sZW5ndGg+YS5sb29rYWhlYWQmJihhLm1hdGNoX2xlbmd0aD1hLmxvb2thaGVhZCl9aWYoYS5tYXRjaF9sZW5ndGg+PWphPyhjPUYuX3RyX3RhbGx5KGEsMSxhLm1hdGNoX2xlbmd0aC1qYSksYS5sb29rYWhlYWQtPWEubWF0Y2hfbGVuZ3RoLGEuc3Ryc3RhcnQrPWEubWF0Y2hfbGVuZ3RoLGEubWF0Y2hfbGVuZ3RoPTApOihjPUYuX3RyX3RhbGx5KGEsMCxhLndpbmRvd1thLnN0cnN0YXJ0XSksYS5sb29rYWhlYWQtLSxhLnN0cnN0YXJ0KyspLGMmJihoKGEsITEpLDA9PT1hLnN0cm0uYXZhaWxfb3V0KSlyZXR1cm4gdWF9cmV0dXJuIGEuaW5zZXJ0PTAsYj09PU0/KGgoYSwhMCksMD09PWEuc3RybS5hdmFpbF9vdXQ/d2E6eGEpOmEubGFzdF9saXQmJihoKGEsITEpLDA9PT1hLnN0cm0uYXZhaWxfb3V0KT91YTp2YX1mdW5jdGlvbiByKGEsYil7Zm9yKHZhciBjOzspe2lmKDA9PT1hLmxvb2thaGVhZCYmKG0oYSksMD09PWEubG9va2FoZWFkKSl7aWYoYj09PUopcmV0dXJuIHVhO2JyZWFrfWlmKGEubWF0Y2hfbGVuZ3RoPTAsYz1GLl90cl90YWxseShhLDAsYS53aW5kb3dbYS5zdHJzdGFydF0pLGEubG9va2FoZWFkLS0sYS5zdHJzdGFydCsrLGMmJihoKGEsITEpLDA9PT1hLnN0cm0uYXZhaWxfb3V0KSlyZXR1cm4gdWF9cmV0dXJuIGEuaW5zZXJ0PTAsYj09PU0/KGgoYSwhMCksMD09PWEuc3RybS5hdmFpbF9vdXQ/d2E6eGEpOmEubGFzdF9saXQmJihoKGEsITEpLDA9PT1hLnN0cm0uYXZhaWxfb3V0KT91YTp2YX1mdW5jdGlvbiBzKGEsYixjLGQsZSl7dGhpcy5nb29kX2xlbmd0aD1hLHRoaXMubWF4X2xhenk9Yix0aGlzLm5pY2VfbGVuZ3RoPWMsdGhpcy5tYXhfY2hhaW49ZCx0aGlzLmZ1bmM9ZX1mdW5jdGlvbiB0KGEpe2Eud2luZG93X3NpemU9MiphLndfc2l6ZSxmKGEuaGVhZCksYS5tYXhfbGF6eV9tYXRjaD1EW2EubGV2ZWxdLm1heF9sYXp5LGEuZ29vZF9tYXRjaD1EW2EubGV2ZWxdLmdvb2RfbGVuZ3RoLGEubmljZV9tYXRjaD1EW2EubGV2ZWxdLm5pY2VfbGVuZ3RoLGEubWF4X2NoYWluX2xlbmd0aD1EW2EubGV2ZWxdLm1heF9jaGFpbixhLnN0cnN0YXJ0PTAsYS5ibG9ja19zdGFydD0wLGEubG9va2FoZWFkPTAsYS5pbnNlcnQ9MCxhLm1hdGNoX2xlbmd0aD1hLnByZXZfbGVuZ3RoPWphLTEsYS5tYXRjaF9hdmFpbGFibGU9MCxhLmluc19oPTB9ZnVuY3Rpb24gdSgpe3RoaXMuc3RybT1udWxsLHRoaXMuc3RhdHVzPTAsdGhpcy5wZW5kaW5nX2J1Zj1udWxsLHRoaXMucGVuZGluZ19idWZfc2l6ZT0wLHRoaXMucGVuZGluZ19vdXQ9MCx0aGlzLnBlbmRpbmc9MCx0aGlzLndyYXA9MCx0aGlzLmd6aGVhZD1udWxsLHRoaXMuZ3ppbmRleD0wLHRoaXMubWV0aG9kPSQsdGhpcy5sYXN0X2ZsdXNoPS0xLHRoaXMud19zaXplPTAsdGhpcy53X2JpdHM9MCx0aGlzLndfbWFzaz0wLHRoaXMud2luZG93PW51bGwsdGhpcy53aW5kb3dfc2l6ZT0wLHRoaXMucHJldj1udWxsLHRoaXMuaGVhZD1udWxsLHRoaXMuaW5zX2g9MCx0aGlzLmhhc2hfc2l6ZT0wLHRoaXMuaGFzaF9iaXRzPTAsdGhpcy5oYXNoX21hc2s9MCx0aGlzLmhhc2hfc2hpZnQ9MCx0aGlzLmJsb2NrX3N0YXJ0PTAsdGhpcy5tYXRjaF9sZW5ndGg9MCx0aGlzLnByZXZfbWF0Y2g9MCx0aGlzLm1hdGNoX2F2YWlsYWJsZT0wLHRoaXMuc3Ryc3RhcnQ9MCx0aGlzLm1hdGNoX3N0YXJ0PTAsdGhpcy5sb29rYWhlYWQ9MCx0aGlzLnByZXZfbGVuZ3RoPTAsdGhpcy5tYXhfY2hhaW5fbGVuZ3RoPTAsdGhpcy5tYXhfbGF6eV9tYXRjaD0wLHRoaXMubGV2ZWw9MCx0aGlzLnN0cmF0ZWd5PTAsdGhpcy5nb29kX21hdGNoPTAsdGhpcy5uaWNlX21hdGNoPTAsdGhpcy5keW5fbHRyZWU9bmV3IEUuQnVmMTYoMipoYSksdGhpcy5keW5fZHRyZWU9bmV3IEUuQnVmMTYoMiooMipmYSsxKSksdGhpcy5ibF90cmVlPW5ldyBFLkJ1ZjE2KDIqKDIqZ2ErMSkpLGYodGhpcy5keW5fbHRyZWUpLGYodGhpcy5keW5fZHRyZWUpLGYodGhpcy5ibF90cmVlKSx0aGlzLmxfZGVzYz1udWxsLHRoaXMuZF9kZXNjPW51bGwsdGhpcy5ibF9kZXNjPW51bGwsdGhpcy5ibF9jb3VudD1uZXcgRS5CdWYxNihpYSsxKSx0aGlzLmhlYXA9bmV3IEUuQnVmMTYoMiplYSsxKSxmKHRoaXMuaGVhcCksdGhpcy5oZWFwX2xlbj0wLHRoaXMuaGVhcF9tYXg9MCx0aGlzLmRlcHRoPW5ldyBFLkJ1ZjE2KDIqZWErMSksZih0aGlzLmRlcHRoKSx0aGlzLmxfYnVmPTAsdGhpcy5saXRfYnVmc2l6ZT0wLHRoaXMubGFzdF9saXQ9MCx0aGlzLmRfYnVmPTAsdGhpcy5vcHRfbGVuPTAsdGhpcy5zdGF0aWNfbGVuPTAsdGhpcy5tYXRjaGVzPTAsdGhpcy5pbnNlcnQ9MCx0aGlzLmJpX2J1Zj0wLHRoaXMuYmlfdmFsaWQ9MH1mdW5jdGlvbiB2KGEpe3ZhciBiO3JldHVybiBhJiZhLnN0YXRlPyhhLnRvdGFsX2luPWEudG90YWxfb3V0PTAsYS5kYXRhX3R5cGU9WixiPWEuc3RhdGUsYi5wZW5kaW5nPTAsYi5wZW5kaW5nX291dD0wLGIud3JhcDwwJiYoYi53cmFwPS1iLndyYXApLGIuc3RhdHVzPWIud3JhcD9uYTpzYSxhLmFkbGVyPTI9PT1iLndyYXA/MDoxLGIubGFzdF9mbHVzaD1KLEYuX3RyX2luaXQoYiksTyk6ZChhLFEpfWZ1bmN0aW9uIHcoYSl7dmFyIGI9dihhKTtyZXR1cm4gYj09PU8mJnQoYS5zdGF0ZSksYn1mdW5jdGlvbiB4KGEsYil7cmV0dXJuIGEmJmEuc3RhdGU/MiE9PWEuc3RhdGUud3JhcD9ROihhLnN0YXRlLmd6aGVhZD1iLE8pOlF9ZnVuY3Rpb24geShhLGIsYyxlLGYsZyl7aWYoIWEpcmV0dXJuIFE7dmFyIGg9MTtpZihiPT09VCYmKGI9NiksZTwwPyhoPTAsZT0tZSk6ZT4xNSYmKGg9MixlLT0xNiksZjwxfHxmPl98fGMhPT0kfHxlPDh8fGU+MTV8fGI8MHx8Yj45fHxnPDB8fGc+WClyZXR1cm4gZChhLFEpOzg9PT1lJiYoZT05KTt2YXIgaT1uZXcgdTtyZXR1cm4gYS5zdGF0ZT1pLGkuc3RybT1hLGkud3JhcD1oLGkuZ3poZWFkPW51bGwsaS53X2JpdHM9ZSxpLndfc2l6ZT0xPDxpLndfYml0cyxpLndfbWFzaz1pLndfc2l6ZS0xLGkuaGFzaF9iaXRzPWYrNyxpLmhhc2hfc2l6ZT0xPDxpLmhhc2hfYml0cyxpLmhhc2hfbWFzaz1pLmhhc2hfc2l6ZS0xLGkuaGFzaF9zaGlmdD1+figoaS5oYXNoX2JpdHMramEtMSkvamEpLGkud2luZG93PW5ldyBFLkJ1ZjgoMippLndfc2l6ZSksaS5oZWFkPW5ldyBFLkJ1ZjE2KGkuaGFzaF9zaXplKSxpLnByZXY9bmV3IEUuQnVmMTYoaS53X3NpemUpLGkubGl0X2J1ZnNpemU9MTw8Zis2LGkucGVuZGluZ19idWZfc2l6ZT00KmkubGl0X2J1ZnNpemUsaS5wZW5kaW5nX2J1Zj1uZXcgRS5CdWY4KGkucGVuZGluZ19idWZfc2l6ZSksaS5kX2J1Zj0xKmkubGl0X2J1ZnNpemUsaS5sX2J1Zj0zKmkubGl0X2J1ZnNpemUsaS5sZXZlbD1iLGkuc3RyYXRlZ3k9ZyxpLm1ldGhvZD1jLHcoYSl9ZnVuY3Rpb24geihhLGIpe3JldHVybiB5KGEsYiwkLGFhLGJhLFkpfWZ1bmN0aW9uIEEoYSxiKXt2YXIgYyxoLGssbDtpZighYXx8IWEuc3RhdGV8fGI+Tnx8YjwwKXJldHVybiBhP2QoYSxRKTpRO2lmKGg9YS5zdGF0ZSwhYS5vdXRwdXR8fCFhLmlucHV0JiYwIT09YS5hdmFpbF9pbnx8aC5zdGF0dXM9PT10YSYmYiE9PU0pcmV0dXJuIGQoYSwwPT09YS5hdmFpbF9vdXQ/UzpRKTtpZihoLnN0cm09YSxjPWgubGFzdF9mbHVzaCxoLmxhc3RfZmx1c2g9YixoLnN0YXR1cz09PW5hKWlmKDI9PT1oLndyYXApYS5hZGxlcj0wLGkoaCwzMSksaShoLDEzOSksaShoLDgpLGguZ3poZWFkPyhpKGgsKGguZ3poZWFkLnRleHQ/MTowKSsoaC5nemhlYWQuaGNyYz8yOjApKyhoLmd6aGVhZC5leHRyYT80OjApKyhoLmd6aGVhZC5uYW1lPzg6MCkrKGguZ3poZWFkLmNvbW1lbnQ/MTY6MCkpLGkoaCwyNTUmaC5nemhlYWQudGltZSksaShoLGguZ3poZWFkLnRpbWU+PjgmMjU1KSxpKGgsaC5nemhlYWQudGltZT4+MTYmMjU1KSxpKGgsaC5nemhlYWQudGltZT4+MjQmMjU1KSxpKGgsOT09PWgubGV2ZWw/MjpoLnN0cmF0ZWd5Pj1WfHxoLmxldmVsPDI/NDowKSxpKGgsMjU1JmguZ3poZWFkLm9zKSxoLmd6aGVhZC5leHRyYSYmaC5nemhlYWQuZXh0cmEubGVuZ3RoJiYoaShoLDI1NSZoLmd6aGVhZC5leHRyYS5sZW5ndGgpLGkoaCxoLmd6aGVhZC5leHRyYS5sZW5ndGg+PjgmMjU1KSksaC5nemhlYWQuaGNyYyYmKGEuYWRsZXI9SChhLmFkbGVyLGgucGVuZGluZ19idWYsaC5wZW5kaW5nLDApKSxoLmd6aW5kZXg9MCxoLnN0YXR1cz1vYSk6KGkoaCwwKSxpKGgsMCksaShoLDApLGkoaCwwKSxpKGgsMCksaShoLDk9PT1oLmxldmVsPzI6aC5zdHJhdGVneT49Vnx8aC5sZXZlbDwyPzQ6MCksaShoLHlhKSxoLnN0YXR1cz1zYSk7ZWxzZXt2YXIgbT0kKyhoLndfYml0cy04PDw0KTw8OCxuPS0xO249aC5zdHJhdGVneT49Vnx8aC5sZXZlbDwyPzA6aC5sZXZlbDw2PzE6Nj09PWgubGV2ZWw/MjozLG18PW48PDYsMCE9PWguc3Ryc3RhcnQmJihtfD1tYSksbSs9MzEtbSUzMSxoLnN0YXR1cz1zYSxqKGgsbSksMCE9PWguc3Ryc3RhcnQmJihqKGgsYS5hZGxlcj4+PjE2KSxqKGgsNjU1MzUmYS5hZGxlcikpLGEuYWRsZXI9MX1pZihoLnN0YXR1cz09PW9hKWlmKGguZ3poZWFkLmV4dHJhKXtmb3Ioaz1oLnBlbmRpbmc7aC5nemluZGV4PCg2NTUzNSZoLmd6aGVhZC5leHRyYS5sZW5ndGgpJiYoaC5wZW5kaW5nIT09aC5wZW5kaW5nX2J1Zl9zaXplfHwoaC5nemhlYWQuaGNyYyYmaC5wZW5kaW5nPmsmJihhLmFkbGVyPUgoYS5hZGxlcixoLnBlbmRpbmdfYnVmLGgucGVuZGluZy1rLGspKSxnKGEpLGs9aC5wZW5kaW5nLGgucGVuZGluZyE9PWgucGVuZGluZ19idWZfc2l6ZSkpOylpKGgsMjU1JmguZ3poZWFkLmV4dHJhW2guZ3ppbmRleF0pLGguZ3ppbmRleCsrO2guZ3poZWFkLmhjcmMmJmgucGVuZGluZz5rJiYoYS5hZGxlcj1IKGEuYWRsZXIsaC5wZW5kaW5nX2J1ZixoLnBlbmRpbmctayxrKSksaC5nemluZGV4PT09aC5nemhlYWQuZXh0cmEubGVuZ3RoJiYoaC5nemluZGV4PTAsaC5zdGF0dXM9cGEpfWVsc2UgaC5zdGF0dXM9cGE7aWYoaC5zdGF0dXM9PT1wYSlpZihoLmd6aGVhZC5uYW1lKXtrPWgucGVuZGluZztkb3tpZihoLnBlbmRpbmc9PT1oLnBlbmRpbmdfYnVmX3NpemUmJihoLmd6aGVhZC5oY3JjJiZoLnBlbmRpbmc+ayYmKGEuYWRsZXI9SChhLmFkbGVyLGgucGVuZGluZ19idWYsaC5wZW5kaW5nLWssaykpLGcoYSksaz1oLnBlbmRpbmcsaC5wZW5kaW5nPT09aC5wZW5kaW5nX2J1Zl9zaXplKSl7bD0xO2JyZWFrfWw9aC5nemluZGV4PGguZ3poZWFkLm5hbWUubGVuZ3RoPzI1NSZoLmd6aGVhZC5uYW1lLmNoYXJDb2RlQXQoaC5nemluZGV4KyspOjAsaShoLGwpfXdoaWxlKDAhPT1sKTtoLmd6aGVhZC5oY3JjJiZoLnBlbmRpbmc+ayYmKGEuYWRsZXI9SChhLmFkbGVyLGgucGVuZGluZ19idWYsaC5wZW5kaW5nLWssaykpLDA9PT1sJiYoaC5nemluZGV4PTAsaC5zdGF0dXM9cWEpfWVsc2UgaC5zdGF0dXM9cWE7aWYoaC5zdGF0dXM9PT1xYSlpZihoLmd6aGVhZC5jb21tZW50KXtrPWgucGVuZGluZztkb3tpZihoLnBlbmRpbmc9PT1oLnBlbmRpbmdfYnVmX3NpemUmJihoLmd6aGVhZC5oY3JjJiZoLnBlbmRpbmc+ayYmKGEuYWRsZXI9SChhLmFkbGVyLGgucGVuZGluZ19idWYsaC5wZW5kaW5nLWssaykpLGcoYSksaz1oLnBlbmRpbmcsaC5wZW5kaW5nPT09aC5wZW5kaW5nX2J1Zl9zaXplKSl7bD0xO2JyZWFrfWw9aC5nemluZGV4PGguZ3poZWFkLmNvbW1lbnQubGVuZ3RoPzI1NSZoLmd6aGVhZC5jb21tZW50LmNoYXJDb2RlQXQoaC5nemluZGV4KyspOjAsaShoLGwpfXdoaWxlKDAhPT1sKTtoLmd6aGVhZC5oY3JjJiZoLnBlbmRpbmc+ayYmKGEuYWRsZXI9SChhLmFkbGVyLGgucGVuZGluZ19idWYsaC5wZW5kaW5nLWssaykpLDA9PT1sJiYoaC5zdGF0dXM9cmEpfWVsc2UgaC5zdGF0dXM9cmE7aWYoaC5zdGF0dXM9PT1yYSYmKGguZ3poZWFkLmhjcmM/KGgucGVuZGluZysyPmgucGVuZGluZ19idWZfc2l6ZSYmZyhhKSxoLnBlbmRpbmcrMjw9aC5wZW5kaW5nX2J1Zl9zaXplJiYoaShoLDI1NSZhLmFkbGVyKSxpKGgsYS5hZGxlcj4+OCYyNTUpLGEuYWRsZXI9MCxoLnN0YXR1cz1zYSkpOmguc3RhdHVzPXNhKSwwIT09aC5wZW5kaW5nKXtpZihnKGEpLDA9PT1hLmF2YWlsX291dClyZXR1cm4gaC5sYXN0X2ZsdXNoPS0xLE99ZWxzZSBpZigwPT09YS5hdmFpbF9pbiYmZShiKTw9ZShjKSYmYiE9PU0pcmV0dXJuIGQoYSxTKTtpZihoLnN0YXR1cz09PXRhJiYwIT09YS5hdmFpbF9pbilyZXR1cm4gZChhLFMpO2lmKDAhPT1hLmF2YWlsX2lufHwwIT09aC5sb29rYWhlYWR8fGIhPT1KJiZoLnN0YXR1cyE9PXRhKXt2YXIgbz1oLnN0cmF0ZWd5PT09Vj9yKGgsYik6aC5zdHJhdGVneT09PVc/cShoLGIpOkRbaC5sZXZlbF0uZnVuYyhoLGIpO2lmKG8hPT13YSYmbyE9PXhhfHwoaC5zdGF0dXM9dGEpLG89PT11YXx8bz09PXdhKXJldHVybiAwPT09YS5hdmFpbF9vdXQmJihoLmxhc3RfZmx1c2g9LTEpLE87aWYobz09PXZhJiYoYj09PUs/Ri5fdHJfYWxpZ24oaCk6YiE9PU4mJihGLl90cl9zdG9yZWRfYmxvY2soaCwwLDAsITEpLGI9PT1MJiYoZihoLmhlYWQpLDA9PT1oLmxvb2thaGVhZCYmKGguc3Ryc3RhcnQ9MCxoLmJsb2NrX3N0YXJ0PTAsaC5pbnNlcnQ9MCkpKSxnKGEpLDA9PT1hLmF2YWlsX291dCkpcmV0dXJuIGgubGFzdF9mbHVzaD0tMSxPfXJldHVybiBiIT09TT9POmgud3JhcDw9MD9QOigyPT09aC53cmFwPyhpKGgsMjU1JmEuYWRsZXIpLGkoaCxhLmFkbGVyPj44JjI1NSksaShoLGEuYWRsZXI+PjE2JjI1NSksaShoLGEuYWRsZXI+PjI0JjI1NSksaShoLDI1NSZhLnRvdGFsX2luKSxpKGgsYS50b3RhbF9pbj4+OCYyNTUpLGkoaCxhLnRvdGFsX2luPj4xNiYyNTUpLGkoaCxhLnRvdGFsX2luPj4yNCYyNTUpKTooaihoLGEuYWRsZXI+Pj4xNiksaihoLDY1NTM1JmEuYWRsZXIpKSxnKGEpLGgud3JhcD4wJiYoaC53cmFwPS1oLndyYXApLDAhPT1oLnBlbmRpbmc/TzpQKX1mdW5jdGlvbiBCKGEpe3ZhciBiO3JldHVybiBhJiZhLnN0YXRlPyhiPWEuc3RhdGUuc3RhdHVzLGIhPT1uYSYmYiE9PW9hJiZiIT09cGEmJmIhPT1xYSYmYiE9PXJhJiZiIT09c2EmJmIhPT10YT9kKGEsUSk6KGEuc3RhdGU9bnVsbCxiPT09c2E/ZChhLFIpOk8pKTpRfWZ1bmN0aW9uIEMoYSxiKXt2YXIgYyxkLGUsZyxoLGksaixrLGw9Yi5sZW5ndGg7aWYoIWF8fCFhLnN0YXRlKXJldHVybiBRO2lmKGM9YS5zdGF0ZSxnPWMud3JhcCwyPT09Z3x8MT09PWcmJmMuc3RhdHVzIT09bmF8fGMubG9va2FoZWFkKXJldHVybiBRO2ZvcigxPT09ZyYmKGEuYWRsZXI9RyhhLmFkbGVyLGIsbCwwKSksYy53cmFwPTAsbD49Yy53X3NpemUmJigwPT09ZyYmKGYoYy5oZWFkKSxjLnN0cnN0YXJ0PTAsYy5ibG9ja19zdGFydD0wLGMuaW5zZXJ0PTApLGs9bmV3IEUuQnVmOChjLndfc2l6ZSksRS5hcnJheVNldChrLGIsbC1jLndfc2l6ZSxjLndfc2l6ZSwwKSxiPWssbD1jLndfc2l6ZSksaD1hLmF2YWlsX2luLGk9YS5uZXh0X2luLGo9YS5pbnB1dCxhLmF2YWlsX2luPWwsYS5uZXh0X2luPTAsYS5pbnB1dD1iLG0oYyk7Yy5sb29rYWhlYWQ+PWphOyl7ZD1jLnN0cnN0YXJ0LGU9Yy5sb29rYWhlYWQtKGphLTEpO2RvIGMuaW5zX2g9KGMuaW5zX2g8PGMuaGFzaF9zaGlmdF5jLndpbmRvd1tkK2phLTFdKSZjLmhhc2hfbWFzayxjLnByZXZbZCZjLndfbWFza109Yy5oZWFkW2MuaW5zX2hdLGMuaGVhZFtjLmluc19oXT1kLGQrKzt3aGlsZSgtLWUpO2Muc3Ryc3RhcnQ9ZCxjLmxvb2thaGVhZD1qYS0xLG0oYyl9cmV0dXJuIGMuc3Ryc3RhcnQrPWMubG9va2FoZWFkLGMuYmxvY2tfc3RhcnQ9Yy5zdHJzdGFydCxjLmluc2VydD1jLmxvb2thaGVhZCxjLmxvb2thaGVhZD0wLGMubWF0Y2hfbGVuZ3RoPWMucHJldl9sZW5ndGg9amEtMSxjLm1hdGNoX2F2YWlsYWJsZT0wLGEubmV4dF9pbj1pLGEuaW5wdXQ9aixhLmF2YWlsX2luPWgsYy53cmFwPWcsT312YXIgRCxFPWEoIi4uL3V0aWxzL2NvbW1vbiIpLEY9YSgiLi90cmVlcyIpLEc9YSgiLi9hZGxlcjMyIiksSD1hKCIuL2NyYzMyIiksST1hKCIuL21lc3NhZ2VzIiksSj0wLEs9MSxMPTMsTT00LE49NSxPPTAsUD0xLFE9LTIsUj0tMyxTPS01LFQ9LTEsVT0xLFY9MixXPTMsWD00LFk9MCxaPTIsJD04LF89OSxhYT0xNSxiYT04LGNhPTI5LGRhPTI1NixlYT1kYSsxK2NhLGZhPTMwLGdhPTE5LGhhPTIqZWErMSxpYT0xNSxqYT0zLGthPTI1OCxsYT1rYStqYSsxLG1hPTMyLG5hPTQyLG9hPTY5LHBhPTczLHFhPTkxLHJhPTEwMyxzYT0xMTMsdGE9NjY2LHVhPTEsdmE9Mix3YT0zLHhhPTQseWE9MztEPVtuZXcgcygwLDAsMCwwLG4pLG5ldyBzKDQsNCw4LDQsbyksbmV3IHMoNCw1LDE2LDgsbyksbmV3IHMoNCw2LDMyLDMyLG8pLG5ldyBzKDQsNCwxNiwxNixwKSxuZXcgcyg4LDE2LDMyLDMyLHApLG5ldyBzKDgsMTYsMTI4LDEyOCxwKSxuZXcgcyg4LDMyLDEyOCwyNTYscCksbmV3IHMoMzIsMTI4LDI1OCwxMDI0LHApLG5ldyBzKDMyLDI1OCwyNTgsNDA5NixwKV0sYy5kZWZsYXRlSW5pdD16LGMuZGVmbGF0ZUluaXQyPXksYy5kZWZsYXRlUmVzZXQ9dyxjLmRlZmxhdGVSZXNldEtlZXA9dixjLmRlZmxhdGVTZXRIZWFkZXI9eCxjLmRlZmxhdGU9QSxjLmRlZmxhdGVFbmQ9QixjLmRlZmxhdGVTZXREaWN0aW9uYXJ5PUMsYy5kZWZsYXRlSW5mbz0icGFrbyBkZWZsYXRlIChmcm9tIE5vZGVjYSBwcm9qZWN0KSJ9LHsiLi4vdXRpbHMvY29tbW9uIjo2MiwiLi9hZGxlcjMyIjo2NCwiLi9jcmMzMiI6NjYsIi4vbWVzc2FnZXMiOjcyLCIuL3RyZWVzIjo3M31dLDY4OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoKXt0aGlzLnRleHQ9MCx0aGlzLnRpbWU9MCx0aGlzLnhmbGFncz0wLHRoaXMub3M9MCx0aGlzLmV4dHJhPW51bGwsdGhpcy5leHRyYV9sZW49MCx0aGlzLm5hbWU9IiIsdGhpcy5jb21tZW50PSIiLHRoaXMuaGNyYz0wLHRoaXMuZG9uZT0hMX1iLmV4cG9ydHM9ZH0se31dLDY5OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO3ZhciBkPTMwLGU9MTI7Yi5leHBvcnRzPWZ1bmN0aW9uKGEsYil7dmFyIGMsZixnLGgsaSxqLGssbCxtLG4sbyxwLHEscixzLHQsdSx2LHcseCx5LHosQSxCLEM7Yz1hLnN0YXRlLGY9YS5uZXh0X2luLEI9YS5pbnB1dCxnPWYrKGEuYXZhaWxfaW4tNSksaD1hLm5leHRfb3V0LEM9YS5vdXRwdXQsaT1oLShiLWEuYXZhaWxfb3V0KSxqPWgrKGEuYXZhaWxfb3V0LTI1Nyksaz1jLmRtYXgsbD1jLndzaXplLG09Yy53aGF2ZSxuPWMud25leHQsbz1jLndpbmRvdyxwPWMuaG9sZCxxPWMuYml0cyxyPWMubGVuY29kZSxzPWMuZGlzdGNvZGUsdD0oMTw8Yy5sZW5iaXRzKS0xLHU9KDE8PGMuZGlzdGJpdHMpLTE7YTpkb3txPDE1JiYocCs9QltmKytdPDxxLHErPTgscCs9QltmKytdPDxxLHErPTgpLHY9cltwJnRdO2I6Zm9yKDs7KXtpZih3PXY+Pj4yNCxwPj4+PXcscS09dyx3PXY+Pj4xNiYyNTUsMD09PXcpQ1toKytdPTY1NTM1JnY7ZWxzZXtpZighKDE2JncpKXtpZigwPT09KDY0JncpKXt2PXJbKDY1NTM1JnYpKyhwJigxPDx3KS0xKV07Y29udGludWUgYn1pZigzMiZ3KXtjLm1vZGU9ZTticmVhayBhfWEubXNnPSJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RoIGNvZGUiLGMubW9kZT1kO2JyZWFrIGF9eD02NTUzNSZ2LHcmPTE1LHcmJihxPHcmJihwKz1CW2YrK108PHEscSs9OCkseCs9cCYoMTw8dyktMSxwPj4+PXcscS09dykscTwxNSYmKHArPUJbZisrXTw8cSxxKz04LHArPUJbZisrXTw8cSxxKz04KSx2PXNbcCZ1XTtjOmZvcig7Oyl7aWYodz12Pj4+MjQscD4+Pj13LHEtPXcsdz12Pj4+MTYmMjU1LCEoMTYmdykpe2lmKDA9PT0oNjQmdykpe3Y9c1soNjU1MzUmdikrKHAmKDE8PHcpLTEpXTtjb250aW51ZSBjfWEubXNnPSJpbnZhbGlkIGRpc3RhbmNlIGNvZGUiLGMubW9kZT1kO2JyZWFrIGF9aWYoeT02NTUzNSZ2LHcmPTE1LHE8dyYmKHArPUJbZisrXTw8cSxxKz04LHE8dyYmKHArPUJbZisrXTw8cSxxKz04KSkseSs9cCYoMTw8dyktMSx5Pmspe2EubXNnPSJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFjayIsYy5tb2RlPWQ7YnJlYWsgYX1pZihwPj4+PXcscS09dyx3PWgtaSx5Pncpe2lmKHc9eS13LHc+bSYmYy5zYW5lKXthLm1zZz0iaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2siLGMubW9kZT1kO2JyZWFrIGF9aWYoej0wLEE9bywwPT09bil7aWYoeis9bC13LHc8eCl7eC09dztkbyBDW2grK109b1t6KytdO3doaWxlKC0tdyk7ej1oLXksQT1DfX1lbHNlIGlmKG48dyl7aWYoeis9bCtuLXcsdy09bix3PHgpe3gtPXc7ZG8gQ1toKytdPW9beisrXTt3aGlsZSgtLXcpO2lmKHo9MCxuPHgpe3c9bix4LT13O2RvIENbaCsrXT1vW3orK107d2hpbGUoLS13KTt6PWgteSxBPUN9fX1lbHNlIGlmKHorPW4tdyx3PHgpe3gtPXc7ZG8gQ1toKytdPW9beisrXTt3aGlsZSgtLXcpO3o9aC15LEE9Q31mb3IoO3g+MjspQ1toKytdPUFbeisrXSxDW2grK109QVt6KytdLENbaCsrXT1BW3orK10seC09Mzt4JiYoQ1toKytdPUFbeisrXSx4PjEmJihDW2grK109QVt6KytdKSl9ZWxzZXt6PWgteTtkbyBDW2grK109Q1t6KytdLENbaCsrXT1DW3orK10sQ1toKytdPUNbeisrXSx4LT0zO3doaWxlKHg+Mik7eCYmKENbaCsrXT1DW3orK10seD4xJiYoQ1toKytdPUNbeisrXSkpfWJyZWFrfX1icmVha319d2hpbGUoZjxnJiZoPGopO3g9cT4+MyxmLT14LHEtPXg8PDMscCY9KDE8PHEpLTEsYS5uZXh0X2luPWYsYS5uZXh0X291dD1oLGEuYXZhaWxfaW49ZjxnPzUrKGctZik6NS0oZi1nKSxhLmF2YWlsX291dD1oPGo/MjU3KyhqLWgpOjI1Ny0oaC1qKSxjLmhvbGQ9cCxjLmJpdHM9cX19LHt9XSw3MDpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBkKGEpe3JldHVybihhPj4+MjQmMjU1KSsoYT4+PjgmNjUyODApKygoNjUyODAmYSk8PDgpKygoMjU1JmEpPDwyNCl9ZnVuY3Rpb24gZSgpe3RoaXMubW9kZT0wLHRoaXMubGFzdD0hMSx0aGlzLndyYXA9MCx0aGlzLmhhdmVkaWN0PSExLHRoaXMuZmxhZ3M9MCx0aGlzLmRtYXg9MCx0aGlzLmNoZWNrPTAsdGhpcy50b3RhbD0wLHRoaXMuaGVhZD1udWxsLHRoaXMud2JpdHM9MCx0aGlzLndzaXplPTAsdGhpcy53aGF2ZT0wLHRoaXMud25leHQ9MCx0aGlzLndpbmRvdz1udWxsLHRoaXMuaG9sZD0wLHRoaXMuYml0cz0wLHRoaXMubGVuZ3RoPTAsdGhpcy5vZmZzZXQ9MCx0aGlzLmV4dHJhPTAsdGhpcy5sZW5jb2RlPW51bGwsdGhpcy5kaXN0Y29kZT1udWxsLHRoaXMubGVuYml0cz0wLHRoaXMuZGlzdGJpdHM9MCx0aGlzLm5jb2RlPTAsdGhpcy5ubGVuPTAsdGhpcy5uZGlzdD0wLHRoaXMuaGF2ZT0wLHRoaXMubmV4dD1udWxsLHRoaXMubGVucz1uZXcgcy5CdWYxNigzMjApLHRoaXMud29yaz1uZXcgcy5CdWYxNigyODgpLHRoaXMubGVuZHluPW51bGwsdGhpcy5kaXN0ZHluPW51bGwsdGhpcy5zYW5lPTAsdGhpcy5iYWNrPTAsdGhpcy53YXM9MH1mdW5jdGlvbiBmKGEpe3ZhciBiO3JldHVybiBhJiZhLnN0YXRlPyhiPWEuc3RhdGUsYS50b3RhbF9pbj1hLnRvdGFsX291dD1iLnRvdGFsPTAsYS5tc2c9IiIsYi53cmFwJiYoYS5hZGxlcj0xJmIud3JhcCksYi5tb2RlPUwsYi5sYXN0PTAsYi5oYXZlZGljdD0wLGIuZG1heD0zMjc2OCxiLmhlYWQ9bnVsbCxiLmhvbGQ9MCxiLmJpdHM9MCxiLmxlbmNvZGU9Yi5sZW5keW49bmV3IHMuQnVmMzIocGEpLGIuZGlzdGNvZGU9Yi5kaXN0ZHluPW5ldyBzLkJ1ZjMyKHFhKSxiLnNhbmU9MSxiLmJhY2s9LTEsRCk6R31mdW5jdGlvbiBnKGEpe3ZhciBiO3JldHVybiBhJiZhLnN0YXRlPyhiPWEuc3RhdGUsYi53c2l6ZT0wLGIud2hhdmU9MCxiLnduZXh0PTAsZihhKSk6R31mdW5jdGlvbiBoKGEsYil7dmFyIGMsZDtyZXR1cm4gYSYmYS5zdGF0ZT8oZD1hLnN0YXRlLGI8MD8oYz0wLGI9LWIpOihjPShiPj40KSsxLGI8NDgmJihiJj0xNSkpLGImJihiPDh8fGI+MTUpP0c6KG51bGwhPT1kLndpbmRvdyYmZC53Yml0cyE9PWImJihkLndpbmRvdz1udWxsKSxkLndyYXA9YyxkLndiaXRzPWIsZyhhKSkpOkd9ZnVuY3Rpb24gaShhLGIpe3ZhciBjLGQ7cmV0dXJuIGE/KGQ9bmV3IGUsYS5zdGF0ZT1kLGQud2luZG93PW51bGwsYz1oKGEsYiksYyE9PUQmJihhLnN0YXRlPW51bGwpLGMpOkd9ZnVuY3Rpb24gaihhKXtyZXR1cm4gaShhLHNhKX1mdW5jdGlvbiBrKGEpe2lmKHRhKXt2YXIgYjtmb3IocT1uZXcgcy5CdWYzMig1MTIpLHI9bmV3IHMuQnVmMzIoMzIpLGI9MDtiPDE0NDspYS5sZW5zW2IrK109ODtmb3IoO2I8MjU2OylhLmxlbnNbYisrXT05O2Zvcig7YjwyODA7KWEubGVuc1tiKytdPTc7Zm9yKDtiPDI4ODspYS5sZW5zW2IrK109ODtmb3Iodyh5LGEubGVucywwLDI4OCxxLDAsYS53b3JrLHtiaXRzOjl9KSxiPTA7YjwzMjspYS5sZW5zW2IrK109NTt3KHosYS5sZW5zLDAsMzIsciwwLGEud29yayx7Yml0czo1fSksdGE9ITF9YS5sZW5jb2RlPXEsYS5sZW5iaXRzPTksYS5kaXN0Y29kZT1yLGEuZGlzdGJpdHM9NX1mdW5jdGlvbiBsKGEsYixjLGQpe3ZhciBlLGY9YS5zdGF0ZTtyZXR1cm4gbnVsbD09PWYud2luZG93JiYoZi53c2l6ZT0xPDxmLndiaXRzLGYud25leHQ9MCxmLndoYXZlPTAsZi53aW5kb3c9bmV3IHMuQnVmOChmLndzaXplKSksZD49Zi53c2l6ZT8ocy5hcnJheVNldChmLndpbmRvdyxiLGMtZi53c2l6ZSxmLndzaXplLDApLGYud25leHQ9MCxmLndoYXZlPWYud3NpemUpOihlPWYud3NpemUtZi53bmV4dCxlPmQmJihlPWQpLHMuYXJyYXlTZXQoZi53aW5kb3csYixjLWQsZSxmLnduZXh0KSxkLT1lLGQ/KHMuYXJyYXlTZXQoZi53aW5kb3csYixjLWQsZCwwKSxmLnduZXh0PWQsZi53aGF2ZT1mLndzaXplKTooZi53bmV4dCs9ZSxmLnduZXh0PT09Zi53c2l6ZSYmKGYud25leHQ9MCksZi53aGF2ZTxmLndzaXplJiYoZi53aGF2ZSs9ZSkpKSwwfWZ1bmN0aW9uIG0oYSxiKXt2YXIgYyxlLGYsZyxoLGksaixtLG4sbyxwLHEscixwYSxxYSxyYSxzYSx0YSx1YSx2YSx3YSx4YSx5YSx6YSxBYT0wLEJhPW5ldyBzLkJ1ZjgoNCksQ2E9WzE2LDE3LDE4LDAsOCw3LDksNiwxMCw1LDExLDQsMTIsMywxMywyLDE0LDEsMTVdO2lmKCFhfHwhYS5zdGF0ZXx8IWEub3V0cHV0fHwhYS5pbnB1dCYmMCE9PWEuYXZhaWxfaW4pcmV0dXJuIEc7Yz1hLnN0YXRlLGMubW9kZT09PVcmJihjLm1vZGU9WCksaD1hLm5leHRfb3V0LGY9YS5vdXRwdXQsaj1hLmF2YWlsX291dCxnPWEubmV4dF9pbixlPWEuaW5wdXQsaT1hLmF2YWlsX2luLG09Yy5ob2xkLG49Yy5iaXRzLG89aSxwPWoseGE9RDthOmZvcig7Oylzd2l0Y2goYy5tb2RlKXtjYXNlIEw6aWYoMD09PWMud3JhcCl7Yy5tb2RlPVg7YnJlYWt9Zm9yKDtuPDE2Oyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYoMiZjLndyYXAmJjM1NjE1PT09bSl7Yy5jaGVjaz0wLEJhWzBdPTI1NSZtLEJhWzFdPW0+Pj44JjI1NSxjLmNoZWNrPXUoYy5jaGVjayxCYSwyLDApLG09MCxuPTAsYy5tb2RlPU07YnJlYWt9aWYoYy5mbGFncz0wLGMuaGVhZCYmKGMuaGVhZC5kb25lPSExKSwhKDEmYy53cmFwKXx8KCgoMjU1Jm0pPDw4KSsobT4+OCkpJTMxKXthLm1zZz0iaW5jb3JyZWN0IGhlYWRlciBjaGVjayIsYy5tb2RlPW1hO2JyZWFrfWlmKCgxNSZtKSE9PUspe2EubXNnPSJ1bmtub3duIGNvbXByZXNzaW9uIG1ldGhvZCIsYy5tb2RlPW1hO2JyZWFrfWlmKG0+Pj49NCxuLT00LHdhPSgxNSZtKSs4LDA9PT1jLndiaXRzKWMud2JpdHM9d2E7ZWxzZSBpZih3YT5jLndiaXRzKXthLm1zZz0iaW52YWxpZCB3aW5kb3cgc2l6ZSIsYy5tb2RlPW1hO2JyZWFrfWMuZG1heD0xPDx3YSxhLmFkbGVyPWMuY2hlY2s9MSxjLm1vZGU9NTEyJm0/VTpXLG09MCxuPTA7YnJlYWs7Y2FzZSBNOmZvcig7bjwxNjspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fWlmKGMuZmxhZ3M9bSwoMjU1JmMuZmxhZ3MpIT09Syl7YS5tc2c9InVua25vd24gY29tcHJlc3Npb24gbWV0aG9kIixjLm1vZGU9bWE7YnJlYWt9aWYoNTczNDQmYy5mbGFncyl7YS5tc2c9InVua25vd24gaGVhZGVyIGZsYWdzIHNldCIsYy5tb2RlPW1hO2JyZWFrfWMuaGVhZCYmKGMuaGVhZC50ZXh0PW0+PjgmMSksNTEyJmMuZmxhZ3MmJihCYVswXT0yNTUmbSxCYVsxXT1tPj4+OCYyNTUsYy5jaGVjaz11KGMuY2hlY2ssQmEsMiwwKSksbT0wLG49MCxjLm1vZGU9TjtjYXNlIE46Zm9yKDtuPDMyOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9Yy5oZWFkJiYoYy5oZWFkLnRpbWU9bSksNTEyJmMuZmxhZ3MmJihCYVswXT0yNTUmbSxCYVsxXT1tPj4+OCYyNTUsQmFbMl09bT4+PjE2JjI1NSxCYVszXT1tPj4+MjQmMjU1LGMuY2hlY2s9dShjLmNoZWNrLEJhLDQsMCkpLG09MCxuPTAsYy5tb2RlPU87Y2FzZSBPOmZvcig7bjwxNjspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fWMuaGVhZCYmKGMuaGVhZC54ZmxhZ3M9MjU1Jm0sYy5oZWFkLm9zPW0+PjgpLDUxMiZjLmZsYWdzJiYoQmFbMF09MjU1Jm0sQmFbMV09bT4+PjgmMjU1LGMuY2hlY2s9dShjLmNoZWNrLEJhLDIsMCkpLG09MCxuPTAsYy5tb2RlPVA7Y2FzZSBQOmlmKDEwMjQmYy5mbGFncyl7Zm9yKDtuPDE2Oyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9Yy5sZW5ndGg9bSxjLmhlYWQmJihjLmhlYWQuZXh0cmFfbGVuPW0pLDUxMiZjLmZsYWdzJiYoQmFbMF09MjU1Jm0sQmFbMV09bT4+PjgmMjU1LGMuY2hlY2s9dShjLmNoZWNrLEJhLDIsMCkpLG09MCxuPTB9ZWxzZSBjLmhlYWQmJihjLmhlYWQuZXh0cmE9bnVsbCk7Yy5tb2RlPVE7Y2FzZSBROmlmKDEwMjQmYy5mbGFncyYmKHE9Yy5sZW5ndGgscT5pJiYocT1pKSxxJiYoYy5oZWFkJiYod2E9Yy5oZWFkLmV4dHJhX2xlbi1jLmxlbmd0aCxjLmhlYWQuZXh0cmF8fChjLmhlYWQuZXh0cmE9bmV3IEFycmF5KGMuaGVhZC5leHRyYV9sZW4pKSxzLmFycmF5U2V0KGMuaGVhZC5leHRyYSxlLGcscSx3YSkpLDUxMiZjLmZsYWdzJiYoYy5jaGVjaz11KGMuY2hlY2ssZSxxLGcpKSxpLT1xLGcrPXEsYy5sZW5ndGgtPXEpLGMubGVuZ3RoKSlicmVhayBhO2MubGVuZ3RoPTAsYy5tb2RlPVI7Y2FzZSBSOmlmKDIwNDgmYy5mbGFncyl7aWYoMD09PWkpYnJlYWsgYTtxPTA7ZG8gd2E9ZVtnK3ErK10sYy5oZWFkJiZ3YSYmYy5sZW5ndGg8NjU1MzYmJihjLmhlYWQubmFtZSs9U3RyaW5nLmZyb21DaGFyQ29kZSh3YSkpO3doaWxlKHdhJiZxPGkpO2lmKDUxMiZjLmZsYWdzJiYoYy5jaGVjaz11KGMuY2hlY2ssZSxxLGcpKSxpLT1xLGcrPXEsd2EpYnJlYWsgYX1lbHNlIGMuaGVhZCYmKGMuaGVhZC5uYW1lPW51bGwpO2MubGVuZ3RoPTAsYy5tb2RlPVM7Y2FzZSBTOmlmKDQwOTYmYy5mbGFncyl7aWYoMD09PWkpYnJlYWsgYTtxPTA7ZG8gd2E9ZVtnK3ErK10sYy5oZWFkJiZ3YSYmYy5sZW5ndGg8NjU1MzYmJihjLmhlYWQuY29tbWVudCs9U3RyaW5nLmZyb21DaGFyQ29kZSh3YSkpO3doaWxlKHdhJiZxPGkpO2lmKDUxMiZjLmZsYWdzJiYoYy5jaGVjaz11KGMuY2hlY2ssZSxxLGcpKSxpLT1xLGcrPXEsd2EpYnJlYWsgYX1lbHNlIGMuaGVhZCYmKGMuaGVhZC5jb21tZW50PW51bGwpO2MubW9kZT1UO2Nhc2UgVDppZig1MTImYy5mbGFncyl7Zm9yKDtuPDE2Oyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYobSE9PSg2NTUzNSZjLmNoZWNrKSl7YS5tc2c9ImhlYWRlciBjcmMgbWlzbWF0Y2giLGMubW9kZT1tYTticmVha31tPTAsbj0wfWMuaGVhZCYmKGMuaGVhZC5oY3JjPWMuZmxhZ3M+PjkmMSxjLmhlYWQuZG9uZT0hMCksYS5hZGxlcj1jLmNoZWNrPTAsYy5tb2RlPVc7YnJlYWs7Y2FzZSBVOmZvcig7bjwzMjspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fWEuYWRsZXI9Yy5jaGVjaz1kKG0pLG09MCxuPTAsYy5tb2RlPVY7Y2FzZSBWOmlmKDA9PT1jLmhhdmVkaWN0KXJldHVybiBhLm5leHRfb3V0PWgsYS5hdmFpbF9vdXQ9aixhLm5leHRfaW49ZyxhLmF2YWlsX2luPWksYy5ob2xkPW0sYy5iaXRzPW4sRjthLmFkbGVyPWMuY2hlY2s9MSxjLm1vZGU9VztjYXNlIFc6aWYoYj09PUJ8fGI9PT1DKWJyZWFrIGE7Y2FzZSBYOmlmKGMubGFzdCl7bT4+Pj03Jm4sbi09NyZuLGMubW9kZT1qYTticmVha31mb3IoO248Mzspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fXN3aXRjaChjLmxhc3Q9MSZtLG0+Pj49MSxuLT0xLDMmbSl7Y2FzZSAwOmMubW9kZT1ZO2JyZWFrO2Nhc2UgMTppZihrKGMpLGMubW9kZT1jYSxiPT09Qyl7bT4+Pj0yLG4tPTI7YnJlYWsgYX1icmVhaztjYXNlIDI6Yy5tb2RlPV87YnJlYWs7Y2FzZSAzOmEubXNnPSJpbnZhbGlkIGJsb2NrIHR5cGUiLGMubW9kZT1tYX1tPj4+PTIsbi09MjticmVhaztjYXNlIFk6Zm9yKG0+Pj49NyZuLG4tPTcmbjtuPDMyOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYoKDY1NTM1Jm0pIT09KG0+Pj4xNl42NTUzNSkpe2EubXNnPSJpbnZhbGlkIHN0b3JlZCBibG9jayBsZW5ndGhzIixjLm1vZGU9bWE7YnJlYWt9aWYoYy5sZW5ndGg9NjU1MzUmbSxtPTAsbj0wLGMubW9kZT1aLGI9PT1DKWJyZWFrIGE7Y2FzZSBaOmMubW9kZT0kO2Nhc2UgJDppZihxPWMubGVuZ3RoKXtpZihxPmkmJihxPWkpLHE+aiYmKHE9aiksMD09PXEpYnJlYWsgYTtzLmFycmF5U2V0KGYsZSxnLHEsaCksaS09cSxnKz1xLGotPXEsaCs9cSxjLmxlbmd0aC09cTticmVha31jLm1vZGU9VzticmVhaztjYXNlIF86Zm9yKDtuPDE0Oyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYoYy5ubGVuPSgzMSZtKSsyNTcsbT4+Pj01LG4tPTUsYy5uZGlzdD0oMzEmbSkrMSxtPj4+PTUsbi09NSxjLm5jb2RlPSgxNSZtKSs0LG0+Pj49NCxuLT00LGMubmxlbj4yODZ8fGMubmRpc3Q+MzApe2EubXNnPSJ0b28gbWFueSBsZW5ndGggb3IgZGlzdGFuY2Ugc3ltYm9scyIsYy5tb2RlPW1hO2JyZWFrfWMuaGF2ZT0wLGMubW9kZT1hYTtjYXNlIGFhOmZvcig7Yy5oYXZlPGMubmNvZGU7KXtmb3IoO248Mzspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fWMubGVuc1tDYVtjLmhhdmUrK11dPTcmbSxtPj4+PTMsbi09M31mb3IoO2MuaGF2ZTwxOTspYy5sZW5zW0NhW2MuaGF2ZSsrXV09MDtpZihjLmxlbmNvZGU9Yy5sZW5keW4sYy5sZW5iaXRzPTcseWE9e2JpdHM6Yy5sZW5iaXRzfSx4YT13KHgsYy5sZW5zLDAsMTksYy5sZW5jb2RlLDAsYy53b3JrLHlhKSxjLmxlbmJpdHM9eWEuYml0cyx4YSl7YS5tc2c9ImludmFsaWQgY29kZSBsZW5ndGhzIHNldCIsYy5tb2RlPW1hO2JyZWFrfWMuaGF2ZT0wLGMubW9kZT1iYTtjYXNlIGJhOmZvcig7Yy5oYXZlPGMubmxlbitjLm5kaXN0Oyl7Zm9yKDtBYT1jLmxlbmNvZGVbbSYoMTw8Yy5sZW5iaXRzKS0xXSxxYT1BYT4+PjI0LHJhPUFhPj4+MTYmMjU1LHNhPTY1NTM1JkFhLCEocWE8PW4pOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYoc2E8MTYpbT4+Pj1xYSxuLT1xYSxjLmxlbnNbYy5oYXZlKytdPXNhO2Vsc2V7aWYoMTY9PT1zYSl7Zm9yKHphPXFhKzI7bjx6YTspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fWlmKG0+Pj49cWEsbi09cWEsMD09PWMuaGF2ZSl7YS5tc2c9ImludmFsaWQgYml0IGxlbmd0aCByZXBlYXQiLGMubW9kZT1tYTticmVha313YT1jLmxlbnNbYy5oYXZlLTFdLHE9MysoMyZtKSxtPj4+PTIsbi09Mn1lbHNlIGlmKDE3PT09c2Epe2Zvcih6YT1xYSszO248emE7KXtpZigwPT09aSlicmVhayBhO2ktLSxtKz1lW2crK108PG4sbis9OH1tPj4+PXFhLG4tPXFhLHdhPTAscT0zKyg3Jm0pLG0+Pj49MyxuLT0zfWVsc2V7Zm9yKHphPXFhKzc7bjx6YTspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fW0+Pj49cWEsbi09cWEsd2E9MCxxPTExKygxMjcmbSksbT4+Pj03LG4tPTd9aWYoYy5oYXZlK3E+Yy5ubGVuK2MubmRpc3Qpe2EubXNnPSJpbnZhbGlkIGJpdCBsZW5ndGggcmVwZWF0IixjLm1vZGU9bWE7YnJlYWt9Zm9yKDtxLS07KWMubGVuc1tjLmhhdmUrK109d2F9fWlmKGMubW9kZT09PW1hKWJyZWFrO2lmKDA9PT1jLmxlbnNbMjU2XSl7YS5tc2c9ImludmFsaWQgY29kZSAtLSBtaXNzaW5nIGVuZC1vZi1ibG9jayIsYy5tb2RlPW1hO2JyZWFrfWlmKGMubGVuYml0cz05LHlhPXtiaXRzOmMubGVuYml0c30seGE9dyh5LGMubGVucywwLGMubmxlbixjLmxlbmNvZGUsMCxjLndvcmsseWEpLGMubGVuYml0cz15YS5iaXRzLHhhKXthLm1zZz0iaW52YWxpZCBsaXRlcmFsL2xlbmd0aHMgc2V0IixjLm1vZGU9bWE7YnJlYWt9aWYoYy5kaXN0Yml0cz02LGMuZGlzdGNvZGU9Yy5kaXN0ZHluLHlhPXtiaXRzOmMuZGlzdGJpdHN9LHhhPXcoeixjLmxlbnMsYy5ubGVuLGMubmRpc3QsYy5kaXN0Y29kZSwwLGMud29yayx5YSksYy5kaXN0Yml0cz15YS5iaXRzLHhhKXthLm1zZz0iaW52YWxpZCBkaXN0YW5jZXMgc2V0IixjLm1vZGU9bWE7YnJlYWt9aWYoYy5tb2RlPWNhLGI9PT1DKWJyZWFrIGE7Y2FzZSBjYTpjLm1vZGU9ZGE7Y2FzZSBkYTppZihpPj02JiZqPj0yNTgpe2EubmV4dF9vdXQ9aCxhLmF2YWlsX291dD1qLGEubmV4dF9pbj1nLGEuYXZhaWxfaW49aSxjLmhvbGQ9bSxjLmJpdHM9bix2KGEscCksaD1hLm5leHRfb3V0LGY9YS5vdXRwdXQsaj1hLmF2YWlsX291dCxnPWEubmV4dF9pbixlPWEuaW5wdXQsaT1hLmF2YWlsX2luLG09Yy5ob2xkLG49Yy5iaXRzLGMubW9kZT09PVcmJihjLmJhY2s9LTEpO2JyZWFrfWZvcihjLmJhY2s9MDtBYT1jLmxlbmNvZGVbbSYoMTw8Yy5sZW5iaXRzKS0xXSxxYT1BYT4+PjI0LHJhPUFhPj4+MTYmMjU1LHNhPTY1NTM1JkFhLCEocWE8PW4pOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYocmEmJjA9PT0oMjQwJnJhKSl7Zm9yKHRhPXFhLHVhPXJhLHZhPXNhO0FhPWMubGVuY29kZVt2YSsoKG0mKDE8PHRhK3VhKS0xKT4+dGEpXSxxYT1BYT4+PjI0LHJhPUFhPj4+MTYmMjU1LHNhPTY1NTM1JkFhLCEodGErcWE8PW4pOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9bT4+Pj10YSxuLT10YSxjLmJhY2srPXRhfWlmKG0+Pj49cWEsbi09cWEsYy5iYWNrKz1xYSxjLmxlbmd0aD1zYSwwPT09cmEpe2MubW9kZT1pYTticmVha31pZigzMiZyYSl7Yy5iYWNrPS0xLGMubW9kZT1XO2JyZWFrfWlmKDY0JnJhKXthLm1zZz0iaW52YWxpZCBsaXRlcmFsL2xlbmd0aCBjb2RlIixjLm1vZGU9bWE7YnJlYWt9Yy5leHRyYT0xNSZyYSxjLm1vZGU9ZWE7Y2FzZSBlYTppZihjLmV4dHJhKXtmb3IoemE9Yy5leHRyYTtuPHphOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9Yy5sZW5ndGgrPW0mKDE8PGMuZXh0cmEpLTEsbT4+Pj1jLmV4dHJhLG4tPWMuZXh0cmEsYy5iYWNrKz1jLmV4dHJhfWMud2FzPWMubGVuZ3RoLGMubW9kZT1mYTtjYXNlIGZhOmZvcig7QWE9Yy5kaXN0Y29kZVttJigxPDxjLmRpc3RiaXRzKS0xXSxxYT1BYT4+PjI0LHJhPUFhPj4+MTYmMjU1LHNhPTY1NTM1JkFhLCEocWE8PW4pOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYoMD09PSgyNDAmcmEpKXtmb3IodGE9cWEsdWE9cmEsdmE9c2E7QWE9Yy5kaXN0Y29kZVt2YSsoKG0mKDE8PHRhK3VhKS0xKT4+dGEpXSxxYT1BYT4+PjI0LHJhPUFhPj4+MTYmMjU1LHNhPTY1NTM1JkFhLCEodGErcWE8PW4pOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9bT4+Pj10YSxuLT10YSxjLmJhY2srPXRhfWlmKG0+Pj49cWEsbi09cWEsYy5iYWNrKz1xYSw2NCZyYSl7YS5tc2c9ImludmFsaWQgZGlzdGFuY2UgY29kZSIsYy5tb2RlPW1hO2JyZWFrfWMub2Zmc2V0PXNhLGMuZXh0cmE9MTUmcmEsYy5tb2RlPWdhO2Nhc2UgZ2E6aWYoYy5leHRyYSl7Zm9yKHphPWMuZXh0cmE7bjx6YTspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG0rPWVbZysrXTw8bixuKz04fWMub2Zmc2V0Kz1tJigxPDxjLmV4dHJhKS0xLG0+Pj49Yy5leHRyYSxuLT1jLmV4dHJhLGMuYmFjays9Yy5leHRyYX1pZihjLm9mZnNldD5jLmRtYXgpe2EubXNnPSJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFjayIsYy5tb2RlPW1hO2JyZWFrfWMubW9kZT1oYTtjYXNlIGhhOmlmKDA9PT1qKWJyZWFrIGE7aWYocT1wLWosYy5vZmZzZXQ+cSl7aWYocT1jLm9mZnNldC1xLHE+Yy53aGF2ZSYmYy5zYW5lKXthLm1zZz0iaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2siLGMubW9kZT1tYTticmVha31xPmMud25leHQ/KHEtPWMud25leHQscj1jLndzaXplLXEpOnI9Yy53bmV4dC1xLHE+Yy5sZW5ndGgmJihxPWMubGVuZ3RoKSxwYT1jLndpbmRvd31lbHNlIHBhPWYscj1oLWMub2Zmc2V0LHE9Yy5sZW5ndGg7cT5qJiYocT1qKSxqLT1xLGMubGVuZ3RoLT1xO2RvIGZbaCsrXT1wYVtyKytdO3doaWxlKC0tcSk7MD09PWMubGVuZ3RoJiYoYy5tb2RlPWRhKTticmVhaztjYXNlIGlhOmlmKDA9PT1qKWJyZWFrIGE7ZltoKytdPWMubGVuZ3RoLGotLSxjLm1vZGU9ZGE7YnJlYWs7Y2FzZSBqYTppZihjLndyYXApe2Zvcig7bjwzMjspe2lmKDA9PT1pKWJyZWFrIGE7aS0tLG18PWVbZysrXTw8bixuKz04fWlmKHAtPWosYS50b3RhbF9vdXQrPXAsYy50b3RhbCs9cCxwJiYoYS5hZGxlcj1jLmNoZWNrPWMuZmxhZ3M/dShjLmNoZWNrLGYscCxoLXApOnQoYy5jaGVjayxmLHAsaC1wKSkscD1qLChjLmZsYWdzP206ZChtKSkhPT1jLmNoZWNrKXthLm1zZz0iaW5jb3JyZWN0IGRhdGEgY2hlY2siLGMubW9kZT1tYTticmVha31tPTAsbj0wfWMubW9kZT1rYTtjYXNlIGthOmlmKGMud3JhcCYmYy5mbGFncyl7Zm9yKDtuPDMyOyl7aWYoMD09PWkpYnJlYWsgYTtpLS0sbSs9ZVtnKytdPDxuLG4rPTh9aWYobSE9PSg0Mjk0OTY3Mjk1JmMudG90YWwpKXthLm1zZz0iaW5jb3JyZWN0IGxlbmd0aCBjaGVjayIsYy5tb2RlPW1hO2JyZWFrfW09MCxuPTB9Yy5tb2RlPWxhO2Nhc2UgbGE6eGE9RTticmVhayBhO2Nhc2UgbWE6eGE9SDticmVhayBhO2Nhc2UgbmE6cmV0dXJuIEk7Y2FzZSBvYTpkZWZhdWx0OnJldHVybiBHfXJldHVybiBhLm5leHRfb3V0PWgsYS5hdmFpbF9vdXQ9aixhLm5leHRfaW49ZyxhLmF2YWlsX2luPWksYy5ob2xkPW0sYy5iaXRzPW4sKGMud3NpemV8fHAhPT1hLmF2YWlsX291dCYmYy5tb2RlPG1hJiYoYy5tb2RlPGphfHxiIT09QSkpJiZsKGEsYS5vdXRwdXQsYS5uZXh0X291dCxwLWEuYXZhaWxfb3V0KT8oYy5tb2RlPW5hLEkpOihvLT1hLmF2YWlsX2luLHAtPWEuYXZhaWxfb3V0LGEudG90YWxfaW4rPW8sYS50b3RhbF9vdXQrPXAsYy50b3RhbCs9cCxjLndyYXAmJnAmJihhLmFkbGVyPWMuY2hlY2s9Yy5mbGFncz91KGMuY2hlY2ssZixwLGEubmV4dF9vdXQtcCk6dChjLmNoZWNrLGYscCxhLm5leHRfb3V0LXApKSxhLmRhdGFfdHlwZT1jLmJpdHMrKGMubGFzdD82NDowKSsoYy5tb2RlPT09Vz8xMjg6MCkrKGMubW9kZT09PWNhfHxjLm1vZGU9PT1aPzI1NjowKSwoMD09PW8mJjA9PT1wfHxiPT09QSkmJnhhPT09RCYmKHhhPUopLHhhKX1mdW5jdGlvbiBuKGEpe2lmKCFhfHwhYS5zdGF0ZSlyZXR1cm4gRzt2YXIgYj1hLnN0YXRlO3JldHVybiBiLndpbmRvdyYmKGIud2luZG93PW51bGwpLGEuc3RhdGU9bnVsbCxEfWZ1bmN0aW9uIG8oYSxiKXt2YXIgYztyZXR1cm4gYSYmYS5zdGF0ZT8oYz1hLnN0YXRlLDA9PT0oMiZjLndyYXApP0c6KGMuaGVhZD1iLGIuZG9uZT0hMSxEKSk6R31mdW5jdGlvbiBwKGEsYil7dmFyIGMsZCxlLGY9Yi5sZW5ndGg7cmV0dXJuIGEmJmEuc3RhdGU/KGM9YS5zdGF0ZSwwIT09Yy53cmFwJiZjLm1vZGUhPT1WP0c6Yy5tb2RlPT09ViYmKGQ9MSxkPXQoZCxiLGYsMCksZCE9PWMuY2hlY2spP0g6KGU9bChhLGIsZixmKSk/KGMubW9kZT1uYSxJKTooYy5oYXZlZGljdD0xLEQpKTpHfXZhciBxLHIscz1hKCIuLi91dGlscy9jb21tb24iKSx0PWEoIi4vYWRsZXIzMiIpLHU9YSgiLi9jcmMzMiIpLHY9YSgiLi9pbmZmYXN0Iiksdz1hKCIuL2luZnRyZWVzIikseD0wLHk9MSx6PTIsQT00LEI9NSxDPTYsRD0wLEU9MSxGPTIsRz0tMixIPS0zLEk9LTQsSj0tNSxLPTgsTD0xLE09MixOPTMsTz00LFA9NSxRPTYsUj03LFM9OCxUPTksVT0xMCxWPTExLFc9MTIsWD0xMyxZPTE0LFo9MTUsJD0xNixfPTE3LGFhPTE4LGJhPTE5LGNhPTIwLGRhPTIxLGVhPTIyLGZhPTIzLGdhPTI0LGhhPTI1LGlhPTI2LGphPTI3LGthPTI4LGxhPTI5LG1hPTMwLG5hPTMxLG9hPTMyLHBhPTg1MixxYT01OTIscmE9MTUsc2E9cmEsdGE9ITA7Yy5pbmZsYXRlUmVzZXQ9ZyxjLmluZmxhdGVSZXNldDI9aCxjLmluZmxhdGVSZXNldEtlZXA9ZixjLmluZmxhdGVJbml0PWosYy5pbmZsYXRlSW5pdDI9aSxjLmluZmxhdGU9bSxjLmluZmxhdGVFbmQ9bixjLmluZmxhdGVHZXRIZWFkZXI9byxjLmluZmxhdGVTZXREaWN0aW9uYXJ5PXAsYy5pbmZsYXRlSW5mbz0icGFrbyBpbmZsYXRlIChmcm9tIE5vZGVjYSBwcm9qZWN0KSJ9LHsiLi4vdXRpbHMvY29tbW9uIjo2MiwiLi9hZGxlcjMyIjo2NCwiLi9jcmMzMiI6NjYsIi4vaW5mZmFzdCI6NjksIi4vaW5mdHJlZXMiOjcxfV0sNzE6W2Z1bmN0aW9uKGEsYixjKXsidXNlIHN0cmljdCI7dmFyIGQ9YSgiLi4vdXRpbHMvY29tbW9uIiksZT0xNSxmPTg1MixnPTU5MixoPTAsaT0xLGo9MixrPVszLDQsNSw2LDcsOCw5LDEwLDExLDEzLDE1LDE3LDE5LDIzLDI3LDMxLDM1LDQzLDUxLDU5LDY3LDgzLDk5LDExNSwxMzEsMTYzLDE5NSwyMjcsMjU4LDAsMF0sbD1bMTYsMTYsMTYsMTYsMTYsMTYsMTYsMTYsMTcsMTcsMTcsMTcsMTgsMTgsMTgsMTgsMTksMTksMTksMTksMjAsMjAsMjAsMjAsMjEsMjEsMjEsMjEsMTYsNzIsNzhdLG09WzEsMiwzLDQsNSw3LDksMTMsMTcsMjUsMzMsNDksNjUsOTcsMTI5LDE5MywyNTcsMzg1LDUxMyw3NjksMTAyNSwxNTM3LDIwNDksMzA3Myw0MDk3LDYxNDUsODE5MywxMjI4OSwxNjM4NSwyNDU3NywwLDBdLG49WzE2LDE2LDE2LDE2LDE3LDE3LDE4LDE4LDE5LDE5LDIwLDIwLDIxLDIxLDIyLDIyLDIzLDIzLDI0LDI0LDI1LDI1LDI2LDI2LDI3LDI3LDI4LDI4LDI5LDI5LDY0LDY0XTtiLmV4cG9ydHM9ZnVuY3Rpb24oYSxiLGMsbyxwLHEscixzKXt2YXIgdCx1LHYsdyx4LHkseixBLEIsQz1zLmJpdHMsRD0wLEU9MCxGPTAsRz0wLEg9MCxJPTAsSj0wLEs9MCxMPTAsTT0wLE49bnVsbCxPPTAsUD1uZXcgZC5CdWYxNihlKzEpLFE9bmV3IGQuQnVmMTYoZSsxKSxSPW51bGwsUz0wO2ZvcihEPTA7RDw9ZTtEKyspUFtEXT0wO2ZvcihFPTA7RTxvO0UrKylQW2JbYytFXV0rKztmb3IoSD1DLEc9ZTtHPj0xJiYwPT09UFtHXTtHLS0pO2lmKEg+RyYmKEg9RyksMD09PUcpcmV0dXJuIHBbcSsrXT0yMDk3MTUyMCxwW3ErK109MjA5NzE1MjAscy5iaXRzPTEsMDtmb3IoRj0xO0Y8RyYmMD09PVBbRl07RisrKTtmb3IoSDxGJiYoSD1GKSxLPTEsRD0xO0Q8PWU7RCsrKWlmKEs8PD0xLEstPVBbRF0sSzwwKXJldHVybi0xO2lmKEs+MCYmKGE9PT1ofHwxIT09RykpcmV0dXJuLTE7Zm9yKFFbMV09MCxEPTE7RDxlO0QrKylRW0QrMV09UVtEXStQW0RdO2ZvcihFPTA7RTxvO0UrKykwIT09YltjK0VdJiYocltRW2JbYytFXV0rK109RSk7aWYoYT09PWg/KE49Uj1yLHk9MTkpOmE9PT1pPyhOPWssTy09MjU3LFI9bCxTLT0yNTcseT0yNTYpOihOPW0sUj1uLHk9LTEpLE09MCxFPTAsRD1GLHg9cSxJPUgsSj0wLHY9LTEsTD0xPDxILHc9TC0xLGE9PT1pJiZMPmZ8fGE9PT1qJiZMPmcpcmV0dXJuIDE7Zm9yKDs7KXt6PUQtSixyW0VdPHk/KEE9MCxCPXJbRV0pOnJbRV0+eT8oQT1SW1MrcltFXV0sQj1OW08rcltFXV0pOihBPTk2LEI9MCksdD0xPDxELUosdT0xPDxJLEY9dTtkbyB1LT10LHBbeCsoTT4+SikrdV09ejw8MjR8QTw8MTZ8QnwwO3doaWxlKDAhPT11KTtmb3IodD0xPDxELTE7TSZ0Oyl0Pj49MTtpZigwIT09dD8oTSY9dC0xLE0rPXQpOk09MCxFKyssMD09PS0tUFtEXSl7aWYoRD09PUcpYnJlYWs7RD1iW2MrcltFXV19aWYoRD5IJiYoTSZ3KSE9PXYpe2ZvcigwPT09SiYmKEo9SCkseCs9RixJPUQtSixLPTE8PEk7SStKPEcmJihLLT1QW0krSl0sIShLPD0wKSk7KUkrKyxLPDw9MTtpZihMKz0xPDxJLGE9PT1pJiZMPmZ8fGE9PT1qJiZMPmcpcmV0dXJuIDE7dj1NJncscFt2XT1IPDwyNHxJPDwxNnx4LXF8MH19cmV0dXJuIDAhPT1NJiYocFt4K01dPUQtSjw8MjR8NjQ8PDE2fDApLHMuYml0cz1ILDB9fSx7Ii4uL3V0aWxzL2NvbW1vbiI6NjJ9XSw3MjpbZnVuY3Rpb24oYSxiLGMpeyJ1c2Ugc3RyaWN0IjtiLmV4cG9ydHM9ezI6Im5lZWQgZGljdGlvbmFyeSIsMToic3RyZWFtIGVuZCIsMDoiIiwiLTEiOiJmaWxlIGVycm9yIiwiLTIiOiJzdHJlYW0gZXJyb3IiLCItMyI6ImRhdGEgZXJyb3IiLCItNCI6Imluc3VmZmljaWVudCBtZW1vcnkiLCItNSI6ImJ1ZmZlciBlcnJvciIsIi02IjoiaW5jb21wYXRpYmxlIHZlcnNpb24ifX0se31dLDczOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoYSl7Zm9yKHZhciBiPWEubGVuZ3RoOy0tYj49MDspYVtiXT0wfWZ1bmN0aW9uIGUoYSxiLGMsZCxlKXt0aGlzLnN0YXRpY190cmVlPWEsdGhpcy5leHRyYV9iaXRzPWIsdGhpcy5leHRyYV9iYXNlPWMsdGhpcy5lbGVtcz1kLHRoaXMubWF4X2xlbmd0aD1lLHRoaXMuaGFzX3N0cmVlPWEmJmEubGVuZ3RofWZ1bmN0aW9uIGYoYSxiKXt0aGlzLmR5bl90cmVlPWEsdGhpcy5tYXhfY29kZT0wLHRoaXMuc3RhdF9kZXNjPWJ9ZnVuY3Rpb24gZyhhKXtyZXR1cm4gYTwyNTY/aWFbYV06aWFbMjU2KyhhPj4+NyldfWZ1bmN0aW9uIGgoYSxiKXthLnBlbmRpbmdfYnVmW2EucGVuZGluZysrXT0yNTUmYixhLnBlbmRpbmdfYnVmW2EucGVuZGluZysrXT1iPj4+OCYyNTV9ZnVuY3Rpb24gaShhLGIsYyl7YS5iaV92YWxpZD5YLWM/KGEuYmlfYnVmfD1iPDxhLmJpX3ZhbGlkJjY1NTM1LGgoYSxhLmJpX2J1ZiksYS5iaV9idWY9Yj4+WC1hLmJpX3ZhbGlkLGEuYmlfdmFsaWQrPWMtWCk6KGEuYmlfYnVmfD1iPDxhLmJpX3ZhbGlkJjY1NTM1LGEuYmlfdmFsaWQrPWMpfWZ1bmN0aW9uIGooYSxiLGMpe2koYSxjWzIqYl0sY1syKmIrMV0pfWZ1bmN0aW9uIGsoYSxiKXt2YXIgYz0wO2RvIGN8PTEmYSxhPj4+PTEsYzw8PTE7d2hpbGUoLS1iPjApO3JldHVybiBjPj4+MX1mdW5jdGlvbiBsKGEpezE2PT09YS5iaV92YWxpZD8oaChhLGEuYmlfYnVmKSxhLmJpX2J1Zj0wLGEuYmlfdmFsaWQ9MCk6YS5iaV92YWxpZD49OCYmKGEucGVuZGluZ19idWZbYS5wZW5kaW5nKytdPTI1NSZhLmJpX2J1ZixhLmJpX2J1Zj4+PTgsYS5iaV92YWxpZC09OCl9ZnVuY3Rpb24gbShhLGIpe3ZhciBjLGQsZSxmLGcsaCxpPWIuZHluX3RyZWUsaj1iLm1heF9jb2RlLGs9Yi5zdGF0X2Rlc2Muc3RhdGljX3RyZWUsbD1iLnN0YXRfZGVzYy5oYXNfc3RyZWUsbT1iLnN0YXRfZGVzYy5leHRyYV9iaXRzLG49Yi5zdGF0X2Rlc2MuZXh0cmFfYmFzZSxvPWIuc3RhdF9kZXNjLm1heF9sZW5ndGgscD0wO2ZvcihmPTA7Zjw9VztmKyspYS5ibF9jb3VudFtmXT0wO2ZvcihpWzIqYS5oZWFwW2EuaGVhcF9tYXhdKzFdPTAsCmM9YS5oZWFwX21heCsxO2M8VjtjKyspZD1hLmhlYXBbY10sZj1pWzIqaVsyKmQrMV0rMV0rMSxmPm8mJihmPW8scCsrKSxpWzIqZCsxXT1mLGQ+anx8KGEuYmxfY291bnRbZl0rKyxnPTAsZD49biYmKGc9bVtkLW5dKSxoPWlbMipkXSxhLm9wdF9sZW4rPWgqKGYrZyksbCYmKGEuc3RhdGljX2xlbis9aCooa1syKmQrMV0rZykpKTtpZigwIT09cCl7ZG97Zm9yKGY9by0xOzA9PT1hLmJsX2NvdW50W2ZdOylmLS07YS5ibF9jb3VudFtmXS0tLGEuYmxfY291bnRbZisxXSs9MixhLmJsX2NvdW50W29dLS0scC09Mn13aGlsZShwPjApO2ZvcihmPW87MCE9PWY7Zi0tKWZvcihkPWEuYmxfY291bnRbZl07MCE9PWQ7KWU9YS5oZWFwWy0tY10sZT5qfHwoaVsyKmUrMV0hPT1mJiYoYS5vcHRfbGVuKz0oZi1pWzIqZSsxXSkqaVsyKmVdLGlbMiplKzFdPWYpLGQtLSl9fWZ1bmN0aW9uIG4oYSxiLGMpe3ZhciBkLGUsZj1uZXcgQXJyYXkoVysxKSxnPTA7Zm9yKGQ9MTtkPD1XO2QrKylmW2RdPWc9ZytjW2QtMV08PDE7Zm9yKGU9MDtlPD1iO2UrKyl7dmFyIGg9YVsyKmUrMV07MCE9PWgmJihhWzIqZV09ayhmW2hdKyssaCkpfX1mdW5jdGlvbiBvKCl7dmFyIGEsYixjLGQsZixnPW5ldyBBcnJheShXKzEpO2ZvcihjPTAsZD0wO2Q8US0xO2QrKylmb3Ioa2FbZF09YyxhPTA7YTwxPDxiYVtkXTthKyspamFbYysrXT1kO2ZvcihqYVtjLTFdPWQsZj0wLGQ9MDtkPDE2O2QrKylmb3IobGFbZF09ZixhPTA7YTwxPDxjYVtkXTthKyspaWFbZisrXT1kO2ZvcihmPj49NztkPFQ7ZCsrKWZvcihsYVtkXT1mPDw3LGE9MDthPDE8PGNhW2RdLTc7YSsrKWlhWzI1NitmKytdPWQ7Zm9yKGI9MDtiPD1XO2IrKylnW2JdPTA7Zm9yKGE9MDthPD0xNDM7KWdhWzIqYSsxXT04LGErKyxnWzhdKys7Zm9yKDthPD0yNTU7KWdhWzIqYSsxXT05LGErKyxnWzldKys7Zm9yKDthPD0yNzk7KWdhWzIqYSsxXT03LGErKyxnWzddKys7Zm9yKDthPD0yODc7KWdhWzIqYSsxXT04LGErKyxnWzhdKys7Zm9yKG4oZ2EsUysxLGcpLGE9MDthPFQ7YSsrKWhhWzIqYSsxXT01LGhhWzIqYV09ayhhLDUpO21hPW5ldyBlKGdhLGJhLFIrMSxTLFcpLG5hPW5ldyBlKGhhLGNhLDAsVCxXKSxvYT1uZXcgZShuZXcgQXJyYXkoMCksZGEsMCxVLFkpfWZ1bmN0aW9uIHAoYSl7dmFyIGI7Zm9yKGI9MDtiPFM7YisrKWEuZHluX2x0cmVlWzIqYl09MDtmb3IoYj0wO2I8VDtiKyspYS5keW5fZHRyZWVbMipiXT0wO2ZvcihiPTA7YjxVO2IrKylhLmJsX3RyZWVbMipiXT0wO2EuZHluX2x0cmVlWzIqWl09MSxhLm9wdF9sZW49YS5zdGF0aWNfbGVuPTAsYS5sYXN0X2xpdD1hLm1hdGNoZXM9MH1mdW5jdGlvbiBxKGEpe2EuYmlfdmFsaWQ+OD9oKGEsYS5iaV9idWYpOmEuYmlfdmFsaWQ+MCYmKGEucGVuZGluZ19idWZbYS5wZW5kaW5nKytdPWEuYmlfYnVmKSxhLmJpX2J1Zj0wLGEuYmlfdmFsaWQ9MH1mdW5jdGlvbiByKGEsYixjLGQpe3EoYSksZCYmKGgoYSxjKSxoKGEsfmMpKSxHLmFycmF5U2V0KGEucGVuZGluZ19idWYsYS53aW5kb3csYixjLGEucGVuZGluZyksYS5wZW5kaW5nKz1jfWZ1bmN0aW9uIHMoYSxiLGMsZCl7dmFyIGU9MipiLGY9MipjO3JldHVybiBhW2VdPGFbZl18fGFbZV09PT1hW2ZdJiZkW2JdPD1kW2NdfWZ1bmN0aW9uIHQoYSxiLGMpe2Zvcih2YXIgZD1hLmhlYXBbY10sZT1jPDwxO2U8PWEuaGVhcF9sZW4mJihlPGEuaGVhcF9sZW4mJnMoYixhLmhlYXBbZSsxXSxhLmhlYXBbZV0sYS5kZXB0aCkmJmUrKywhcyhiLGQsYS5oZWFwW2VdLGEuZGVwdGgpKTspYS5oZWFwW2NdPWEuaGVhcFtlXSxjPWUsZTw8PTE7YS5oZWFwW2NdPWR9ZnVuY3Rpb24gdShhLGIsYyl7dmFyIGQsZSxmLGgsaz0wO2lmKDAhPT1hLmxhc3RfbGl0KWRvIGQ9YS5wZW5kaW5nX2J1ZlthLmRfYnVmKzIqa108PDh8YS5wZW5kaW5nX2J1ZlthLmRfYnVmKzIqaysxXSxlPWEucGVuZGluZ19idWZbYS5sX2J1ZitrXSxrKyssMD09PWQ/aihhLGUsYik6KGY9amFbZV0saihhLGYrUisxLGIpLGg9YmFbZl0sMCE9PWgmJihlLT1rYVtmXSxpKGEsZSxoKSksZC0tLGY9ZyhkKSxqKGEsZixjKSxoPWNhW2ZdLDAhPT1oJiYoZC09bGFbZl0saShhLGQsaCkpKTt3aGlsZShrPGEubGFzdF9saXQpO2ooYSxaLGIpfWZ1bmN0aW9uIHYoYSxiKXt2YXIgYyxkLGUsZj1iLmR5bl90cmVlLGc9Yi5zdGF0X2Rlc2Muc3RhdGljX3RyZWUsaD1iLnN0YXRfZGVzYy5oYXNfc3RyZWUsaT1iLnN0YXRfZGVzYy5lbGVtcyxqPS0xO2ZvcihhLmhlYXBfbGVuPTAsYS5oZWFwX21heD1WLGM9MDtjPGk7YysrKTAhPT1mWzIqY10/KGEuaGVhcFsrK2EuaGVhcF9sZW5dPWo9YyxhLmRlcHRoW2NdPTApOmZbMipjKzFdPTA7Zm9yKDthLmhlYXBfbGVuPDI7KWU9YS5oZWFwWysrYS5oZWFwX2xlbl09ajwyPysrajowLGZbMiplXT0xLGEuZGVwdGhbZV09MCxhLm9wdF9sZW4tLSxoJiYoYS5zdGF0aWNfbGVuLT1nWzIqZSsxXSk7Zm9yKGIubWF4X2NvZGU9aixjPWEuaGVhcF9sZW4+PjE7Yz49MTtjLS0pdChhLGYsYyk7ZT1pO2RvIGM9YS5oZWFwWzFdLGEuaGVhcFsxXT1hLmhlYXBbYS5oZWFwX2xlbi0tXSx0KGEsZiwxKSxkPWEuaGVhcFsxXSxhLmhlYXBbLS1hLmhlYXBfbWF4XT1jLGEuaGVhcFstLWEuaGVhcF9tYXhdPWQsZlsyKmVdPWZbMipjXStmWzIqZF0sYS5kZXB0aFtlXT0oYS5kZXB0aFtjXT49YS5kZXB0aFtkXT9hLmRlcHRoW2NdOmEuZGVwdGhbZF0pKzEsZlsyKmMrMV09ZlsyKmQrMV09ZSxhLmhlYXBbMV09ZSsrLHQoYSxmLDEpO3doaWxlKGEuaGVhcF9sZW4+PTIpO2EuaGVhcFstLWEuaGVhcF9tYXhdPWEuaGVhcFsxXSxtKGEsYiksbihmLGosYS5ibF9jb3VudCl9ZnVuY3Rpb24gdyhhLGIsYyl7dmFyIGQsZSxmPS0xLGc9YlsxXSxoPTAsaT03LGo9NDtmb3IoMD09PWcmJihpPTEzOCxqPTMpLGJbMiooYysxKSsxXT02NTUzNSxkPTA7ZDw9YztkKyspZT1nLGc9YlsyKihkKzEpKzFdLCsraDxpJiZlPT09Z3x8KGg8aj9hLmJsX3RyZWVbMiplXSs9aDowIT09ZT8oZSE9PWYmJmEuYmxfdHJlZVsyKmVdKyssYS5ibF90cmVlWzIqJF0rKyk6aDw9MTA/YS5ibF90cmVlWzIqX10rKzphLmJsX3RyZWVbMiphYV0rKyxoPTAsZj1lLDA9PT1nPyhpPTEzOCxqPTMpOmU9PT1nPyhpPTYsaj0zKTooaT03LGo9NCkpfWZ1bmN0aW9uIHgoYSxiLGMpe3ZhciBkLGUsZj0tMSxnPWJbMV0saD0wLGs9NyxsPTQ7Zm9yKDA9PT1nJiYoaz0xMzgsbD0zKSxkPTA7ZDw9YztkKyspaWYoZT1nLGc9YlsyKihkKzEpKzFdLCEoKytoPGsmJmU9PT1nKSl7aWYoaDxsKXtkbyBqKGEsZSxhLmJsX3RyZWUpO3doaWxlKDAhPT0tLWgpfWVsc2UgMCE9PWU/KGUhPT1mJiYoaihhLGUsYS5ibF90cmVlKSxoLS0pLGooYSwkLGEuYmxfdHJlZSksaShhLGgtMywyKSk6aDw9MTA/KGooYSxfLGEuYmxfdHJlZSksaShhLGgtMywzKSk6KGooYSxhYSxhLmJsX3RyZWUpLGkoYSxoLTExLDcpKTtoPTAsZj1lLDA9PT1nPyhrPTEzOCxsPTMpOmU9PT1nPyhrPTYsbD0zKTooaz03LGw9NCl9fWZ1bmN0aW9uIHkoYSl7dmFyIGI7Zm9yKHcoYSxhLmR5bl9sdHJlZSxhLmxfZGVzYy5tYXhfY29kZSksdyhhLGEuZHluX2R0cmVlLGEuZF9kZXNjLm1heF9jb2RlKSx2KGEsYS5ibF9kZXNjKSxiPVUtMTtiPj0zJiYwPT09YS5ibF90cmVlWzIqZWFbYl0rMV07Yi0tKTtyZXR1cm4gYS5vcHRfbGVuKz0zKihiKzEpKzUrNSs0LGJ9ZnVuY3Rpb24geihhLGIsYyxkKXt2YXIgZTtmb3IoaShhLGItMjU3LDUpLGkoYSxjLTEsNSksaShhLGQtNCw0KSxlPTA7ZTxkO2UrKylpKGEsYS5ibF90cmVlWzIqZWFbZV0rMV0sMyk7eChhLGEuZHluX2x0cmVlLGItMSkseChhLGEuZHluX2R0cmVlLGMtMSl9ZnVuY3Rpb24gQShhKXt2YXIgYixjPTQwOTM2MjQ0NDc7Zm9yKGI9MDtiPD0zMTtiKyssYz4+Pj0xKWlmKDEmYyYmMCE9PWEuZHluX2x0cmVlWzIqYl0pcmV0dXJuIEk7aWYoMCE9PWEuZHluX2x0cmVlWzE4XXx8MCE9PWEuZHluX2x0cmVlWzIwXXx8MCE9PWEuZHluX2x0cmVlWzI2XSlyZXR1cm4gSjtmb3IoYj0zMjtiPFI7YisrKWlmKDAhPT1hLmR5bl9sdHJlZVsyKmJdKXJldHVybiBKO3JldHVybiBJfWZ1bmN0aW9uIEIoYSl7cGF8fChvKCkscGE9ITApLGEubF9kZXNjPW5ldyBmKGEuZHluX2x0cmVlLG1hKSxhLmRfZGVzYz1uZXcgZihhLmR5bl9kdHJlZSxuYSksYS5ibF9kZXNjPW5ldyBmKGEuYmxfdHJlZSxvYSksYS5iaV9idWY9MCxhLmJpX3ZhbGlkPTAscChhKX1mdW5jdGlvbiBDKGEsYixjLGQpe2koYSwoTDw8MSkrKGQ/MTowKSwzKSxyKGEsYixjLCEwKX1mdW5jdGlvbiBEKGEpe2koYSxNPDwxLDMpLGooYSxaLGdhKSxsKGEpfWZ1bmN0aW9uIEUoYSxiLGMsZCl7dmFyIGUsZixnPTA7YS5sZXZlbD4wPyhhLnN0cm0uZGF0YV90eXBlPT09SyYmKGEuc3RybS5kYXRhX3R5cGU9QShhKSksdihhLGEubF9kZXNjKSx2KGEsYS5kX2Rlc2MpLGc9eShhKSxlPWEub3B0X2xlbiszKzc+Pj4zLGY9YS5zdGF0aWNfbGVuKzMrNz4+PjMsZjw9ZSYmKGU9ZikpOmU9Zj1jKzUsYys0PD1lJiZiIT09LTE/QyhhLGIsYyxkKTphLnN0cmF0ZWd5PT09SHx8Zj09PWU/KGkoYSwoTTw8MSkrKGQ/MTowKSwzKSx1KGEsZ2EsaGEpKTooaShhLChOPDwxKSsoZD8xOjApLDMpLHooYSxhLmxfZGVzYy5tYXhfY29kZSsxLGEuZF9kZXNjLm1heF9jb2RlKzEsZysxKSx1KGEsYS5keW5fbHRyZWUsYS5keW5fZHRyZWUpKSxwKGEpLGQmJnEoYSl9ZnVuY3Rpb24gRihhLGIsYyl7cmV0dXJuIGEucGVuZGluZ19idWZbYS5kX2J1ZisyKmEubGFzdF9saXRdPWI+Pj44JjI1NSxhLnBlbmRpbmdfYnVmW2EuZF9idWYrMiphLmxhc3RfbGl0KzFdPTI1NSZiLGEucGVuZGluZ19idWZbYS5sX2J1ZithLmxhc3RfbGl0XT0yNTUmYyxhLmxhc3RfbGl0KyssMD09PWI/YS5keW5fbHRyZWVbMipjXSsrOihhLm1hdGNoZXMrKyxiLS0sYS5keW5fbHRyZWVbMiooamFbY10rUisxKV0rKyxhLmR5bl9kdHJlZVsyKmcoYildKyspLGEubGFzdF9saXQ9PT1hLmxpdF9idWZzaXplLTF9dmFyIEc9YSgiLi4vdXRpbHMvY29tbW9uIiksSD00LEk9MCxKPTEsSz0yLEw9MCxNPTEsTj0yLE89MyxQPTI1OCxRPTI5LFI9MjU2LFM9UisxK1EsVD0zMCxVPTE5LFY9MipTKzEsVz0xNSxYPTE2LFk9NyxaPTI1NiwkPTE2LF89MTcsYWE9MTgsYmE9WzAsMCwwLDAsMCwwLDAsMCwxLDEsMSwxLDIsMiwyLDIsMywzLDMsMyw0LDQsNCw0LDUsNSw1LDUsMF0sY2E9WzAsMCwwLDAsMSwxLDIsMiwzLDMsNCw0LDUsNSw2LDYsNyw3LDgsOCw5LDksMTAsMTAsMTEsMTEsMTIsMTIsMTMsMTNdLGRhPVswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDIsMyw3XSxlYT1bMTYsMTcsMTgsMCw4LDcsOSw2LDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNV0sZmE9NTEyLGdhPW5ldyBBcnJheSgyKihTKzIpKTtkKGdhKTt2YXIgaGE9bmV3IEFycmF5KDIqVCk7ZChoYSk7dmFyIGlhPW5ldyBBcnJheShmYSk7ZChpYSk7dmFyIGphPW5ldyBBcnJheShQLU8rMSk7ZChqYSk7dmFyIGthPW5ldyBBcnJheShRKTtkKGthKTt2YXIgbGE9bmV3IEFycmF5KFQpO2QobGEpO3ZhciBtYSxuYSxvYSxwYT0hMTtjLl90cl9pbml0PUIsYy5fdHJfc3RvcmVkX2Jsb2NrPUMsYy5fdHJfZmx1c2hfYmxvY2s9RSxjLl90cl90YWxseT1GLGMuX3RyX2FsaWduPUR9LHsiLi4vdXRpbHMvY29tbW9uIjo2Mn1dLDc0OltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGQoKXt0aGlzLmlucHV0PW51bGwsdGhpcy5uZXh0X2luPTAsdGhpcy5hdmFpbF9pbj0wLHRoaXMudG90YWxfaW49MCx0aGlzLm91dHB1dD1udWxsLHRoaXMubmV4dF9vdXQ9MCx0aGlzLmF2YWlsX291dD0wLHRoaXMudG90YWxfb3V0PTAsdGhpcy5tc2c9IiIsdGhpcy5zdGF0ZT1udWxsLHRoaXMuZGF0YV90eXBlPTIsdGhpcy5hZGxlcj0wfWIuZXhwb3J0cz1kfSx7fV19LHt9LFsxMF0pKDEwKX0pOw=="},{"meta":{"name":"FileSaver.min.js","url":"https://cdn.bootcdn.net/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js","ts":1657118213706,"mimetype":"text/javascript"},"source":"LyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9GaWxlU2F2ZXIuanMgKi8KdmFyIHNhdmVBcz1zYXZlQXN8fGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0IjtpZih0eXBlb2YgZT09PSJ1bmRlZmluZWQifHx0eXBlb2YgbmF2aWdhdG9yIT09InVuZGVmaW5lZCImJi9NU0lFIFsxLTldXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe3JldHVybn12YXIgdD1lLmRvY3VtZW50LG49ZnVuY3Rpb24oKXtyZXR1cm4gZS5VUkx8fGUud2Via2l0VVJMfHxlfSxyPXQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwiYSIpLG89ImRvd25sb2FkImluIHIsYT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgTW91c2VFdmVudCgiY2xpY2siKTtlLmRpc3BhdGNoRXZlbnQodCl9LGk9L2NvbnN0cnVjdG9yL2kudGVzdChlLkhUTUxFbGVtZW50KXx8ZS5zYWZhcmksZj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHU9ZnVuY3Rpb24odCl7KGUuc2V0SW1tZWRpYXRlfHxlLnNldFRpbWVvdXQpKGZ1bmN0aW9uKCl7dGhyb3cgdH0sMCl9LHM9ImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIsZD0xZTMqNDAsYz1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2lmKHR5cGVvZiBlPT09InN0cmluZyIpe24oKS5yZXZva2VPYmplY3RVUkwoZSl9ZWxzZXtlLnJlbW92ZSgpfX07c2V0VGltZW91dCh0LGQpfSxsPWZ1bmN0aW9uKGUsdCxuKXt0PVtdLmNvbmNhdCh0KTt2YXIgcj10Lmxlbmd0aDt3aGlsZShyLS0pe3ZhciBvPWVbIm9uIit0W3JdXTtpZih0eXBlb2Ygbz09PSJmdW5jdGlvbiIpe3RyeXtvLmNhbGwoZSxufHxlKX1jYXRjaChhKXt1KGEpfX19fSxwPWZ1bmN0aW9uKGUpe2lmKC9eXHMqKD86dGV4dFwvXFMqfGFwcGxpY2F0aW9uXC94bWx8XFMqXC9cUypcK3htbClccyo7LipjaGFyc2V0XHMqPVxzKnV0Zi04L2kudGVzdChlLnR5cGUpKXtyZXR1cm4gbmV3IEJsb2IoW1N0cmluZy5mcm9tQ2hhckNvZGUoNjUyNzkpLGVdLHt0eXBlOmUudHlwZX0pfXJldHVybiBlfSx2PWZ1bmN0aW9uKHQsdSxkKXtpZighZCl7dD1wKHQpfXZhciB2PXRoaXMsdz10LnR5cGUsbT13PT09cyx5LGg9ZnVuY3Rpb24oKXtsKHYsIndyaXRlc3RhcnQgcHJvZ3Jlc3Mgd3JpdGUgd3JpdGVlbmQiLnNwbGl0KCIgIikpfSxTPWZ1bmN0aW9uKCl7aWYoKGZ8fG0mJmkpJiZlLkZpbGVSZWFkZXIpe3ZhciByPW5ldyBGaWxlUmVhZGVyO3Iub25sb2FkZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9Zj9yLnJlc3VsdDpyLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLCJkYXRhOmF0dGFjaG1lbnQvZmlsZTsiKTt2YXIgbj1lLm9wZW4odCwiX2JsYW5rIik7aWYoIW4pZS5sb2NhdGlvbi5ocmVmPXQ7dD11bmRlZmluZWQ7di5yZWFkeVN0YXRlPXYuRE9ORTtoKCl9O3IucmVhZEFzRGF0YVVSTCh0KTt2LnJlYWR5U3RhdGU9di5JTklUO3JldHVybn1pZigheSl7eT1uKCkuY3JlYXRlT2JqZWN0VVJMKHQpfWlmKG0pe2UubG9jYXRpb24uaHJlZj15fWVsc2V7dmFyIG89ZS5vcGVuKHksIl9ibGFuayIpO2lmKCFvKXtlLmxvY2F0aW9uLmhyZWY9eX19di5yZWFkeVN0YXRlPXYuRE9ORTtoKCk7Yyh5KX07di5yZWFkeVN0YXRlPXYuSU5JVDtpZihvKXt5PW4oKS5jcmVhdGVPYmplY3RVUkwodCk7c2V0VGltZW91dChmdW5jdGlvbigpe3IuaHJlZj15O3IuZG93bmxvYWQ9dTthKHIpO2goKTtjKHkpO3YucmVhZHlTdGF0ZT12LkRPTkV9KTtyZXR1cm59UygpfSx3PXYucHJvdG90eXBlLG09ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBuZXcgdihlLHR8fGUubmFtZXx8ImRvd25sb2FkIixuKX07aWYodHlwZW9mIG5hdmlnYXRvciE9PSJ1bmRlZmluZWQiJiZuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYil7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt0PXR8fGUubmFtZXx8ImRvd25sb2FkIjtpZighbil7ZT1wKGUpfXJldHVybiBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihlLHQpfX13LmFib3J0PWZ1bmN0aW9uKCl7fTt3LnJlYWR5U3RhdGU9dy5JTklUPTA7dy5XUklUSU5HPTE7dy5ET05FPTI7dy5lcnJvcj13Lm9ud3JpdGVzdGFydD13Lm9ucHJvZ3Jlc3M9dy5vbndyaXRlPXcub25hYm9ydD13Lm9uZXJyb3I9dy5vbndyaXRlZW5kPW51bGw7cmV0dXJuIG19KHR5cGVvZiBzZWxmIT09InVuZGVmaW5lZCImJnNlbGZ8fHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIiYmd2luZG93fHx0aGlzLmNvbnRlbnQpO2lmKHR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIiYmbW9kdWxlLmV4cG9ydHMpe21vZHVsZS5leHBvcnRzLnNhdmVBcz1zYXZlQXN9ZWxzZSBpZih0eXBlb2YgZGVmaW5lIT09InVuZGVmaW5lZCImJmRlZmluZSE9PW51bGwmJmRlZmluZS5hbWQhPT1udWxsKXtkZWZpbmUoIkZpbGVTYXZlci5qcyIsZnVuY3Rpb24oKXtyZXR1cm4gc2F2ZUFzfSl9Cg=="}]},{"name":"ÂéªÁôæÂ∫¶ÊêúÁ¥¢ÁΩÆÈ°∂Êé®Âπø (ECMA6)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*www.baidu.com*","*zhidao.baidu.com/search*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703188,"data":{}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/10019-%E5%8E%BB%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E7%BD%AE%E9%A1%B6%E6%8E%A8%E5%B9%BF-ecma6/code/%E5%8E%BB%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E7%BD%AE%E9%A1%B6%E6%8E%A8%E5%B9%BF%20(ECMA6).user.js","uuid":"ce0c3226-14da-49c9-a088-11d1e409eca3","source":""},{"name":"ÁΩëÊòì‰∫ëÈü≥‰πêÊòæÁ§∫ÂÆåÊï¥Ê≠åÂçï","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://music.163.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703189,"data":{}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/406054-%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%98%BE%E7%A4%BA%E5%AE%8C%E6%95%B4%E6%AD%8C%E5%8D%95/code/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%98%BE%E7%A4%BA%E5%AE%8C%E6%95%B4%E6%AD%8C%E5%8D%95.user.js","uuid":"c52f413b-d45e-4739-a46e-5cf400af9f2f","source":""},{"name":"Ëß£ÈîÅBÁ´ôÂ§ß‰ºöÂëòÁï™Ââß„ÄÅBÁ´ôËßÜÈ¢ëËß£Êûê‰∏ãËΩΩÔºõÂÖ®ÁΩëVIPËßÜÈ¢ëÂÖçË¥πÁ†¥Ëß£ÂéªÂπøÂëäÔºõÂÖ®ÁΩëÈü≥‰πêÁõ¥Êé•‰∏ãËΩΩÔºõÊ≤πÁÆ°„ÄÅFacebookÁ≠âÂõΩÂ§ñËßÜÈ¢ëËß£Êûê‰∏ãËΩΩÔºõÁΩëÁõòÊêúÁ¥¢ÂºïÊìéÁ†¥Ëß£Êó†Èôê‰∏ãËΩΩÁ≠â","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["tt.shuqiandiqiu.com","api.bilibili.com","api.staticj.top","cdn.jsdelivr.net"],"orig_excludes":[],"orig_includes":["*://*.youku.com/v_*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/w_*","*://*.iqiyi.com/a_*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://v.qq.com/tv/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://tv.sohu.com/v/*","*://*.baofeng.com/play/*","*://vip.pptv.com/show/*","*://v.pptv.com/show/*","*://www.le.com/ptv/vplay/*","*://www.wasu.cn/Play/show/*","*://*.1905.com/video/*","*://*.1905.com/play/*","*://*.1905.com/*/play/*","*://www.miguvideo.com/mgs/*","*://m.v.qq.com/x/cover/*","*://m.v.qq.com/x/page/*","*://m.v.qq.com/*","*://m.iqiyi.com/v_*","*://m.iqiyi.com/w_*","*://m.iqiyi.com/a_*","*://m.youku.com/alipay_video/*","*://https://m.youku.com/video/id_*","*://m.mgtv.com/b/*","*://m.tv.sohu.com/v/*","*://m.film.sohu.com/album/*","*://m.le.com/ptv/vplay/*","*://m.pptv.com/show/*","*://m.acfun.cn/v/*","*://m.bilibili.com/video/*","*://m.bilibili.com/anime/*","*://m.bilibili.com/bangumi/play/*","*://m.wasu.cn/Play/show/*","*://www.youtube.com","*://www.youtube.com/","*://www.youtube.com/watch*","*://www.facebook.com/*","*://yt1s.com/facebook-downloader","*music.163.com*","*://y.qq.com*","*://www.kugou.com*","*://www.kuwo.cn*","*://www.lizhi.fm*","*://*.ximalaya.com*","*://music.migu.cn*","*://*.taobao.com/*","*://*detail.tmall.com/*","*://*detail.tmall.hk/*","*://*item.jd.com/*","*://item.yiyaojd.com/*","*://npcitem.jd.hk/*","*://www.laisoyixia.com/download/detail**","*://www.xiaozhukuaipan.com/download/**","*://www.baidu.com/*","*://www.so.com/s*","*://www.sogou.com/web*","*://cn.bing.com/search*","*://www.bing.com/search*","*://so.toutiao.com/search*","*://www.google.com/search*","*://www.bilibili.com/**","*://search.bilibili.com/**","*://space.bilibili.com/**","*://*.zhihu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1658563848204,"data":{"copyright_video_remind":"strue","navigation_data_cache":"o[{\"name\": \"ËµÑÊ∫êÊêúÁ¥¢\",\"list\": [{\"name\": \"‰π¶Á≠æÊêúÁ¥¢\",\"url\": \"https://www.bookmarkearth.com/s/search?q=@@&currentPage=1\"},{\"name\": \"ÁΩëÁõòÊêúÁ¥¢\",\"url\": \"https://www.xiaozhukuaipan.com/s/search?q=@@&currentPage=1\"},{\"name\": \"Ë¥¢ÁªèÊêúÁ¥¢\",\"url\": \"https://www.shaduizi.com/s/search?q=@@&currentPage=1\"},{\"name\": \"ÁôæÂ∫¶ÁôæÁßë\",\"url\": \"https://baike.baidu.com/item/@@\"},{\"name\": \"Áü•‰πéÊêúÁ¥¢\",\"url\": \"https://www.zhihu.com/search?type=content&q=@@\"},{\"name\": \"BÁ´ôÊêúÁ¥¢\",\"url\": \"https://search.bilibili.com/all?keyword=@@&from_source=webtop_search&spm_id_from=333.851\"},{\"name\": \"ÊäñÈü≥ÊêúÁ¥¢\",\"url\": \"https://www.douyin.com/search/@@?aid=0a9fc74b-01e8-4fb0-9509-307c5c07fda1&publish_time=0&sort_type=0&source=normal_search&type=general\"},{\"name\": \"ÊêúÁãó|ÂÖ¨‰ºóÂè∑\",\"url\": \"https://weixin.sogou.com/weixin?type=2&query=@@\"},{\"name\": \"ÊêúÁãó|Áü•‰πé\",\"url\": \"https://www.sogou.com/sogou?pid=sogou-wsse-ff111e4a5406ed40&insite=zhihu.com&ie=utf8&p=73351201&query=@@&ie=utf8&p=73351201&query=@@\"},{\"name\": \"Ë±ÜÁì£ÊêúÁ¥¢\",\"url\": \"https://www.douban.com/search?q=@@\"},{\"name\": \"ÁîµÂΩ±ÊêúÁ¥¢\",\"url\": \"https://www.cupfox.com/search?key=@@\"},{\"name\": \"Áª¥Âü∫ÁôæÁßë\",\"url\": \"https://en.wikipedia.org/w/index.php?search=@@\"},{\"name\": \"Ê≥ïÂæãÊ≥ïËßÑ\",\"url\": \"https://www.pkulaw.com/law/chl?Keywords=@@\"},{\"name\": \"PPTÊêúÁ¥¢\",\"url\": \"https://www.chuliansheji.com/s/search?q=@@&currentPage=1&c=1\"},{\"name\": \"iconÊêúÁ¥¢\",\"url\": \"https://www.iconfont.cn/search/index?searchType=icon&q=@@\"},{\"name\": \"github\",\"url\": \"https://github.com/search?q=@@\"},{\"name\": \"csdn\",\"url\": \"https://so.csdn.net/so/search?q=@@&t=&u=\"},{\"name\": \"ÊâãÊú∫Áî®Ê≤πÁå¥\",\"url\": \"https://blog.csdn.net/haoning7788/article/details/125344294\"}]},{\"name\": \"ÊêúÁ¥¢ÂºïÊìé\",\"list\": [{\"name\": \"ÁôæÂ∫¶\",\"url\": \"https://www.baidu.com/s?wd=@@\"},{\"name\": \"ÂøÖÂ∫î\",\"url\": \"https://cn.bing.com/search?q=@@\"},{\"name\": \"Google\",\"url\": \"https://www.google.com/search?q=@@\"},{\"name\": \"360ÊêúÁ¥¢\",\"url\": \"https://www.so.com/s?ie=utf-8&fr=none&src=360sou_newhome&nlpv=basest&q=@@\"},{\"name\": \"ÊêúÁãó\",\"url\": \"https://www.sogou.com/web?query=@@\"},{\"name\": \"Â§¥Êù°ÊêúÁ¥¢\",\"url\": \"https://so.toutiao.com/search?dvpf=pc&source=input&keyword=@@\"}]}]"}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/418804-%E8%A7%A3%E9%94%81b%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98%E7%95%AA%E5%89%A7-b%E7%AB%99%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD-%E6%B2%B9%E7%AE%A1-facebook%E7%AD%89%E5%9B%BD%E5%A4%96%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD-%E7%BD%91%E7%9B%98%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%A0%B4%E8%A7%A3%E6%97%A0%E9%99%90%E4%B8%8B%E8%BD%BD%E7%AD%89/code/%E8%A7%A3%E9%94%81B%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98%E7%95%AA%E5%89%A7%E3%80%81B%E7%AB%99%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD%EF%BC%9B%E5%85%A8%E7%BD%91VIP%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%EF%BC%9B%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%EF%BC%9B%E6%B2%B9%E7%AE%A1%E3%80%81Facebook%E7%AD%89%E5%9B%BD%E5%A4%96%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E4%B8%8B%E8%BD%BD%EF%BC%9B%E7%BD%91%E7%9B%98%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%A0%B4%E8%A7%A3%E6%97%A0%E9%99%90%E4%B8%8B%E8%BD%BD%E7%AD%89.user.js","uuid":"3dc897fb-1904-4bc1-a67d-4fba723996cc","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery/3.2.1/jquery.min.js","ts":1657887949523,"mimetype":"text/javascript"},"source":""}]},{"name":"ÁôæÂ∫¶ÁΩëÁõòÁÆÄÊòì‰∏ãËΩΩÂä©ÊâãÔºàÁõ¥Èìæ‰∏ãËΩΩÂ§çÊ¥ªÁâàÔºâ","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["localhost","127.0.0.1","yyxxs.cn","softxm.cn","softxm.vip","42.193.51.61","119.28.33.23","119.28.139.214","49.234.47.193","82.156.65.179","42.193.127.85","81.70.253.99","49.232.252.126","82.156.15.149","59.110.224.13","59.110.225.22","59.110.226.3","baidu.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/*","*://yun.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1658049948433,"data":{"softxm_storageName_common_start":"n1636939258043","softxm_storageName_last_code":"s3353","softxm_storageName_last_jsonRpc":"shttp://localhost:6800/jsonrpc","softxm_storageName_last_mine":"s","softxm_storageName_last_savePath":"sC:\\Users\\Bruce\\Downloads\\","softxm_storageName_last_token":"s"}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/418182-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B%EF%BC%88%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88%EF%BC%89.user.js","uuid":"8636a667-58da-4e1d-9948-2091b5421342","source":"","requires":[{"meta":{"name":"jquery.js","url":"https://lib.baomitu.com/jquery/3.6.0/jquery.js","ts":1657549998511,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert.min.js","url":"https://lib.baomitu.com/sweetalert/2.1.2/sweetalert.min.js","ts":1657549998504,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"clipboard.min.js","url":"https://lib.baomitu.com/clipboard.js/2.0.6/clipboard.min.js","ts":1657549998505,"mimetype":"text/javascript"},"source":""}]},{"name":"ÈòøÈáå‰∫ëÁõò","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["aliyundrive.com","alicloudccp.com","aliyuncs.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.aliyundrive.com/s/*","https://www.aliyundrive.com/drive*"],"orig_noframes":null,"orig_run_at":"document-body","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703200,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/425955-%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/code/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98.user.js","uuid":"51b6952f-00bf-4fe8-9552-c7667b26350e","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1658631447826,"mimetype":"text/javascript"},"source":""}]},{"name":"ÁôæÂ∫¶ÁΩëÁõò‰∏éÈòøÈáåÁΩëÁõòËµÑÊ∫ê_ÊêúÁ¥¢ÂºïÊìé_ËÅöÂêà","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/*","*://yun.baidu.com/*","*://wangpan.baidu.com/*","*://duanxin.baidu.com/*","*://note.baidu.com/*","*://tonghuajilu.baidu.com/*","*://tongxunlu.baidu.com/*","*://wenzhang.baidu.com/*","*://zhaohui.baidu.com/*","*://photo.baidu.com/*","*://www.aliyundrive.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703201,"data":{}},"enabled":false,"position":8,"file_url":"https://greasyfork.org/scripts/375337-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8E%E9%98%BF%E9%87%8C%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90-%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-%E8%81%9A%E5%90%88/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8E%E9%98%BF%E9%87%8C%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90_%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E_%E8%81%9A%E5%90%88.user.js","uuid":"0d3ca944-54aa-4a9d-b6d1-a6c67ca3d7e9","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnmb7luqbnvZHnm5jkuI7pmL/ph4znvZHnm5jotYTmupBf5pCc57Si5byV5pOOX+iBmuWQiAovLyBAdmVyc2lvbiAgICAgIDMuNzkKLy8gQGRlc2NyaXB0aW9uICDlnKjnmb7luqbkupHnm5jkuI7pmL/ph4zkupHnm5jpobXpnaLkuK3mlrDlop7nvZHnm5jotYTmupBf5pCc57Si5byV5pOOXyjkuonlj5bkuIDnvZHmiZPlsL0pCi8vIEBtYXRjaCAgICAgICAgKjovL3Bhbi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly95dW4uYmFpZHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vd2FuZ3Bhbi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9kdWFueGluLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL25vdGUuYmFpZHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vdG9uZ2h1YWppbHUuYmFpZHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vdG9uZ3h1bmx1LmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3dlbnpoYW5nLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3poYW9odWkuYmFpZHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vcGhvdG8uYmFpZHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3LmFsaXl1bmRyaXZlLmNvbS8qCi8vIEBncmFudCAgICAgICAg5p2l6Ieq5ZCE5Liq572R55uY6LWE5rqQ5pCc57Si5byV5pOO5byA5Y+R6ICFCi8vIEBhdXRob3IgICAgICAg5aSq5Y+y5a2Q5LmJ5oWICi8vIEBuYW1lc3BhY2UgICAgcXM5MzMxM0BzaW5hLmNuCi8vID09L1VzZXJTY3JpcHQ9PQoKIShmdW5jdGlvbigpIHsKCS8v5aSE55CGY3NzCglic2VnQ3NzKCk7CgoJLy/lpITnkIZkb20KCWJzZWcoMCk7CgoJcmV0dXJuOwp9KSgpOwoKZnVuY3Rpb24gYnNlZyh0dGltZSkgewoJLy/ojrflj5Zib2R5Cgl2YXIgYm9keSA9IGRvY3VtZW50LmJvZHk7CgkvL+iOt+WPluWfn+WQjQoJdmFyIHdsaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0OwoJLy/ln5/lkI3mmK/lkKbljIXlkKvnmb7luqbvvJ8KCXZhciBmaW5kX2JhaWR1ID0gKHdsaG9zdC5pbmRleE9mKCJiYWlkdSIpICE9IC0xKTsKCgkvL+acgOWkmuaJvjEwMOasoQoJaWYodHRpbWUgPCAxMDApIHsKCgkJdmFyIGlucyA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjaWRfbmV3X3NwYW4iKSA9PSBudWxsKTsKCgkJLy/kuLvpobXvvIhodHRwczovL3Bhbi5iYWlkdS5jb20vbmV0ZGlzay9ob21l77yM562J77yJCgkJdmFyIGZpbmRfaG9tZSA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuZmluZC1saWdodC1pY29uIikgIT09IG51bGwpOwoJCQoJCS8v5paw5Li76aG1IGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9kaXNrL21haW4jL2luZGV4P2NhdGVnb3J5PWFsbAoJCXZhciBmaW5kX21haW4gPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLndwLWRpc2staGVhZGVyIikgIT09IG51bGwpOwoKCQkvL+mYv+mHjOS4u+mhtSBodHRwczovL3d3dy5hbGl5dW5kcml2ZS5jb20vZHJpdmUKCgkJLy/lr4bnoIHloavlhpnpobXvvIhodHRwczovL3Bhbi5iYWlkdS5jb20vc2hhcmUvaW5pdD9zdXJsPeKApuKApu+8iQoJCXZhciBmaW5kX2luaXQgPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLnZlcmlmeS1mb3JtIikgIT09IG51bGwpOwoKCQkvL+WuouaIt+err+S4i+i9vemhte+8iGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9kb3dubG9hZCB8fCDml6Dop4ZodHRwczovL3Bhbi5iYWlkdS5jb20vZGlzay9hd2FyZO+8iQoJCXZhciBmaW5kX2Rvd25sb2FkID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNsb2dvLW1haW4iKSAhPT0gbnVsbCk7CgoJCS8v54mI5pys5pu05paw6aG1IHwg5pyN5Yqh5Y2P6K6u77yIaHR0cHM6Ly9wYW4uYmFpZHUuY29tL2Rpc2svdmVyc2lvbi8gfHwgaHR0cHM6Ly9wYW4uYmFpZHUuY29tL2Rpc2svZHV0eS8gfHwgaHR0cHM6Ly95dW4uYmFpZHUuY29tL2Rpc2svYXV0b2R1dHkgfHwgaHR0cHM6Ly9wYW4uYmFpZHUuY29tL2Rpc2svcHJvdG9jb2wg562J77yJCgkJdmFyIGZpbmRfdmVyc2lvbiA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaGVscC1hbGwiKSAhPT0gbnVsbCB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIubWFpbi1pIikgIT09IG51bGwpOwoKCQkvL+aUr+S7mOS4reW/g+mhte+8iGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9idXkvY2hlY2tvdXRjb3VudGVy77yJCgkJdmFyIGZpbmRfY2hlY2tvdXQgPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmNhc2hpZXItcGFnZS1oZWFkZXIiKSAhPT0gbnVsbCk7CgoJCS8v5YaF5a655ZWG5Z+O77yIaHR0cHM6Ly9wYW4uYmFpZHUuY29tL21hbGwvaG9tZT9mcm9tPXBhbmhvbWXvvIkKCQl2YXIgZmluZF9tYWxsID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi50cy1sb2dvX190ZXh0IikgIT09IG51bGwpOwoKCQkvL+S8muWRmOS4reW/g++8iGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9idXkvY2VudGVyIHx8IGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9idXkvY2FyZO+8iQoJCXZhciBmaW5kX2NlbnRlciA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaGVhZGVyLWNvbnRlbnQiKSAhPT0gbnVsbCk7CgoJCS8v6aG16Z2i5LiN5a2Y5ZyoCgkJdmFyIGZpbmRfZXJyb3IgPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmhkLW1haW4iKSAhPT0gbnVsbCk7CgoJCS8v5paH56ug6aG177yIaHR0cHM6Ly93ZW56aGFuZy5iYWlkdS5jb20vIHx8IGh0dHBzOi8vcGFuLmJhaWR1LmNvbS90b29scyDnrYnvvIkKCQl2YXIgZmluZF93ZW56aGFuZyA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuX19oZWFkZXIiKSAhPT0gbnVsbCk7CgoJCS8v5pyq55m75b2V6aG1CgkJdmFyIGZpbmRfbm90bG9naW4gPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2xvZ2luLWhlYWRlciIpICE9PSBudWxsKTsKCgkJLy/pmL/ph4zkuIvovb3pobUgaHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tLwoKCQkvL+WkseaViOmCgOivtwoJCXZhciBmaW5kX3N4ID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5zaGFyZS1pbnZpdGUtYm94IikgIT09IG51bGwpOwoKCQkvL+S6uuiEuOaQnOe0ou+8iGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9kaXNrL2ZhY2VzZWFyY2jvvIkKCQl2YXIgZmluZF9mYWNlID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5mYWNlLXNlYXJjaC1ib2R5IikgIT09IG51bGwpOwoJCQoJCS8v5LiA5Yi755u45YaMIGh0dHBzOi8vcGhvdG8uYmFpZHUuY29tLwoJCXZhciBmaW5kX3lrcCA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIueWstaGVhZGVyIikgIT09IG51bGwpOwoJCQoJCQoJCQoJCQoJCQoJCS8v57u85ZCICgkJdmFyIGZpbmRfb3IgPSAoZmluZF9ob21lIHx8IGZpbmRfbWFpbiB8fCBmaW5kX2luaXQgfHwgZmluZF9kb3dubG9hZCB8fCBmaW5kX3ZlcnNpb24gfHwgZmluZF9jaGVja291dCB8fCBmaW5kX21hbGwgfHwgZmluZF9jZW50ZXIgfHwgZmluZF9lcnJvciB8fCBmaW5kX3dlbnpoYW5nIHx8IGZpbmRfbm90bG9naW4gfHwgZmluZF9zeCB8fCBmaW5kX2ZhY2V8fCBmaW5kX3lrcCk7CgoJCS8v56Gu5a6a5pi+56S654K55piv5ZCm5a2Y5ZyoCgkJaWYoZmluZF9iYWlkdSkgewoJCQlpZihpbnMgJiYgZmluZF9vcikgewoJCQkJLy/lvqrnjq/ntKLlvJUKCQkJCXZhciBpLCBqOwoKCQkJCS8v5pCc57Si5byV5pOO572R5Z2A55uu5b2VCgkJCQl2YXIgZGlyYWxsID0gW107CgkJCQkvL+aQnOe0ouW8leaTjuaJgOacieebruW9lQoJCQkJdmFyIGRpcmFsbG90ID0gZGlyX2FsbF9vdCgpOwoJCQkJZm9yKGkgaW4gZGlyYWxsb3QpIHsKCQkJCQkvL+afkOS4quaQnOe0ouW8leaTjueahOWFqOmDqOWGheWuuQoJCQkJCXZhciBic2UgPSBkaXJhbGxvdFtpXTsKCQkJCQkvL+aQnOe0ouW8leaTjuWQjeensO+8iGxpa2XkupHnm5jmgbbprZTvvIkKCQkJCQl2YXIgYnNlbiA9IGJzZVsxXTsKCQkJCQkvL+aQnOe0ouW8leaTjuWMuuWIhuebruW9le+8iGxpa2UgYSxiLGPvvInmiYDljIXlkKvnmoTlhoXlrrnnmoTmlbDnu4QKCQkJCQl2YXIgYnNlb3QgPSBic2VbMl07CgkJCQkJZm9yKGogaW4gYnNlb3QpIHsKCQkJCQkJLy/mkJzntKLlvJXmk47nm67lvZXkuIvnmoTljLrliIblhbfkvZPnmoTmkJzntKLlvJXmk44KCQkJCQkJdmFyIGJzZWRpZiA9IGJzZW90W2pdOwoJCQkJCQkvL+aQnOe0ouW8leaTjuWQjeensOihpeWFhe+8iGxpa2UgYSxiLGPvvIkKCQkJCQkJdmFyIGJzZW5vID0gYnNlZGlmWzBdOwoJCQkJCQkvL+aQnOe0ouW8leaTjuWQjeensOWFqOmDqO+8iGxpa2Ug5LqR55uY5oG26a2UYSzkupHnm5jmgbbprZRiLOS6keebmOaBtumtlGPvvIkKCQkJCQkJdmFyIGJzZW5hbGwgPSBic2VuICsgYnNlbm87CgkJCQkJCS8v5pCc57Si5byV5pOO6ZyA6KaB5pu/5o2i5YWz6ZSu6K+N55qE572R5Z2ACgkJCQkJCXZhciBic2VzdiA9IGJzZWRpZlsxXTsKCQkJCQkJLy/mkJzntKLlvJXmk47nmoTmoLflvI8KCQkJCQkJdmFyIGJzZXN0eWxlID0gYnNlZGlmWzJdOwoJCQkJCQkvL+e7hOaIkOaVsOe7hAoJCQkJCQl2YXIgZGlyYWxsb3RpdGEgPSBbYnNlbmFsbCwgYnNlc3YsIGJzZXN0eWxlXTsKCQkJCQkJLy/nu4TmiJDkuoznu7TmlbDnu4QKCQkJCQkJZGlyYWxsLnB1c2goZGlyYWxsb3RpdGEpOwoJCQkJCX0KCQkJCX0KCgkJCQkvL+aWsOW7unNwYW7lrZDoioLngrkKCQkJCXZhciBuZXdfc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKCQkJCW5ld19zcGFuLmNsYXNzTGlzdC5hZGQoJ2JzZWdfcycpOwoJCQkJbmV3X3NwYW4uc2V0QXR0cmlidXRlKCJpZCIsICJpZF9uZXdfc3BhbiIpOwoKCQkJCS8vc3BhbuiKgueCueW7umRpduino+mHiuivtOaYjuWtkOiKgueCuQoJCQkJdmFyIG5ld19kaXZfaW5zdHJ1Y3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCQkJCW5ld19kaXZfaW5zdHJ1Y3QuY2xhc3NMaXN0LmFkZCgnYnNlZ19pbnN0cnVjdCcsICdic2VnX2N1cnNvcl9wb2ludGVyJywgJ2JzZWdfdXNlcl9zZWxlY3QnKTsKCQkJCW5ld19kaXZfaW5zdHJ1Y3Quc2V0QXR0cmlidXRlKCJpZCIsICJpbnN0cnVjdCIpOwoJCQkJbmV3X2Rpdl9pbnN0cnVjdC5pbm5lckhUTUwgPSAi6YeKIjsKCQkJCW5ld19zcGFuLmFwcGVuZENoaWxkKG5ld19kaXZfaW5zdHJ1Y3QpOwoKCQkJCS8vc3BhbuiKgueCueWGjeW7uuOAkOmAieaLqeahhuOAkeWtkOiKgueCuQoJCQkJdmFyIG5ld19zZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTsKCQkJCW5ld19zZWxlY3QuY2xhc3NMaXN0LmFkZCgnYnNlZ19zZWxlY3QnLCAnYnNlZ19jdXJzb3JfcG9pbnRlcicpOwoJCQkJbmV3X3NwYW4uYXBwZW5kQ2hpbGQobmV3X3NlbGVjdCk7CgoJCQkJLy/pgInmi6nmoYblrZDoioLngrnkuIvpnaLopoHlu7rnq4vlpKfph4/jgJDpgInpobnjgJHlrZDoioLngrkKCQkJCWZvcihpIGluIGRpcmFsbCkgewoJCQkJCXZhciB2ID0gZGlyYWxsW2ldWzBdOwoJCQkJCXZhciBpMSA9ICJuZXdfb3B0XyIgKyBpOwoJCQkJCXZhciBvYyA9IGRpcmFsbFtpXVsyXTsKCQkJCQluZXdfb3B0aW9uKHYsIGkxLCBuZXdfc2VsZWN0LCBvYyk7CgkJCQl9CgoJCQkJLy9zcGFu6IqC54K55YaN5bu644CQ6L6T5YWl5qGG44CR5a2Q6IqC54K5CgkJCQl2YXIgbmV3X2lucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsKCQkJCW5ld19pbnB1dC5jbGFzc0xpc3QuYWRkKCdic2VnX3Njb250Jyk7CgkJCQluZXdfaW5wdXQuc2V0QXR0cmlidXRlKCJpZCIsICJzY29udCIpOwoJCQkJbmV3X2lucHV0LnNldEF0dHJpYnV0ZSgicGxhY2Vob2xkZXIiLCAi6K+36L6T5YWl5YaF5a65W+ayueeMtOiEmuacrF0iKTsKCQkJCW5ld19pbnB1dC5zZXRBdHRyaWJ1dGUoImF1dG9jb21wbGV0ZSIsICJvZmYiKTsKCQkJCW5ld19zcGFuLmFwcGVuZENoaWxkKG5ld19pbnB1dCk7CgoJCQkJLy9zcGFu6IqC54K55YaN5bu644CQ5oyJ6ZKu44CR5a2Q6IqC54K5CgkJCQl2YXIgbmV3X2J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwoJCQkJbmV3X2J0bi5pbm5lckhUTUwgPSAi5pCc57SiIjsKCQkJCW5ld19idG4uY2xhc3NMaXN0LmFkZCgnYnNlZ19idG4nLCAnYnNlZ19idG5fYmdfbW91c2VsZWF2ZScsICdic2VnX3VzZXJfc2VsZWN0Jyk7CgkJCQluZXdfc3Bhbi5hcHBlbmRDaGlsZChuZXdfYnRuKTsKCQkJCW5ld19idG4ub25tb3VzZWVudGVyID0gZnVuY3Rpb24oKSB7CgkJCQkJbmV3X2J0bi5jbGFzc0xpc3QucmVtb3ZlKCdic2VnX2J0bl9iZ19tb3VzZWxlYXZlJyk7CgkJCQkJbmV3X2J0bi5jbGFzc0xpc3QuYWRkKCdic2VnX2J0bl9iZ19tb3VzZWVudGVyJyk7CgkJCQl9OwoJCQkJbmV3X2J0bi5vbm1vdXNlbGVhdmUgPSBmdW5jdGlvbigpIHsKCQkJCQluZXdfYnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2JzZWdfYnRuX2JnX21vdXNlZW50ZXInKTsKCQkJCQluZXdfYnRuLmNsYXNzTGlzdC5hZGQoJ2JzZWdfYnRuX2JnX21vdXNlbGVhdmUnKTsKCQkJCX07CgoJCQkJLy/mib7liLDjgJDniLbkurLoioLngrnjgJHjgJDvvIHvvIHvvIHms6jmhI/mr4/kuKrpobXpnaLniLboioLngrnkuI3lkIzvvIHvvIHvvIHjgJEKCQkJCWlmKGZpbmRfaG9tZSkgewoJCQkJCS8v6aaW6aG1CgkJCQkJdmFyIGZhdGhlcl9ob21lID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgidnlRSE55YiIpWzBdOwoJCQkJCWlmKGZhdGhlcl9ob21lKSB7CgkJCQkJCWZhdGhlcl9ob21lLmNsYXNzTGlzdC5hZGQoJ2JzZWdfZl9ob21lJyk7CgkJCQkJCS8v5Li76aG15riF6Zmk5bm/5ZGK77yM6IW+5L2N572uCgkJCQkJCXZhciBjTUVNRUYgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjTUVNRUYiKTsKCQkJCQkJaWYoY01FTUVGKSB7CgkJCQkJCQl2YXIgY01FTUVGX2xlbiA9IGNNRU1FRi5sZW5ndGg7CgkJCQkJCQlmb3IoaSA9IDA7IGkgPCBjTUVNRUZfbGVuOyBpKyspIHsKCQkJCQkJCQl2YXIgY01FTUVGaSA9IGNNRU1FRltpXTsKCQkJCQkJCQljTUVNRUZpLmNsYXNzTGlzdC5hZGQoJ2JzZWdfY01FTUVGJyk7CgkJCQkJCQkJLy9pZihpID09IDIpIHsKCQkJCQkJCQkJLy9jTUVNRUZpLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJCQkJCS8vfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCXZhciBnT0lielBiID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZ09JYnpQYiIpWzBdOwoJCQkJCQlnT0lielBiLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJCQkvL+aWsOW7unNwYW7lrZDoioLngrkKCQkJCQkJZmF0aGVyX2hvbWUuYXBwZW5kQ2hpbGQobmV3X3NwYW4pOwoJCQkJCQluZXdfaW5wdXQuZm9jdXMoKTsKCQkJCQkJLy/nn63kv6HjgIHpgJrorq/lvZXnmoTmkJzntKLmoYYKCQkJCQkJaWYod2xob3N0ID09ICJkdWFueGluLmJhaWR1LmNvbSIgfHwgd2xob3N0ID09ICJ0b25neHVubHUuYmFpZHUuY29tIikgewoJCQkJCQkJYmFyU2VhcmNoKDAsIG5ld19pbnB1dCk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9IGVsc2UgaWYoZmluZF9tYWluKSB7CgkJCQkJLy/mlrDkuLvpobUKCQkJCQl2YXIgZmF0aGVyX2ZhY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd3cC1kaXNrLWhlYWRlcl9fbGVmdCcpWzBdOwoJCQkJCWlmKGZhdGhlcl9mYWNlKSB7CgkJCQkJCWZhdGhlcl9mYWNlLmNsYXNzTGlzdC5hZGQoJ2JzZWdfZl9tYWluJyk7CgkJCQkJCS8v5paw5bu6c3BhbuWtkOiKgueCuQoJCQkJCQlmYXRoZXJfZmFjZS5hcHBlbmRDaGlsZChuZXdfc3Bhbik7CgkJCQkJCW5ld19pbnB1dC5mb2N1cygpOwoJCQkJCX0KCQkJCX1lbHNlIGlmKGZpbmRfaW5pdCkgewoJCQkJCS8v5a+G56CB5aGr5YaZ6aG1CgkJCQkJdmFyIGZhdGhlcl9pbml0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgicGlja3B3IilbMF07CgkJCQkJaWYoZmF0aGVyX2luaXQpIHsKCQkJCQkJZmF0aGVyX2luaXQuY2xhc3NMaXN0LmFkZCgnYnNlZ19mX2luaXQnKTsKCQkJCQkJLy/mlrDlu7pzcGFu5a2Q6IqC54K5CgkJCQkJCWZhdGhlcl9pbml0LmFwcGVuZENoaWxkKG5ld19zcGFuKTsKCQkJCQkJLy/muIXnkIbniYjpnaIKCQkJCQkJdmFyIHZlcmlmeV9pbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3ZlcmlmeS1pbnB1dCcpWzBdOwoJCQkJCQlpZih2ZXJpZnlfaW5wdXQpIHsKCQkJCQkJCXZlcmlmeV9pbnB1dC5jbGFzc0xpc3QuYWRkKCdic2VnX3ZlcmlmeV9pbnB1dCcpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfZG93bmxvYWQpIHsKCQkJCQkvL+WuouaIt+err+S4i+i9vemhtQoJCQkJCXZhciBmYXRoZXJfZG93bmxvYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJsb2dvLW1haW4iKVswXTsKCQkJCQlpZihmYXRoZXJfZG93bmxvYWQpIHsKCQkJCQkJZmF0aGVyX2Rvd25sb2FkLmNsYXNzTGlzdC5hZGQoJ2JzZWdfZl9kb3dubG9hZCcpOwoJCQkJCQkvL+aWsOW7unNwYW7lrZDoioLngrkKCQkJCQkJZmF0aGVyX2Rvd25sb2FkLmFwcGVuZENoaWxkKG5ld19zcGFuKTsKCQkJCQkJbmV3X2lucHV0LmZvY3VzKCk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfdmVyc2lvbikgewoJCQkJCS8v54mI5pys5pu05paw6aG1CgkJCQkJdmFyIGZhdGhlcl92ZXJzaW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiaGQtbWFpbiIpWzBdOwoJCQkJCWlmKGZhdGhlcl92ZXJzaW9uKSB7CgkJCQkJCWZhdGhlcl92ZXJzaW9uLmNsYXNzTGlzdC5hZGQoJ2JzZWdfZl92ZXJzaW9uJyk7CgkJCQkJCS8v5paw5bu6c3BhbuWtkOiKgueCuQoJCQkJCQlmYXRoZXJfdmVyc2lvbi5hcHBlbmRDaGlsZChuZXdfc3Bhbik7CgkJCQkJCW5ld19pbnB1dC5mb2N1cygpOwoJCQkJCX0KCQkJCX0gZWxzZSBpZihmaW5kX2NoZWNrb3V0KSB7CgkJCQkJLy/mlK/ku5jkuK3lv4PpobUKCQkJCQl2YXIgZmF0aGVyX2NoZWNrb3V0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiY2FzaGllci1wYWdlLWhlYWRlciIpWzBdOwoJCQkJCXZhciBicm9fY2hlY2tvdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJjYXNoaWVyLXBhZ2UtdWwiKVswXTsKCQkJCQlpZihmYXRoZXJfY2hlY2tvdXQgJiYgYnJvX2NoZWNrb3V0KSB7CgkJCQkJCWZhdGhlcl9jaGVja291dC5jbGFzc0xpc3QuYWRkKCdic2VnX2ZfY2hlY2tvdXQnKTsKCQkJCQkJLy/mlrDlu7pzcGFu5a2Q6IqC54K5CgkJCQkJCWZhdGhlcl9jaGVja291dC5pbnNlcnRCZWZvcmUobmV3X3NwYW4sIGJyb19jaGVja291dCk7CgkJCQkJCW5ld19pbnB1dC5mb2N1cygpOwoJCQkJCX0KCQkJCX0gZWxzZSBpZihmaW5kX21hbGwpIHsKCQkJCQkvL+WGheWuueWVhuWfjumhtQoJCQkJCXZhciBmYXRoZXJfbWFsbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInRzLWNhdGVnb3J5IilbMF07CgkJCQkJaWYoZmF0aGVyX21hbGwpIHsKCQkJCQkJZmF0aGVyX21hbGwuY2xhc3NMaXN0LmFkZCgnYnNlZ19mX21hbGwnKTsKCQkJCQkJLy/mlrDlu7pzcGFu5a2Q6IqC54K5CgkJCQkJCWZhdGhlcl9tYWxsLmFwcGVuZENoaWxkKG5ld19zcGFuKTsKCQkJCQkJLy/orr7nva7lhYTlvJ/oioLngrnmoLflvI8KCQkJCQkJdmFyIHRjZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInRzLWNhdGVnb3J5X19lbnRyeSIpOwoJCQkJCQlpZih0Y2UpIHsKCQkJCQkJCXZhciB0Y2VfbGVuID0gdGNlLmxlbmd0aDsKCQkJCQkJCWZvcihpID0gMDsgaSA8IHRjZV9sZW47IGkrKykgewoJCQkJCQkJCXRjZVtpXS5jbGFzc0xpc3QuYWRkKCdic2VnX3RjZScpOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfY2VudGVyKSB7CgkJCQkJLy/kvJrlkZjkuK3lv4PpobUKCQkJCQl2YXIgZmF0aGVyX2NlbnRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImhlYWRlci1jb250ZW50IilbMF07CgkJCQkJdmFyIGJyb19jZW50ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJhY3RpdmF0aW9uLWNvZGUiKVswXTsKCQkJCQlpZihmYXRoZXJfY2VudGVyICYmIGJyb19jZW50ZXIpIHsKCQkJCQkJZmF0aGVyX2NlbnRlci5jbGFzc0xpc3QuYWRkKCdic2VnX2ZfY2VudGVyJywgJ2JzZWdfaGVhZGVyX2NvbnRlbnQnKTsKCQkJCQkJLy/liKDpmaRsb2fvvIzohb7lnLDmlrkKCQkJCQkJdmFyIGxtbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImxvZ28tbWFpbi1saW5rIilbMF07CgkJCQkJCWlmKGxtbCkgewoJCQkJCQkJbG1sLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJCQl9CgkJCQkJCS8v6K6+572u5L6E6IqC54K55qC35byPCgkJCQkJCXZhciBuYiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1idXR0b24iKTsKCQkJCQkJaWYobmIpIHsKCQkJCQkJCXZhciBuYl9sZW4gPSBuYi5sZW5ndGg7CgkJCQkJCQlmb3IoaSA9IDA7IGkgPCBuYl9sZW47IGkrKykgewoJCQkJCQkJCW5iW2ldLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbmF2X2J1dHRvbicpOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCXZhciBmbmJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZmlyc3QtbmF2LWJ1dHRvbi1zdWIiKVswXTsKCQkJCQkJaWYoZm5icykgewoJCQkJCQkJZm5icy5jbGFzc0xpc3QuYWRkKCdic2VnX2ZpcnN0X25hdl9idXR0b25fc3ViJyk7CgkJCQkJCX0KCQkJCQkJLy/mlrDlu7pzcGFu5a2Q6IqC54K5CgkJCQkJCWZhdGhlcl9jZW50ZXIuaW5zZXJ0QmVmb3JlKG5ld19zcGFuLCBicm9fY2VudGVyKTsKCQkJCQkJbmV3X2lucHV0LmZvY3VzKCk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfZXJyb3IpIHsKCQkJCQkvL+mhtemdouS4jeWtmOWcqAoJCQkJCXZhciBmYXRoZXJfZXJyb3IgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJoZC1tYWluIilbMF07CgkJCQkJdmFyIGJyb19lcnJvciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImluZm8iKVswXTsKCQkJCQlpZihmYXRoZXJfZXJyb3IgJiYgYnJvX2Vycm9yKSB7CgkJCQkJCWZhdGhlcl9lcnJvci5jbGFzc0xpc3QuYWRkKCdic2VnX2ZfZXJyb3InKTsKCQkJCQkJLy/mlrDlu7pzcGFu5a2Q6IqC54K5CgkJCQkJCWZhdGhlcl9lcnJvci5pbnNlcnRCZWZvcmUobmV3X3NwYW4sIGJyb19lcnJvcik7CgkJCQkJCW5ld19pbnB1dC5mb2N1cygpOwoJCQkJCX0KCQkJCX0gZWxzZSBpZihmaW5kX3dlbnpoYW5nKSB7CgkJCQkJLy/mlofnq6DpobUKCQkJCQl2YXIgZmF0aGVyX3dlbnpoYW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiX19oZWFkZXIiKVswXTsKCQkJCQl2YXIgYnJvX3dlbnpoYW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiX190b29scyIpWzBdOwoJCQkJCWlmKGZhdGhlcl93ZW56aGFuZyAmJiBicm9fd2VuemhhbmcpIHsKCQkJCQkJZmF0aGVyX3dlbnpoYW5nLmNsYXNzTGlzdC5hZGQoJ2JzZWdfZl93ZW56aGFuZycpOwoJCQkJCQkvL+aWsOW7unNwYW7lrZDoioLngrkKCQkJCQkJZmF0aGVyX3dlbnpoYW5nLmluc2VydEJlZm9yZShuZXdfc3BhbiwgYnJvX3dlbnpoYW5nKTsKCQkJCQkJbmV3X2lucHV0LmZvY3VzKCk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfbm90bG9naW4pIHsKCQkJCQkvL+acqueZu+W9lemhtQoJCQkJCXZhciBmYXRoZXJfbm90bG9naW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibG9naW4taGVhZGVyIik7CgkJCQkJdmFyIGJyb19ub3Rsb2dpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImxvZ2luLXRpdGxlIilbMF07CgkJCQkJaWYoZmF0aGVyX25vdGxvZ2luICYmIGJyb19ub3Rsb2dpbikgewoJCQkJCQlmYXRoZXJfbm90bG9naW4uY2xhc3NMaXN0LmFkZCgnYnNlZ19mX25vdGxvZ2luJyk7CgkJCQkJCS8v5paw5bu6c3BhbuWtkOiKgueCuQoJCQkJCQlmYXRoZXJfbm90bG9naW4uaW5zZXJ0QmVmb3JlKG5ld19zcGFuLCBicm9fbm90bG9naW4pOwoJCQkJCQluZXdfaW5wdXQuZm9jdXMoKTsKCQkJCQkJLy/niYjpnaLmuIXnkIYKCQkJCQkJdmFyIGJfbm9fbG4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJiLW5vLWxuIik7CgkJCQkJCWlmKGJfbm9fbG4pIHsKCQkJCQkJCXZhciBiX25vX2xuX2xlbiA9IGJfbm9fbG4ubGVuZ3RoOwoJCQkJCQkJZm9yKGkgPSAwOyBpIDwgYl9ub19sbl9sZW47IGkrKykgewoJCQkJCQkJCWJfbm9fbG5baV0uY2xhc3NMaXN0LmFkZCgnYnNlZ19iX25vX2xuJyk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQl9IGVsc2UgaWYoZmluZF9zeCkgewoJCQkJCS8v5aSx5pWI6YKA6K+3CgkJCQkJdmFyIGZhdGhlcl9zeCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3NoYXJlLWludml0ZS1ib3gnKVswXTsKCQkJCQl2YXIgYnJvX3N4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaW52aXRlLWJnLWNvbnRhaW5lcicpWzBdOwoJCQkJCWlmKGZhdGhlcl9zeCAmJiBicm9fc3gpIHsKCQkJCQkJZmF0aGVyX3N4LmNsYXNzTGlzdC5hZGQoJ2JzZWdfZl9zeCcpOwoJCQkJCQkvL+aWsOW7unNwYW7lrZDoioLngrkKCQkJCQkJZmF0aGVyX3N4Lmluc2VydEJlZm9yZShuZXdfc3BhbiwgYnJvX3N4KTsKCQkJCQkJbmV3X2lucHV0LmZvY3VzKCk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfZmFjZSkgewoJCQkJCS8v5Lq66IS45pCc57SiCgkJCQkJdmFyIGZhdGhlcl9mYWNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbW9kdWxlLWZhY2VzZWFyY2gtaGVhZGVyJylbMF07CgkJCQkJaWYoZmF0aGVyX2ZhY2UpIHsKCQkJCQkJZmF0aGVyX2ZhY2UuY2xhc3NMaXN0LmFkZCgnYnNlZ19mX2ZhY2UnKTsKCQkJCQkJLy/mlrDlu7pzcGFu5a2Q6IqC54K5CgkJCQkJCWZhdGhlcl9mYWNlLmFwcGVuZENoaWxkKG5ld19zcGFuKTsKCQkJCQkJbmV3X2lucHV0LmZvY3VzKCk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmKGZpbmRfeWtwKSB7CgkJCQkJLy/kuIDliLvnm7jlhowKCQkJCQl2YXIgZmF0aGVyX2ZhY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd5ay1oZWFkZXJfX2xlZnQnKVswXTsKCQkJCQlpZihmYXRoZXJfZmFjZSkgewoJCQkJCQlmYXRoZXJfZmFjZS5jbGFzc0xpc3QuYWRkKCdic2VnX2ZfeWtwJyk7CgkJCQkJCS8v5paw5bu6c3BhbuWtkOiKgueCuQoJCQkJCQlmYXRoZXJfZmFjZS5hcHBlbmRDaGlsZChuZXdfc3Bhbik7CgkJCQkJCW5ld19pbnB1dC5mb2N1cygpOwoJCQkJCX0KCQkJCX0KCgkJCQkvL+aPkOekuuS6i+S7tgoJCQkJdmFyIG5ld19kaXZfYWxlcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCQkJCW5ld19kaXZfYWxlcnQuY2xhc3NMaXN0LmFkZCgnYnNlZ19hbGVydCcpOwoJCQkJbmV3X2Rpdl9hbGVydC5zZXRBdHRyaWJ1dGUoImlkIiwgImFsZXJ0Iik7CgkJCQluZXdfZGl2X2FsZXJ0LmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJYm9keS5hcHBlbmRDaGlsZChuZXdfZGl2X2FsZXJ0KTsKCgkJCQkvL+aPkOekuuaWh+WtlwoJCQkJdmFyIG5ld19kaXZfYWxlcnRfYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQkJbmV3X2Rpdl9hbGVydF9jLmNsYXNzTGlzdC5hZGQoJ2JzZWdfYWxlcnRfYycpOwoJCQkJbmV3X2Rpdl9hbGVydF9jLmlubmVySFRNTCA9ICI8YSBocmVmPSdodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMzc1MzM3JyB0YXJnZXQ9J19ibGFuaycgY2xhc3M9J2JzZWdfYV9hbGVydF9jJz5b5rK554y06ISa5pysXVvnmb7luqbnvZHnm5jotYTmupDmkJzntKLlvJXmk47ogZrlkIhdPC9hPuaPkOekuuaCqO+8mjxicj48c3BhbiBjbGFzcz0nYnNlZ19uX2FsZXJ0X2MnPuivt+WcqOi+k+WFpeahhui+k+WFpeimgeaQnOe0oueahOWGheWuueOAgjwvc3Bhbj4iOwoJCQkJbmV3X2Rpdl9hbGVydC5hcHBlbmRDaGlsZChuZXdfZGl2X2FsZXJ0X2MpOwoKCQkJCS8v56Gu5a6a5oyJ6ZKuCgkJCQl2YXIgbmV3X2FsZXJ0X2J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwoJCQkJbmV3X2FsZXJ0X2J0bi5jbGFzc0xpc3QuYWRkKCdic2VnX2FsZXJ0X2J0bicsICdic2VnX2N1cnNvcl9wb2ludGVyJyk7CgkJCQluZXdfYWxlcnRfYnRuLmlubmVySFRNTCA9ICLnoa7lrpoiOwoJCQkJbmV3X2Rpdl9hbGVydC5hcHBlbmRDaGlsZChuZXdfYWxlcnRfYnRuKTsKCgkJCQkvL+iOt+W+l+i+k+WFpeahhuaVsOaNrgoJCQkJdmFyIG5ld19pbnB1dF92YWw7CgkJCQkvL+iuoeeul+i+k+WFpeahhuaVsOaNrumVv+W6pgoJCQkJdmFyIG5ld19pbnB1dF92YWxfbGVuOwoJCQkJLy/pu5jorqTpvKDmoIfmoLflvI8KCQkJCW5ld19idG4uY2xhc3NMaXN0LmFkZCgnYnNlZ19jdXJzb3Jfbm90X2FsbG93ZWQnKTsKCQkJCS8v55uR5o6n6L6T5YWl5qGGCgkJCQluZXdfaW5wdXQub25pbnB1dCA9IGZ1bmN0aW9uKCkgewoJCQkJCW5ld19pbnB1dF92YWwgPSBuZXdfaW5wdXQudmFsdWU7CgkJCQkJbmV3X2lucHV0X3ZhbF9sZW4gPSBuZXdfaW5wdXRfdmFsLmxlbmd0aDsKCQkJCQkvL+WmguaenOi+k+WFpeahhuacieaVsOaNrgoJCQkJCWlmKG5ld19pbnB1dF92YWxfbGVuID4gMCkgewoJCQkJCQkvL+m8oOagh+agt+W8j+WPmOS4uuaJi+aMhwoJCQkJCQluZXdfYnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2JzZWdfY3Vyc29yX25vdF9hbGxvd2VkJyk7CgkJCQkJCW5ld19idG4uY2xhc3NMaXN0LmFkZCgnYnNlZ19jdXJzb3JfcG9pbnRlcicpOwoJCQkJCX0gZWxzZSB7CgkJCQkJCS8v6byg5qCH5qC35byP5Y+Y5Li656aB5q2iCgkJCQkJCW5ld19idG4uY2xhc3NMaXN0LnJlbW92ZSgnYnNlZ19jdXJzb3JfcG9pbnRlcicpOwoJCQkJCQluZXdfYnRuLmNsYXNzTGlzdC5hZGQoJ2JzZWdfY3Vyc29yX25vdF9hbGxvd2VkJyk7CgkJCQkJfQoJCQkJfQoKCQkJCS8v5pCc57Si5oyJ6ZKu54K55Ye75LqL5Lu2CgkJCQluZXdfYnRuLm9uY2xpY2sgPSBmdW5jdGlvbigpIHsKCQkJCQluZXdfaW5wdXRfdmFsID0gbmV3X2lucHV0LnZhbHVlOwoJCQkJCW5ld19pbnB1dF92YWxfbGVuID0gbmV3X2lucHV0X3ZhbC5sZW5ndGg7CgkJCQkJLy/lpoLmnpzovpPlhaXmoYbmnInmlbDmja4KCQkJCQlpZihuZXdfaW5wdXRfdmFsX2xlbiA+IDApIHsKCQkJCQkJLy/ojrflvpfpgInmi6nmoYbph4zooqvpgInkuK3nmoTpgInpobnntKLlvJUKCQkJCQkJdmFyIG9wdGlvbl9pbmRleCA9IG5ld19zZWxlY3Quc2VsZWN0ZWRJbmRleDsKCQkJCQkJLy/moLnmja5pZOWSjOe9keWdgOebruW9leiOt+W+l+e9keWdgAoJCQkJCQl2YXIgcGNzZWFyY2ggPSBkaXJhbGxbb3B0aW9uX2luZGV4XVsxXTsKCQkJCQkJLy/nlKjovpPlhaXmoYbnmoTmlbDmja7mm7/mjaLmjonnvZHlnYDlhoXnmoTmm7/mjaLnrKYKCQkJCQkJdmFyIGR0aSA9IHBjc2VhcmNoLnJlcGxhY2UoIiVzdiUiLCBuZXdfaW5wdXRfdmFsKTsKCQkJCQkJLy/nvZHlnYDot7PovawKCQkJCQkJd2luZG93Lm9wZW4oZHRpKTsKCQkJCQl9IGVsc2UgewoJCQkJCQkvL+WHuueOsOaPkOekugoJCQkJCQluZXdfZGl2X2FsZXJ0LmNsYXNzTGlzdC5yZW1vdmUoJ2JzZWdfbm9uZScpOwoJCQkJCQluZXdfZGl2X2FsZXJ0LmNsYXNzTGlzdC5hZGQoJ2JzZWdfYmxvY2snKTsKCQkJCQkJLy/lh6Dnp5LlkI7oh6rliqjmtojlpLEKCQkJCQkJc2V0VGltZW91dChmdW5jdGlvbigpIHsKCQkJCQkJCW5ld19kaXZfYWxlcnQuY2xhc3NMaXN0LnJlbW92ZSgnYnNlZ19ibG9jaycpOwoJCQkJCQkJbmV3X2Rpdl9hbGVydC5jbGFzc0xpc3QuYWRkKCdic2VnX25vbmUnKTsKCQkJCQkJfSwgMjEwMCk7CgkJCQkJCW5ld19pbnB1dC5mb2N1cygpOwoJCQkJCX0KCQkJCX0KCgkJCQkvL+ehruWumuaMiemSrueCueWHu+S6i+S7tgoJCQkJbmV3X2FsZXJ0X2J0bi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7CgkJCQkJbmV3X2Rpdl9hbGVydC5jbGFzc0xpc3QucmVtb3ZlKCdic2VnX2Jsb2NrJyk7CgkJCQkJbmV3X2Rpdl9hbGVydC5jbGFzc0xpc3QuYWRkKCdic2VnX25vbmUnKTsKCQkJCQluZXdfaW5wdXQuZm9jdXMoKTsKCQkJCX0KCgkJCQkvL+W7uueri+ino+mHiuivtOaYjuW8ueWHuumhtQoJCQkJdmFyIG5ld19kaXZfaW5fYWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CgkJCQluZXdfZGl2X2luX2FsbC5jbGFzc0xpc3QuYWRkKCdic2VnX2luX2FsbCcpOwoJCQkJbmV3X2Rpdl9pbl9hbGwuc2V0QXR0cmlidXRlKCJpZCIsICJpbl9hbGwiKTsKCQkJCW5ld19kaXZfaW5fYWxsLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJYm9keS5hcHBlbmRDaGlsZChuZXdfZGl2X2luX2FsbCk7CgoJCQkJLy/or7TmmI7kuabmoIfpopgKCQkJCXZhciBuZXdfZGl2X2luX3RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CgkJCQluZXdfZGl2X2luX3RpdGxlLmNsYXNzTGlzdC5hZGQoJ2JzZWdfaW5fdGl0bGUnKTsKCQkJCW5ld19kaXZfaW5fdGl0bGUuaW5uZXJIVE1MID0gIjxhIGhyZWY9J2h0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy8zNzUzMzcnIHRhcmdldD0nX2JsYW5rJyBjbGFzcz0nYnNlZ19hX2JsYW5rJz5b5rK554y06ISa5pysXVvnmb7luqbnvZHnm5jotYTmupBf5pCc57Si5byV5pOOX+iBmuWQiF08L2E+5L2/55So6K+05piO5LmmIgoJCQkJbmV3X2Rpdl9pbl9hbGwuYXBwZW5kQ2hpbGQobmV3X2Rpdl9pbl90aXRsZSk7CgoJCQkJLy/pmpDol4/or7TmmI7kuaYKCQkJCXh4bGFyKG5ld19kaXZfaW5fYWxsLCBuZXdfZGl2X2luX3RpdGxlKTsKCgkJCQkvL+ivtOaYjuS5puWGheWuuQoJCQkJdmFyIG5ld19kaXZfaW5fdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQkJbmV3X2Rpdl9pbl90ZXh0LmNsYXNzTGlzdC5hZGQoJ2JzZWdfaW5fdGV4dCcpOwoJCQkJdmFyIGluX3RleHQgPSBpblRleHQoKTsKCQkJCW5ld19kaXZfaW5fdGV4dC5pbm5lckhUTUwgPSBpbl90ZXh0OwoJCQkJbmV3X2Rpdl9pbl9hbGwuYXBwZW5kQ2hpbGQobmV3X2Rpdl9pbl90ZXh0KTsKCgkJCQkvL3NwYW7oioLngrnlho3lu7pkaXbmsYLotY/ngrnlh7vlrZDoioLngrkKCQkJCXZhciBuZXdfZGl2X3Jld2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQkJbmV3X2Rpdl9yZXdhcmQuY2xhc3NMaXN0LmFkZCgnYnNlZ19yZXdhcmQnLCAnYnNlZ19jdXJzb3JfcG9pbnRlcicsICdic2VnX3VzZXJfc2VsZWN0Jyk7CgkJCQluZXdfZGl2X3Jld2FyZC5zZXRBdHRyaWJ1dGUoImlkIiwgInJld2FyZCIpOwoJCQkJbmV3X2Rpdl9yZXdhcmQuaW5uZXJIVE1MID0gIuWKqSI7CgkJCQluZXdfc3Bhbi5hcHBlbmRDaGlsZChuZXdfZGl2X3Jld2FyZCk7CgoJCQkJLy/lu7pkaXbmlK/mjIHkvZzogIXkuoznu7TnoIHmlL7nva7lrZDoioLngrkKCQkJCXZhciBuZXdfZGl2X3FyX2FsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQkJbmV3X2Rpdl9xcl9hbGwuY2xhc3NMaXN0LmFkZCgnYnNlZ19xcl9hbGwnLCAnYnNlZ191c2VyX3NlbGVjdCcpOwoJCQkJbmV3X2Rpdl9xcl9hbGwuc2V0QXR0cmlidXRlKCJpZCIsICJxcl9hbGwiKTsKCQkJCW5ld19kaXZfcXJfYWxsLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJYm9keS5hcHBlbmRDaGlsZChuZXdfZGl2X3FyX2FsbCk7CgoJCQkJLy/mlK/mjIHkvZzogIXmoIfpopgKCQkJCXZhciBuZXdfZGl2X3FyX3RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CgkJCQluZXdfZGl2X3FyX3RpdGxlLmNsYXNzTGlzdC5hZGQoJ2JzZWdfcXJfdGl0bGUnKTsKCQkJCW5ld19kaXZfcXJfdGl0bGUuaW5uZXJIVE1MID0gIuaEn+iwouaCqOaUr+aMgTxhIGhyZWY9J2h0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy8zNzUzMzcnIHRhcmdldD0nX2JsYW5rJyBjbGFzcz0nYnNlZ19hX2JsYW5rJz4gW+ayueeMtOiEmuacrF0gW+eZvuW6pue9keebmOi1hOa6kF/mkJzntKLlvJXmk45f6IGa5ZCIXSA8L2E+55qE5byA5Y+R6ICFLOiwouiwoiIKCQkJCW5ld19kaXZfcXJfYWxsLmFwcGVuZENoaWxkKG5ld19kaXZfcXJfdGl0bGUpOwoKCQkJCS8v5YWz6Zet5oyJ6ZKuCgkJCQl4eGxhcihuZXdfZGl2X3FyX2FsbCwgbmV3X2Rpdl9xcl90aXRsZSk7CgoJCQkJLy/mlL7kuoznu7TnoIHnmoTniLboioLngrkKCQkJCXZhciBuZXdfZGl2X3FyX3RleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCQkJCW5ld19kaXZfcXJfdGV4dC5jbGFzc0xpc3QuYWRkKCdic2VnX3FyX3RleHQnKTsKCQkJCW5ld19kaXZfcXJfYWxsLmFwcGVuZENoaWxkKG5ld19kaXZfcXJfdGV4dCk7CgoJCQkJLy/kuoznu7TnoIEKCQkJCXZhciBxckFyciA9IHFyQWxsKCk7CgkJCQlmb3IoaSBpbiBxckFycikgewoJCQkJCXZhciBxckFycl9pID0gcXJBcnJbaV07CgkJCQkJdmFyIHFyQXJyX2lfMCA9IHFyQXJyX2lbMF07CgkJCQkJdmFyIHFyQXJyX2lfMSA9IHFyQXJyX2lbMV07CgkJCQkJcXJHZW5lcmF0ZShuZXdfZGl2X3FyX3RleHQsIHFyQXJyX2lfMCwgcXJBcnJfaV8xKTsKCQkJCX0KCgkJCQkvL+ivtOaYjuS5pueCueWHu+S6i+S7tgoJCQkJbmV3X2Rpdl9pbnN0cnVjdC5vbmNsaWNrID0gZnVuY3Rpb24oKSB7CgkJCQkJdmFyIG5kaW5fZGlzcGxheSA9IG5ld19kaXZfaW5fYWxsLmNsYXNzTGlzdC5jb250YWlucygnYnNlZ19ub25lJyk7CgkJCQkJaWYobmRpbl9kaXNwbGF5KSB7CgkJCQkJCW5ld19kaXZfaW5fYWxsLmNsYXNzTGlzdC5yZW1vdmUoJ2JzZWdfbm9uZScpOwoJCQkJCQluZXdfZGl2X2luX2FsbC5jbGFzc0xpc3QuYWRkKCdic2VnX2Jsb2NrJyk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJbmV3X2Rpdl9pbl9hbGwuY2xhc3NMaXN0LnJlbW92ZSgnYnNlZ19ibG9jaycpOwoJCQkJCQluZXdfZGl2X2luX2FsbC5jbGFzc0xpc3QuYWRkKCdic2VnX25vbmUnKTsKCQkJCQl9CgkJCQl9CgoJCQkJLy/msYLotY/ngrnlh7vkuovku7YKCQkJCW5ld19kaXZfcmV3YXJkLm9uY2xpY2sgPSBmdW5jdGlvbigpIHsKCQkJCQl2YXIgbmRxcl9kaXNwbGF5ID0gbmV3X2Rpdl9xcl9hbGwuY2xhc3NMaXN0LmNvbnRhaW5zKCdic2VnX25vbmUnKTsKCQkJCQlpZihuZHFyX2Rpc3BsYXkpIHsKCQkJCQkJbmV3X2Rpdl9xcl9hbGwuY2xhc3NMaXN0LnJlbW92ZSgnYnNlZ19ub25lJyk7CgkJCQkJCW5ld19kaXZfcXJfYWxsLmNsYXNzTGlzdC5hZGQoJ2JzZWdfYmxvY2snKTsKCQkJCQl9IGVsc2UgewoJCQkJCQluZXdfZGl2X3FyX2FsbC5jbGFzc0xpc3QucmVtb3ZlKCdic2VnX2Jsb2NrJyk7CgkJCQkJCW5ld19kaXZfcXJfYWxsLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJCQkJCX0KCQkJCX0KCgkJCQkvL+ivtOaYjuS5puS4reeahOaUr+aMgeS9nOiAhQoJCQkJdmFyIHpjenogPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnemN6eicpOwoJCQkJemN6ei5vbmNsaWNrID0gZnVuY3Rpb24oKSB7CgkJCQkJdmFyIG5kcXJfZGlzcGxheSA9IG5ld19kaXZfcXJfYWxsLmNsYXNzTGlzdC5jb250YWlucygnYnNlZ19ub25lJyk7CgkJCQkJaWYobmRxcl9kaXNwbGF5KSB7CgkJCQkJCW5ld19kaXZfcXJfYWxsLmNsYXNzTGlzdC5yZW1vdmUoJ2JzZWdfbm9uZScpOwoJCQkJCQluZXdfZGl2X3FyX2FsbC5jbGFzc0xpc3QuYWRkKCdic2VnX2Jsb2NrJyk7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJdHRpbWUrKzsKCQkJCS8v5pi+56S654K55LiN5a2Y5Zyo77yM5LiA5q615pe26Ze05ZCO5YaN5qyh5omn6KGMCgkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewoJCQkJCWJzZWcodHRpbWUpOwoJCQkJfSwgMjUwKTsKCgkJCX0KCQl9Cgl9IGVsc2UgewoJCWNvbnNvbGUubG9nKCLohJrmnKzlvIDlj5HogIXov5jmnKrmtonlj4rmnKzpobXvvIzor7fmj5DnpLrlvIDlj5HogIXkv67mlLnohJrmnKzjgIJb5rK554y06ISa5pysXe+8iGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy8zNzUzMzfvvIkiKTsKCX0KfQoKLy/mlrDlu7pvcHRpb24KZnVuY3Rpb24gbmV3X29wdGlvbihpaCwgYWlkLCBucywgb2MpIHsKCXZhciBuZXdfb3B0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7CgluZXdfb3B0LmNsYXNzTGlzdC5hZGQoJ2JzZWdfb3B0aW9uJywgb2MsICdic2VnX2N1cnNvcl9wb2ludGVyJyk7CgluZXdfb3B0LmlubmVySFRNTCA9IGloOwoJbmV3X29wdC5zZXRBdHRyaWJ1dGUoImlkIiwgYWlkKTsKCW5zLmFwcGVuZENoaWxkKG5ld19vcHQpOwp9CgovL+efreS/oeOAgemAmuiur+W9leeahOaQnOe0ouahhgpmdW5jdGlvbiBiYXJTZWFyY2godDEsIG5pKSB7CglpZih0MSA8IDEwKSB7CgkJdmFyIGJhcl9zZWFyY2ggPSAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmJhci1zZWFyY2giKSAhPT0gbnVsbCk7CgkJaWYoYmFyX3NlYXJjaCkgewoJCQluaS5jbGFzc0xpc3QuYWRkKCdic2VnX25pJyk7CgkJfSBlbHNlIHsKCQkJdDErKzsKCQkJc2V0VGltZW91dChmdW5jdGlvbigpIHsKCQkJCWJhclNlYXJjaCh0MSwgbmkpOwoJCQl9LCA1MDApOwoJCX0KCX0KfQoKLy/lhbPpl63mjInpkq4KZnVuY3Rpb24geHgoZ2YsIGYsIGxhcikgewoJdmFyIG5ld19jbG9zZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJbmV3X2Nsb3NlLmNsYXNzTGlzdC5hZGQoJ2JzZWdfY2xvc2UnLCAnYnNlZ19jdXJzb3JfcG9pbnRlcicsIGxhcik7CgluZXdfY2xvc2UuaW5uZXJIVE1MID0gIsOXIjsKCWYuYXBwZW5kQ2hpbGQobmV3X2Nsb3NlKTsKCW5ld19jbG9zZS5vbmNsaWNrID0gZnVuY3Rpb24oKSB7CgkJZ2YuY2xhc3NMaXN0LnJlbW92ZSgnYnNlZ19ibG9jaycpOwoJCWdmLmNsYXNzTGlzdC5hZGQoJ2JzZWdfbm9uZScpOwoJfQp9CgovL+WFs+mXreaMiemSruW3puWPs+S4pOS4qgpmdW5jdGlvbiB4eGxhcihnZiwgZikgewoJeHgoZ2YsIGYsICJic2VnX2Zsb2F0X2xlZnQiKTsKCXh4KGdmLCBmLCAiYnNlZ19mbG9hdF9yaWdodCIpOwp9CgovL+aLvOaOpeivtOaYjuS5pgpmdW5jdGlvbiBpblRleHQoKSB7Cgl2YXIgaTsKCXZhciB0ZSA9ICcnOwoJdGUgKz0gJzxkaXYgaWQ9InpjenoiIGNsYXNzPSJic2VnX3pjenogYnNlZ19jdXJzb3JfcG9pbnRlciBic2VnX3VzZXJfc2VsZWN0Ij4nOwoJdGUgKz0gJ+aUr+aMgeW8gOWPkeiAhSc7Cgl0ZSArPSAnPC9kaXY+PGJyPjxwPic7Cgl0ZSArPSAn6ISa5pys5ZyoICc7Cgl2YXIgdXNlcl9zY3JpcHRzID0gWwoJCVsnaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM3NTMzNycsICdHcmVhc3kgRm9yaycsIF0sCgkJWydodHRwczovL2dpdGh1Yi5jb20vcXM5MzMxMy9CYWlkdXBhbi1TZWFyY2gtRW5naW5lLUdyb3VwL2Jsb2IvbWFzdGVyL2JzZWcudXNlci5qcycsICdnaXRodWInLCBdLAoJCVsnaHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvazFLRW4wS0poUzVlSE9FVm9DQUVaZycsICflvq7kv6HlhazkvJflj7cnLCBdLAoJCVsnaHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM2OTM1MzcxL2Fuc3dlci81NDc5MDU4MDknLCAn55+l5LmOJ10sCgkJWydodHRwczovL3RpZWJhLmJhaWR1LmNvbS9wLzU5NzQwMDYzMTMnLCAndGFtcGVybW9ua2V55ZCnJywgXSwKCQlbJ2h0dHBzOi8vdGllYmEuYmFpZHUuY29tL3AvNTk5MzQ3MjI3NycsICdjaHJvbWXlkKcnLCBdLAoJCVsnaHR0cHM6Ly90aWViYS5iYWlkdS5jb20vcC81OTkzNDc0NDg3JywgJ2ZpcmVmb3jlkKcnLCBdLAoJCVsnaHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81YzBmYzAxMWYyNjVkYTYxNWQ3MjdmMDAnLCAn5o6Y6YeRJywgXSwKCQlbJ2h0dHBzOi8vc2VnbWVudGZhdWx0LmNvbS9hLzExOTAwMDAwMTc1MDA4OTAnLCAnc2VnbWVudGZhdWx0JywgXSwKCQlbJ2h0dHBzOi8vd3d3LnYyZXguY29tL3QvNTI0NDE4JywgJ1YyRVgnLCBdLAoJCVsnaHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzIxOTcwNS9hcnRpY2xlL2RldGFpbHMvODQ4ODkyODknLCAnQ1NETicsIF0sCgkJWydodHRwczovL215Lm9zY2hpbmEubmV0L3UvMzQ5ODI1MC9ibG9nLzI5ODcwNDMnLCAn5byA5rqQ5Lit5Zu9JywgXSwKCQlbJ2h0dHBzOi8vd3d3LmNuYmxvZ3MuY29tL3RzenljL3AvMTAxMDU3NDYuaHRtbCcsICfljZrlrqLlm60nLCBdLAoJCVsnaHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS8xMTI1NDE1NC8yMzI4MDAxJywgJzUxQ1RPJywgXSwKCQlbJ2h0dHBzOi8vd3d3LmRvdWJhbi5jb20vZ3JvdXAvdG9waWMvMTMxMzI1ODQxLycsICfosYbnk6MnLCBdLAoJXTsKCXZhciB1c2xmID0gdXNlcl9zY3JpcHRzLmxlbmd0aCAtIDE7Cglmb3IoaSBpbiB1c2VyX3NjcmlwdHMpIHsKCQl2YXIgdWMgPSB1c2VyX3NjcmlwdHNbaV07CgkJdmFyIHVjMCA9IHVjWzBdOwoJCXZhciB1YzEgPSB1Y1sxXTsKCQl0ZSArPSAnPGEgaHJlZj0iJzsKCQl0ZSArPSB1YzA7CgkJdGUgKz0gJyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJic2VnX2FfYmxhbmsiPic7CgkJdGUgKz0gdWMxOwoJCXRlICs9ICc8L2E+JzsKCQlpZihpIDwgdXNsZikgewoJCQl0ZSArPSAn44CBJzsKCQl9Cgl9Cgl0ZSArPSAnIOWIhuS6q+OAgic7Cgl0ZSArPSAnPC9wPjxicj48cD4nOwoJdGUgKz0gJzxiIGNsYXNzPSJic2VnX2xvb2tvdXQiPuazqOaEj++8muivpeiEmuacrOWPr+iDveS8mumikee5geabtOaWsOOAgjwvYj7nlLHkuo7ov5nmmK/ohJrmnKzvvIzmlbDmja7lubbpnZ7lrZjlnKjmn5DmnI3liqHlmajnmoTmlbDmja7lupPph4zvvIzogIzmmK/nm7TmjqXlhpnmrbvlnKjohJrmnKzph4zvvIzmlbDmja7mm7TmlrDljbPohJrmnKzmm7TmlrDjgILov5nkupvnmb7luqbnvZHnm5jmkJzntKLlvJXmk47nvZHnq5nnmoTop4TliJnmlbDmja7mmK/kvJrlj5HnlJ/mlLnlj5jnmoTvvIzlvIDlj5HogIXkvJrms6jmhI/nvZHnq5nnmoTop4TliJnlj5jljJblubbmm7TmlrDohJrmnKzjgIInOwoJdGUgKz0gJzwvcD48YnI+PHA+JzsKCXRlICs9ICc8YiBjbGFzcz0iYnNlZ19sb29rb3V0Ij7ms6jmhI/vvIHov5nkupvmkJzntKLnvZHpobXkuIrpmr7lhY3mnInlub/lkYrvvIzmjqjojZDkvb/nlKg8YSBocmVmPSJodHRwczovL3d3dy5hZHRjaHJvbWUuY29tL2hlbHAvaW5kZXguaHRtbCIgdGFyZ2V0PV9ibGFuayIgY2xhc3M9ImJzZWdfYV9ibGFuayI+5bm/5ZGK57uI57uT6ICFPC9hPuetieaJqeWxleWxj+iUveW5v+WRiuOAgjwvYj4nOwoJdGUgKz0gJzwvcD48YnI+PHA+JzsKCXRlICs9ICfkuIvpnaLliJfkuL7ohJrmnKzkuK3lt7LogZrlkIjnmoTnmb7luqbnvZHnm5jotYTmupBf5pCc57Si5byV5pOO77yaJzsKCXRlICs9ICc8YnI+JzsKCXZhciB0ZWEgPSBkaXJfYWxsX290KCk7Cglmb3IoaSBpbiB0ZWEpIHsKCQl2YXIgdGVhYSA9IHRlYVtpXTsKCQl2YXIgdGVhYTAgPSB0ZWFhWzBdOwoJCXZhciB0ZWFhMSA9IHRlYWFbMV07CgkJdmFyIGExID0gcGFyc2VJbnQoaSkgKyAxOwoJCWExID0gKGExIDwgMTApID8gKCcwJyArIGExKSA6IGExOwoJCWExID0gKGExIDwgMTAwKSA/ICgnMCcgKyBhMSkgOiBhMTsKCQl0ZSArPSAnPGRpdiBjbGFzcz0iYnNlZ19ic2UiPic7CgkJdGUgKz0gJzxkaXYgY2xhc3M9ImJzZWdfYnNlX2kiPic7CgkJdGUgKz0gYTE7CgkJdGUgKz0gJzwvZGl2Pic7CgkJdGUgKz0gJzxhIGhyZWY9Iic7CgkJdGUgKz0gdGVhYTA7CgkJdGUgKz0gJyIgdGFyZ2V0PV9ibGFuayIgY2xhc3M9ImJzZWdfYV9ibGFuayI+JzsKCQl0ZSArPSAnWyc7CgkJdGUgKz0gdGVhYTE7CgkJdGUgKz0gJ10gJzsKCQl0ZSArPSAnPC9hPic7CgkJdGUgKz0gJzwvZGl2PicKCX0KCXRlICs9ICc8L3A+PGJyPjxwPic7Cgl0ZSArPSAn5pCc57Si5byV5pOO55qE5o6S5bqP5p2D6YeN5Li677yaJzsKCXZhciB3cyA9IFsKCQlbJ+e9keermeW/hemhu+iDveiuv+mXru+8jOS4jeiDveiuv+mXrueahOe9keermeinguWvn+S4gOauteaXtumXtOWQjuWIoOmZpOOAgiddLAoJCVsn572R56uZ6K6/6Zeu6KaB56iz5a6a77yM572R56uZ6K6/6Zeu56iz5a6a55qE6Z2g5YmN44CCJ10sCgkJWyfmkJzntKLlvJXmk47mmK/lkKbmlLbotLnvvIzlhY3otLnnmoTmkJzntKLlvJXmk47pnaDliY3jgIInXSwKCQlbJ+aQnOe0ouW8leaTjuaYr+WQpuS4k+mXqOaQnOe0oueZvuW6pue9keebmOi1hOa6kO+8jOS4k+mXqOaQnOe0oueZvuW6pue9keebmOi1hOa6kOeahOmdoOWJjeOAgiddLAoJCVsn572R56uZ5pyN5Yqh5Zmo55qE5L2N572u77yM5pyN5Yqh5Zmo5Zyo5aKD5YaF55qE6Z2g5YmN44CCJ10sCgkJWyfmkJzntKLnu5PmnpznmoTmlbDph4/vvIzmlbDph4/lpJrnmoTpnaDliY3jgIInXSwKCQlbJ+aQnOe0oue7k+aenOeahOi0qOmHj++8jOWkseaViOmTvuaOpeWwkeeahOmdoOWJjeOAgiddLAoJCVsn5pCc57Si57uT5p6c5piv5ZCm5Y+K5pe25pu05paw77yM5Y+K5pe25pu05paw55qE6Z2g5YmN44CCJ10sCgkJWyfnvZHnq5nor7fmsYLph4fnlKjnmoTlrZfnrKbnvJbnoIHvvIzlt7Lnn6XnvJbnoIHnmoTkv53nlZnvvIzmnKrnn6XnvJbnoIHnmoTliKDpmaTjgIInXSwKCQlbJ+W3suefpeWtl+espue8lueggeeahOaOkuW6j++8jOS7juWJjeW+gOWQjuS+neasoeaYr+WNleWxgnVybOe8lueggeOAgeWPjOWxgnVybOe8lueggeOAgWdia+e8lueggeOAgUVzY2FwZee8lueggeOAgUJhc2U2NOe8lueggeOAgVVuaWNvZGXnvJbnoIHjgIInXSwKCQlbJ+e9keermemHh+eUqOeahEhUVFDor7fmsYLmlrnms5XvvIzph4fnlKhnZXTmlrnms5XnmoTmlLblvZXjgIInXSwKCQlbJ+aYr+WQpuacieWKoOWvhuWIhuS6q+e7k+aenO+8jOacieWKoOWvhuWIhuS6q+e7k+aenOeahOmdoOWJjeOAgiddLAoJCVsn5Zyo5bey6YeH55So5bm/5ZGK5bGP6JS95o+S5Lu255qE5oOF5Ya15LiL77yM5L6d54S25pyJ5bm/5ZGK55qE6Z2g5ZCO44CCJ10sCgkJWyfmmK/lkKbmnInoh6rliqjloavliqDlr4bliIbkuqvlr4bnoIHnmoTmj5Lku7bvvIzmnInmj5Lku7bnmoTpnaDliY3jgIInXSwKCQlbJ+e9keermeS9v+eUqEhUVFBT5Y2P6K6u55qE6Z2g5YmN44CCJ10sCgldOwoJZm9yKGkgaW4gd3MpIHsKCQl0ZSArPSAiPC9wPjxwPiI7CgkJdmFyIHdzaSA9IHdzW2ldOwoJCXZhciBhMiA9IHBhcnNlSW50KGkpICsgMTsKCQlhMiA9IChhMiA8IDEwKSA/ICgnMCcgKyBhMikgOiBhMjsKCQl0ZSArPSBhMjsKCQl0ZSArPSAi77yaIjsKCQl0ZSArPSB3c2k7Cgl9Cgl0ZSArPSAnPC9wPjxicj48cD4nOwoJdGUgKz0gJ+ivtOaYjuS5pui/mOWcqOi/m+S4gOatpeWujOWWhOS4reOAgic7Cgl0ZSArPSAnPC9wPjxicj48cD4nOwoJdGUgKz0gJ+i/mOWPr+S7peWwneivleW8gOWPkeiAheWFtuS7luiEmuacrO+8mic7Cgl0ZSArPSAnPC9wPic7Cgl2YXIgb3RoZXJfc2NyaXB0cyA9IFsKCQlbJ2h0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy8zOTk3MScsICflkIzkuIDor43mnaHlnKjnmb7luqbnmb7np5Hnu7Tln7rnmb7np5HnrYnnvZHnu5znmb7np5HkuK3kupLnm7jot7PovawnLCBdLAoJCVsnaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM3NTgzOCcsICdHcmVhc3kgRm9yayDnroDkvZPmsYnlrZfpobXpnaLmmL7npLrml6XlnYflronoo4Xph48nLCBdLAoJCVsnaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1DTi9zY3JpcHRzLzM3NTc5OScsICflhajnvZHnpoHnlKhpbnB1dOiHquWKqOWujOaIkCcsIF0sCgldOwoJZm9yKGkgaW4gb3RoZXJfc2NyaXB0cykgewoJCXZhciBvc2IgPSBvdGhlcl9zY3JpcHRzW2ldOwoJCXZhciBvc2IwID0gb3NiWzBdOwoJCXZhciBvc2IxID0gb3NiWzFdOwoJCXRlICs9ICc8cD48YSBocmVmPSInOwoJCXRlICs9IG9zYjA7CgkJdGUgKz0gJyIgdGFyZ2V0PV9ibGFuayIgY2xhc3M9ImJzZWdfYV9ibGFuayI+JzsKCQl0ZSArPSAnWyc7CgkJdGUgKz0gb3NiMTsKCQl0ZSArPSAnXSAnOwoJCXRlICs9ICc8L2E+PC9wPic7Cgl9CglyZXR1cm4gdGU7Cn0KCi8v5LqM57u056CB55Sf5oiQCmZ1bmN0aW9uIHFyR2VuZXJhdGUoZiwgcXJtLCBjaWgpIHsKCS8v5YyF5ZCr5LqM57u056CB5ZKM6Kej6YeK55qEZGl2Cgl2YXIgZGl2X3FyX2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCWRpdl9xcl9jLmNsYXNzTGlzdC5hZGQoJ2JzZWdfcXJfYycpOwoJZi5hcHBlbmRDaGlsZChkaXZfcXJfYyk7CgkvL+S6jOe7tOeggeWbvueJhwoJdmFyIGltZ19xciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpOwoJaW1nX3FyLmNsYXNzTGlzdC5hZGQoJ2JzZWdfaW1nX3FyJyk7Cgl2YXIgYmFzZTY0X3FyID0gcXJtOwoJaW1nX3FyLnNldEF0dHJpYnV0ZSgnc3JjJywgYmFzZTY0X3FyKTsKCWRpdl9xcl9jLmFwcGVuZENoaWxkKGltZ19xcik7CgkvL+S6jOe7tOeggQoJdmFyIGRpdl9jID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CglkaXZfYy5jbGFzc0xpc3QuYWRkKCdic2VnX2NpaCcpOwoJZGl2X2MuaW5uZXJIVE1MID0gY2loOwoJZGl2X3FyX2MuYXBwZW5kQ2hpbGQoZGl2X2MpOwp9CgovL+aQnOe0ouW8leaTjuebruW9lQpmdW5jdGlvbiBkaXJfYWxsX290KCkgewoJdmFyIHRlYSA9IFsKCQlbImh0dHBzOi8vd3d3Lnl1YmFpcGFuLmNvbS8iLCAi546J55m955uYIiwgWwoJCQlbIiIsICJodHRwczovL3d3dy55dWJhaXBhbi5jb20vIy9tYWluL3NlYXJjaD9rZXl3b3JkPSVzdiUiLCAiYnNlZ19vcHRpb25fMSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LmRhc2hlbmdwYW4uY29tLyIsICLlpKflnKPnm5giLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LmRhc2hlbmdwYW4uY29tL3NlYXJjaD9rZXl3b3JkPSVzdiUiLCAiYnNlZ19vcHRpb25fMSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LmZlaWZlaXBhbi5jb20vIiwgIumjnumjnuebmCIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuZmVpZmVpcGFuLmNvbS9zZWFyY2g/a2V5d29yZD0lc3YlIiwgImJzZWdfb3B0aW9uXzEiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3d3dy5iYWltYXBhbi5jb20vIiwgIueZvemprOebmCIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuYmFpbWFwYW4uY29tLy9zZWFyY2g/a2V5d29yZD0lc3YlIiwgImJzZWdfb3B0aW9uXzEiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3d3dy5mZWl6aHVwYW4uY29tLyIsICLpo57njKrnm5giLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LmZlaXpodXBhbi5jb20vc2VhcmNoP2tleXdvcmQ9JXN2JSIsICJic2VnX29wdGlvbl8xIiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cubHVvbWFwYW4uY29tLyIsICLnvZfpqaznm5giLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3Lmx1b21hcGFuLmNvbS9zZWFyY2g/a2V5d29yZD0lc3YlIiwgImJzZWdfb3B0aW9uXzEiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3d3dy54aWFvbWFwYW4uY29tLyIsICLlsI/pqaznm5giLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LnhpYW9tYXBhbi5jb20vc2VhcmNoP2tleXdvcmQ9JXN2JSIsICJic2VnX29wdGlvbl8xIiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cuaWl6aGkuY24vIiwgIuavleaWuemTuiIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuaWl6aGkuY24vcmVzb3VyY2Uvc2VhcmNoLyVzdiUiLCAiYnNlZ19vcHRpb25fMSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vZGFsaXBhbi5jb20vIiwgIuWkp+WKm+ebmCIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuZGFsaXBhbi5jb20vc2VhcmNoP2tleXdvcmQ9JXN2JSIsICJic2VnX29wdGlvbl8xIiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cucGFub3RoZXIuY29tLyIsICLnm5jku5YiLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LnBhbm90aGVyLmNvbS9zZWFyY2g/cXVlcnk9JXN2JSIsICJic2VnX29wdGlvbl8xIiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cueGlhb3podWt1YWlwYW4uY29tLyIsICLlsI/njKrlnZfnm5giLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LnhpYW96aHVrdWFpcGFuLmNvbS9zL3NlYXJjaD9xPSVzdiUiLCAiYnNlZ19vcHRpb25fMSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vdWp1c28uY29tLyIsICLkvJjogZrmkJwiLCBbCgkJCVsiIiwgImh0dHBzOi8vdWp1c28uY29tLyMvbWFpbj9rdz0lc3YlIiwgImJzZWdfb3B0aW9uXzQiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3d3dy5hbGlwYW5zby5jb20iLCAi6Zi/6YeM55uY5pCcIiwgWwoJCQlbIiIsICJodHRwczovL3d3dy5hbGlwYW5zby5jb20vc2VhcmNoLmh0bWw/cGFnZT0xJmtleXdvcmQ9JXN2JSIsICJic2VnX29wdGlvbl80IiwgXSwKCQldLCBdLAoJCVsiaHR0cDovL3d3dy5wYW5tZW1lLmNvbS8iLCAi55uY5LmI5LmIIiwgWwoJCQlbIiIsICJodHRwOi8vd3d3LnBhbm1lbWUuY29tL3F1ZXJ5P2tleT0lc3YlIiwgImJzZWdfb3B0aW9uXzIiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LnhpYW9iYWlwYW4uY29tLyIsICLlsI/nmb3nm5giLCBbCgkJCVsiIiwgImh0dHA6Ly93d3cueGlhb2JhaXBhbi5jb20vbGlzdC0lc3YlLmh0bWwiLCAiYnNlZ19vcHRpb25fMiIsIF0sCgkJXSwgXSwKCQlbImh0dHA6Ly93d3cua2VuZ3NvLmNvbS8iLCAi5Z2R5pCc572RIiwgWwoJCQlbIiIsICJodHRwOi8vd3d3Lmtlbmdzby5jb20vcz93ZD0lc3YlIiwgImJzZWdfb3B0aW9uXzIiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LnJlcGFuc28uY29tIiwgIueDreebmOaQnCIsIFsKCQkJWyIiLCAiaHR0cDovL3d3dy5yZXBhbnNvLmNvbS9xP3dkPSVzdiUiLCAiYnNlZ19vcHRpb25fMiIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3Lmhhb2dvdy5jb20vIiwgIuWlveWOu+e9kSIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuaGFvZ293LmNvbS9zZWFyY2g/a2V5d29yZD0lc3YlIiwgImJzZWdfb3B0aW9uXzIiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LnZwYW5zb3UuY29tLyIsICJW55uY5pCcIiwgWwoJCQlbIiIsICJodHRwOi8vd3d3LnZwYW5zb3UuY29tL3F1ZXJ5P3dkPSVzdiUiLCAiYnNlZ19vcHRpb25fMiIsIF0sCgkJXSwgXSwKCQlbImh0dHA6Ly9haXpoYW9tdS5jb20vIiwgIuWIm+S4muaLmyIsIFsKCQkJWyIiLCAiaHR0cDovL2Fpemhhb211LmNvbS9zZWFyY2gva3clc3YlIiwgImJzZWdfb3B0aW9uXzIiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LnNvZHUxMjMuY29tLyIsICLmkJzluqYiLCBbCgkJCVsiIiwgImh0dHA6Ly93d3cuc29kdTEyMy5jb20vc29kdS9zby5waHA/cT0lc3YlIiwgImJzZWdfb3B0aW9uXzIiLCBdLAoJCV0sIF0sCgkJLy/ku6XkuIvnmoTmm7TmlrDmhaIKCQlbImh0dHA6Ly93d3cucGFuc291LmNvbS8iLCAi55uY5pCcIiwgWwoJCQlbIiIsICJodHRwOi8vd3d3LnBhbnNvdS5jb20vP3E9JXN2JSIsICJic2VnX29wdGlvbl8zIiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cuZmFzdHNvc28uY24vIiwgImZhc3Rzb3NvIiwgWwoJCQlbIiIsICJodHRwczovL3d3dy5mYXN0c29zby5jbi9zZWFyY2g/az0lc3YlIiwgImJzZWdfb3B0aW9uXzMiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LjUxc29wYW4uY24vIiwgIjUx5pCc55uYIiwgWwoJCQlbIiIsICJodHRwOi8vd3d3LjUxc29wYW4uY24vcz93ZD0lc3YlIiwgImJzZWdfb3B0aW9uXzMiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LmJhaWR1eXVuc291c291LmNvbS8iLCAi5Lik6bif5LuqIiwgWwoJCQlbIiIsICJodHRwOi8vd3d3LmJhaWR1eXVuc291c291LmNvbS9zZWFyY2g/a3c9JXN2JSIsICJic2VnX29wdGlvbl8zIiwgXSwKCQldLCBdLAoJCVsiaHR0cDovL3d3dy52cGFuc28uY29tLyIsICLlvq7nm5jmkJwiLCBbCgkJCVsiIiwgImh0dHA6Ly93d3cudnBhbnNvLmNvbS9zP3dkPSVzdiUiLCAiYnNlZ19vcHRpb25fMyIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3Lnh4aGgzNjAuY29tLyIsICLkupHmkJzlpKfluIgiLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3Lnh4aGgzNjAuY29tL3NlYXJjaD9xPSVzdiUiLCAiYnNlZ19vcHRpb25fMyIsIF0sCgkJXSwgXSwKCQlbImh0dHA6Ly93d3cuamlzb3VwYW4uY29tLyIsICLlj4rmkJznm5giLCBbCgkJCVsiIiwgImh0dHA6Ly93d3cuamlzb3VwYW4uY29tL3NlYXJjaC8lc3YlLmh0bWwiLCAiYnNlZ19vcHRpb25fMyIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LnNvc3VvcGFuLmNuLyIsICLmkJzntKLnm5giLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LnNvc3VvcGFuLmNuL3NlYXJjaD9xPSVzdiUiLCAiYnNlZ19vcHRpb25fMyIsIF0sCgkJXSwgXSwKCQlbImh0dHA6Ly93d3cueXVucHoubmV0L3dhbmdwYW4uaHRtbCIsICLkupHpk7rlrZAiLCBbCgkJCVsiIiwgImh0dHA6Ly93d3cueXVucHoubmV0L3dhbmdwYW4uaHRtbCIsICJic2VnX29wdGlvbl8zIiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cucGFuZGFkYS5uZXQvIiwgIuebmOWkp+WkpyIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cucGFuZGFkYS5uZXQvIiwgImJzZWdfb3B0aW9uXzMiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vY2hhd2FuZ3Bhbi5jb20vIiwgIuebmOaQnOWkp+W4iCIsIFsKCQkJWyIiLCAiaHR0cDovL2NoYXdhbmdwYW4uY29tL3BheW1lbnRMaXN0Lmh0bWw/ZmllbGQ9JXN2JSIsICJic2VnX29wdGlvbl8zIiwgXSwKCQldLCBdLAoJCVsiaHR0cDovL3d3dy5xaWFvbWkuY24vIiwgIuW3p+i/t+e9kSIsIFsKCQkJWyIiLCAiaHR0cDovL3d3dy5xaWFvbWkuY24vIiwgImJzZWdfb3B0aW9uXzMiLCBdLAoJCV0sIF0sCgkJLy/ku6XkuIvmmK/mkJzkuabnmoQKCQlbImh0dHA6Ly9pYm9va3Mub3JnLmNuLyIsICLor7vkuablsI/nq5kiLCBbCgkJCVsiIiwgImh0dHA6Ly9pYm9va3Mub3JnLmNuLz9zPeS4i+i9vSAlc3YlIiwgImJzZWdfb3B0aW9uXzkiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3NvYm9va3MuY2MvIiwgInNvYm9va3MiLCBbCgkJCVsiIiwgImh0dHBzOi8vc29ib29rcy5jYy9zZWFyY2gvJXN2JSIsICJic2VnX29wdGlvbl85IiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cueHNzb3Vzb3UuY29tLyIsICLlsI/or7TmkJzmkJwiLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3Lnhzc291c291LmNvbS9zLyVzdiUuaHRtbDovL25laWt1dy5jb20vP3M9JXN2JSIsICJic2VnX29wdGlvbl85IiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cuanVuZW5nZmFuLmNuL2JkIiwgIueCueeCueaWh+ahoyIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuanVuZW5nZmFuLmNuL2MvJXN2JSIsICJic2VnX29wdGlvbl85IiwgXSwKCQldLCBdLAoJCS8v5Lul5LiL5LiN5piv5LiT6Zeo55qE5pCc57Si5byV5pOOCgkJWyJodHRwczovL3d3dy5iYWlkdS5jb20vcz93ZD0ocGFufHl1bikuYmFpZHUuY29tJmN0PTEiLCAi55m+5bqm5pCc57SiIiwgWwoJCQlbIiIsICJodHRwczovL3d3dy5iYWlkdS5jb20vcz93ZD0lc3YlJTIwKHBhbnx5dW4pLmJhaWR1LmNvbSZjdD0xIiwgImJzZWdfb3B0aW9uXzUiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3d3dy5nb29nbGUuY29tLmhrL3NlYXJjaD9xPXBhbiUyMG9yJTIweXVuJTIwLmJhaWR1LmNvbSIsICLosLfmrYzmkJzntKIiLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20uaGsvc2VhcmNoP3E9JXN2JSUyMHBhbiUyMG9yJTIweXVuJTIwLmJhaWR1LmNvbSIsICJic2VnX29wdGlvbl81IiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cuc29nb3UuY29tL3dlYj9pZT11dGY4JnF1ZXJ5PXBhbi5iYWlkdS5jb20iLCAi5pCc54uX5pCc57SiIiwgWwoJCQlbIiIsICJodHRwczovL3d3dy5zb2dvdS5jb20vd2ViP2llPXV0ZjgmcXVlcnk9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vc28udG91dGlhby5jb20vc2VhcmNoP2tleXdvcmQ9cGFuLmJhaWR1LmNvbSIsICLlpLTmnaHmkJzntKIiLCBbCgkJCVsiIiwgImh0dHBzOi8vc28udG91dGlhby5jb20vc2VhcmNoP2tleXdvcmQ9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LnNvLmNvbS9zP3E9cGFuLmJhaWR1LmNvbSIsICIzNjDlpb3mkJwiLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LnNvLmNvbS9zP3E9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vY24uYmluZy5jb20vc2VhcmNoP3E9cGFuLmJhaWR1LmNvbSIsICLlv4XlupTmkJzntKIiLCBbCgkJCVsiIiwgImh0dHBzOi8vY24uYmluZy5jb20vc2VhcmNoP3E9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vbS5zbS5jbi9zP3E9cGFuLmJhaWR1LmNvbSIsICLnpZ7pqazmkJzntKIiLCBbCgkJCVsiIiwgImh0dHBzOi8vbS5zbS5jbi9zP3E9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHA6Ly93d3cuY2hpbmFzby5jb20vc2VhcmNoL3BhZ2VzZWFyY2guaHRtP3E9cGFuLmJhaWR1LmNvbSIsICLkuK3lm73mkJzntKIiLCBbCgkJCVsiIiwgImh0dHA6Ly93d3cuY2hpbmFzby5jb20vc2VhcmNoL3BhZ2VzZWFyY2guaHRtP3E9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vbWFnaS5jb20vc2VhcmNoP3E9cGFuLmJhaWR1LmNvbSIsICJNYWdp5pCc57SiIiwgWwoJCQlbIiIsICJodHRwczovL21hZ2kuY29tL3NlYXJjaD9xPSVzdiUlMjBwYW4uYmFpZHUuY29tIiwgImJzZWdfb3B0aW9uXzUiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LnNvdXN1b2JkLmNvbS8/cT1wYW4uYmFpZHUuY29tIiwgIuW/hei+vuaQnOe0oiIsIFsKCQkJWyIiLCAiaHR0cDovL3d3dy5zb3VzdW9iZC5jb20vP3E9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vbWlqaXNvdS5jb20vP2xhbmd1YWdlPXpoLUNOJnE9cGFuLmJhaWR1LmNvbSIsICLnp5jov7nmkJzntKIiLCBbCgkJCVsiIiwgImh0dHBzOi8vbWlqaXNvdS5jb20vP2xhbmd1YWdlPXpoLUNOJnE9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LmRhbWluZ3dlYi5jb20vcGFuLmJhaWR1LmNvbS5odG1sIiwgIuWkp+aYjue9kSIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cuZGFtaW5nd2ViLmNvbS8lc3YlJTIwcGFuLmJhaWR1LmNvbS5odG1sIiwgImJzZWdfb3B0aW9uXzUiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LmRnc28uY24vay9wYW4uYmFpZHUuY29tIiwgIueou+aQnCIsIFsKCQkJWyIiLCAiaHR0cDovL3d3dy5kZ3NvLmNuL2svJXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LmVjb3NpYS5vcmcvc2VhcmNoP3E9cGFuLmJhaWR1LmNvbSIsICJlY29zaWEiLCBbCgkJCVsiIiwgImh0dHBzOi8vd3d3LmVjb3NpYS5vcmcvc2VhcmNoP3E9JXN2JSUyMHBhbi5iYWlkdS5jb20iLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vZHVja2R1Y2tnby5jb20vP3E9cGFuLmJhaWR1LmNvbSZpYT13ZWIiLCAiZHVjayoyZ28iLCBbCgkJCVsiIiwgImh0dHBzOi8vZHVja2R1Y2tnby5jb20vP3E9JXN2JStwYW4uYmFpZHUuY29tJmlhPXdlYiIsICJic2VnX29wdGlvbl81IiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93d3cud2ViY3Jhd2xlci5jb20vc2VycD9xPXBhbi5iYWlkdS5jb20iLCAiY3Jhd2xlciIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cud2ViY3Jhd2xlci5jb20vc2VycD9xPSVzdiUlMjBwYW4uYmFpZHUuY29tIiwgImJzZWdfb3B0aW9uXzUiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3N3aXNzY293cy5jaC93ZWI/cXVlcnk9cGFuLmJhaWR1LmNvbSZyZWdpb249emgtQ04iLCAic3dpc3Njb3dzIiwgWwoJCQlbIiIsICJodHRwczovL3N3aXNzY293cy5jaC93ZWI/cXVlcnk9JXN2JSUyMHBhbi5iYWlkdS5jb20mcmVnaW9uPXpoLUNOIiwgImJzZWdfb3B0aW9uXzUiLCBdLAoJCV0sIF0sCgkJWyJodHRwczovL3N1Y2hlLndlYi5kZS93ZWIvcmVzdWx0P3E9cGFuLmJhaWR1LmNvbSIsICJ3ZWIuZGUiLCBbCgkJCVsiIiwgImh0dHBzOi8vc3VjaGUud2ViLmRlL3dlYi9yZXN1bHQ/cT0lc3YlJTIwcGFuLmJhaWR1LmNvbSIsICJic2VnX29wdGlvbl81IiwgXSwKCQldLCBdLAoJCVsiaHR0cHM6Ly93YW5ncGFuLnJlbnJlbnNvdXN1by5jb20vIiwgIuS8l+S6uuaQnOe9keebmCIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93YW5ncGFuLnJlbnJlbnNvdXN1by5jb20vamllZ3VvP3NhPee9keebmOaQnOe0oiZxPSVzdiUiLCAiYnNlZ19vcHRpb25fNSIsIF0sCgkJXSwgXSwKCQkvL+S7peS4i+eahOimgeaUtui0uQoJCVsiaHR0cHM6Ly93d3cubGFpc295aXhpYS5jb20vIiwgIuWOu+i9rOebmCIsIFsKCQkJWyIiLCAiaHR0cHM6Ly93d3cubGFpc295aXhpYS5jb20vcy9zZWFyY2g/cT0lc3YlIiwgImJzZWdfb3B0aW9uXzYiLCBdLAoJCV0sIF0sCgkJWyJodHRwOi8vd3d3LnpodXpodXBhbi5jb20vIiwgIueMqueMquebmCIsIFsKCQkJWyLmgLvnur8iLCAiaHR0cDovL3d3dy56aHV6aHVwYW4uY29tL3NlYXJjaD9zPTEwMCZxdWVyeT0lc3YlIiwgImJzZWdfb3B0aW9uXzYiLCBdLAoJCQlbIjEiLCAiaHR0cDovL3d3dy56aHV6aHVwYW4uY29tL3NlYXJjaD9zPTEmcXVlcnk9JXN2JSIsICJic2VnX29wdGlvbl82IiwgXSwKCQkJWyIyIiwgImh0dHA6Ly93d3cuemh1emh1cGFuLmNvbS9zZWFyY2g/cz0yJnF1ZXJ5PSVzdiUiLCAiYnNlZ19vcHRpb25fNiIsIF0sCgkJCVsiMyIsICJodHRwOi8vd3d3LnpodXpodXBhbi5jb20vc2VhcmNoP3M9MyZxdWVyeT0lc3YlIiwgImJzZWdfb3B0aW9uXzYiLCBdLAoJCQlbIjQiLCAiaHR0cDovL3d3dy56aHV6aHVwYW4uY29tL3NlYXJjaD9zPTQmcXVlcnk9JXN2JSIsICJic2VnX29wdGlvbl82IiwgXSwKCQkJWyI1IiwgImh0dHA6Ly93d3cuemh1emh1cGFuLmNvbS9zZWFyY2g/cz01JnF1ZXJ5PSVzdiUiLCAiYnNlZ19vcHRpb25fNiIsIF0sCgkJCVsiNiIsICJodHRwOi8vd3d3LnpodXpodXBhbi5jb20vc2VhcmNoP3M9NiZxdWVyeT0lc3YlIiwgImJzZWdfb3B0aW9uXzYiLCBdLAoJCQlbIjciLCAiaHR0cDovL3d3dy56aHV6aHVwYW4uY29tL3NlYXJjaD9zPTcmcXVlcnk9JXN2JSIsICJic2VnX29wdGlvbl82IiwgXSwKCQkJWyI4IiwgImh0dHA6Ly93d3cuemh1emh1cGFuLmNvbS9zZWFyY2g/cz04JnF1ZXJ5PSVzdiUiLCAiYnNlZ19vcHRpb25fNiIsIF0sCgkJXSwgXSwKCQlbImh0dHBzOi8vd3d3LnNveXVucGFuLmNvbS8iLCAi5pCc5LqR55uYIiwgWwoJCQlbIiIsICJodHRwczovL3d3dy5zb3l1bnBhbi5jb20vc2VhcmNoLyVzdiUtMC3lhajpg6gtMC5odG1sIiwgImJzZWdfb3B0aW9uXzYiLCBdLAoJCV0sIF0sCgkJLy/ku6XkuIvmmK/lhbbku5bnvZHnm5gKCV07CglyZXR1cm4gdGVhOwp9CgovL+S6jOe7tOeggQovL+aEn+iwoiDkuoznu7TnoIHop6PmnpDjgJBodHRwczovL2NsaS5pbS9kZXFyL+OAkQovL+aEn+iwoiDkuoznu7TnoIHnlJ/miJDjgJBodHRwczovL2NsaS5pbS/jgJEKLy/mhJ/osKIg5bqU55So5a6d5Zu+5qCH44CQaHR0cHM6Ly9zai5xcS5jb20vbXlhcHAv44CRCi8v5oSf6LCiIOi9rGJhc2U2NOOAkGh0dHA6Ly9pbWdiYXNlNjQuZHVvc2hpdG9uZy5jb20v44CRCmZ1bmN0aW9uIHFyQWxsKCkgewoJdmFyIGdnID0gIjxzcGFuIGNsYXNzPSdic2VnX2dnJz4mbmJzcDvlub/lkYombmJzcDs8L3NwYW4+Jm5ic3A7IjsKCS8v5pSv5LuY5a6dCgl2YXIgcXJBbGlwYXkgPSAiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFMUUFBQUMwQ0FJQUFBQ3lyNUZsQUFBTklrbEVRVlI0bk8yZFhXd2NWeFhIejVuWjNkbU5IY2VKazlaTjBpYUZ0bWxDbzM1Q0Fna1VLRlFCS1E4SUpBU3RTUGxxcFFJUGZXZ29TQWlKcDlDS0IxN1RCK0NGQnlTUUlLaXFXcUlLRVRkSmFRTlMwa3BBU0pNNkpJNWJ4M0hpai8yWW5jUERuWmxkajMxbmRqSXo2L1hrLzN0d3N2YWRlK2ZqN3pQbm5uUHVOWXNJQWJBWXhsS2ZBT2hkSUE2Z0JlSUFXaUFPb0tVUStNek1YUnM3NEFzSGhnNzNsQ1BQTTd6ejhNWnhpZFY1aW8zVFplRk5nT1VBV2lBT29BWGlBRm9nRHFBbDZKQUdTRGQrbXFKN0ZYbGlzY1lLOTRWamVjcWRORWhDaXAxSDNpSllEcUFGNGdCYUlBNmdCZUlBV2lJYzBnQ3h2THhNdzQ2Ulk4VnlLZ00vRFI4NjhzVEN4MXBDSHovdTBMQWNRQXZFQWJSQUhFQUx4QUcweEhOSU15V1d1eFRwUW9hN2dYR0RudUZqeFdxZjRwbGtEU3dIMEFKeEFDMFFCOUFDY1FBdFBlU1Fwa3VTbEgxY2toUis5cFFIR2dDV0EyaUJPSUFXaUFOb2dUaUFsbmdPYWFiZVU2eFlZVndmTUVrTU5OTjYxUUJ4NzNDbVR3U1dBMmlCT0lBV2lBTm9nVGlBRm9nRGFJbVlyWFJ6QzRCd0VpNDdTMUpVMGMyaEkrbm1FNEhsQUZvZ0RxQUY0Z0JhSUE2Z2hYdW5uaURUUXR3a08zRmx1a2F0ZCs3L1FtQTVnQmFJQTJpQk9JQVdpQU5vaWVlUUppeWRUVGRXR0Q1V0xETGRIemZ1NGJGSWNTeHNVZ3RpQUhFQUxSQUgwQUp4QUMzeFV2WUpYY2h1N29PUXhPOUw5N3JDRzZkTHV1RlhXQTZnQmVJQVdpQU9vQVhpQUZvaUlxVHBSaTJUQk93eTNTVWgwNWptRXRZRGhKOUpKTEFjUUF2RUFiUkFIRUFMeEFHMEJCM1Nia2IzVWl3YWpkeWtOc1V6V1VoMjl6RGQ2d29IS1hzUUE0Z0RhSUU0Z0JhSUEyaUpGeUZONkhsbDZxbWwxZk4xa0dURlZEaExXNGViMngyTWUza2wyWElobjY4VktDTVY4bVk1bGtRV2F0RGUyZWdtTGZKcE9lTFNMaW54V01MejZSRnlKWTVZVDdSZEFjenNmMlNQdU4zbVQwOUx1UVZEaWdYRzEzMFZUWkhKcWt6VzVHcGRxcmFVQ3p4UTR0VVdyeTZ6T1Y4ZkhiNDFsTTQ2UDlWMHl6dlNuVjNtemVjSXg3LytwdERwS2VmbHMvVmpZNDF6MTV3ck5YRkVSSWlaRE9aQml6ZXROSFlPRi9kc0x0Mnh5aWdZVEhIMGtSdHVGTXZoTnhDaU55N1pCMDlXajQvWkRVZUltSWlZeWYrNTM3TUlGUTNhTVZ4NGFudjVvemNYL1BFaS81aDViaXpIRFNFTzM1bVltSE1PdkRWMzZFemRFU0ZpWWlGaUZoRW1KbGEyd2JjUVFzSktPa1I3UDFSNjdzSEttakl2T25yZ3hDQ09GT2lPT0h4bG5CaTNuejB5YzM3YUlWRVBuc1R0UngzYjFxSDc0M2tUMUkzOXhndTcreDY0cWVCMzI3a1hFbktxeTBrY0tlNmRsVzVkYm9CWTRtRG12NTV2N0IrWm1hdzZSSzRNV0lnOGZZZ1FreEF6aWZzOTFjWjk2M2ltWmREaTUzZjFQYnl4U0tIaVdLb3NRZHpPSThuVlZEYUFtcDBxbTdGL1pHYXk1aEMzRElRb0phaVBMS0ptc3l6Q0pDeENJaVJFSWlUQ2JuZVROV2YveU15SmNkdnZ2L3NYMVUzeUxBN0Z4Snp6N0JIUFppakUrK3EvVWxyZkpTTG0rYThZOTE4bUlwcXN5Yk5IWmlibUhNcGpTRFJBenNVaFJBZmVuRHMvN2JnUFVvaDgyOEgrVjFsakdkL2FWdjd1UGVYSHRwVG5DY1p2MXZhdDg5UE9nYmZtWkg0WUxaZmtQTTd4eGlYNzBMdDFVcThBOWl5RjY0UXllVzdwMmdvL2MzK2xaTkFIYy9MYmYxVkptSmxGT1NSRVJNb2xJZThqSFRwVC8vSWRwUjAzRnlqWDhZOTQ0c2pVeHd3ZkszQnNKNEdOcHREQmsxVnYxa29rcnJzcExWWDR6Ny85UGNLdDdsbTFkcHVKSnpFUk9YaXkrdEJOL1NaSDF3Qkh4a1hDcnlLOGZYYnpDY3FyNVZEWGVYcktPVDZtbkVkaFVwYUFsQTUrK1hEZmltTHIxdlFWcUdnUUVhMnkrT0RuK3R1N3NoMzU2YkhaOFZtbmRldUVtUG40bUgxNnl0a3lhTUJ5TERQVTAzcjViTDJoZnRXbDNaRVFJam8xWVpjTWRvZ2NJUkVhcXZCOTZ3b21rKzNRdnllYmpqdFJFVWZJRnFvM2cvMkxTSVA0NWJQMUxmZVY4Nm9NeXFzNFJNUWhPamJXOEY4Szg1MU1ldkZVdGYyaDNqbG9mbjJMWlRMTk5PUVhKK2JjVHRwNmF6a292c3lFam8wMWZrQmxNNzl1Unc3Rm9SN1Y1Snh6N3BwRExKNGJPdjhyeTQ4ZXFtd2VNTlVoZmNYV2ErVlhuKzhYSVlkSWhLN1U1U2RIWitac0pwV1VJeTgyeGtSRTU2NDVrMVZaVytGY0tvTWl4WkZ1T084NkVpSWRkdDdlV0dVM0ptdHlwU2JVTnVWUTdieVFKLzN4VEwydnVIaWZENndyUEhOL21abmZ2R1RQMlc0YzNRdVR1bmFJU2E3VWFMSW1heXNoNTdVSXNUektoTjV1d2xCOURpMEhFVEh6VkUyYWpuaHhjRGRUb243NTFVMTU1N0x0UmpuSXpibjV5WlNITnhUVmZUdzhXaWN2VWR1YXc3ajVHSEdFcnRaYkpVSkxkSzBaa2s5eGlFaXQ2VTFHL1JlQ3VQcTRiYVg1bVZ1TDk2d3hCOHZHbkMzdlhYUGVuckRmbm1pT3pUcU5waFFOMnJPcFNFVFg2dkxxYUlPRTJKdm9NSG1CVXRmN29LcU5JTml5UXZrY2xzbk1KSzM2RENGbWsrbUpyZVdudGx2MUpsMlljVVRvcmtIejB4dllNcTFxazg1TU5WKy9hRS9XbkZ0WG1rUjBlTFIrL3Byakp1M254OVBkTEIxSnVjQUxjL1M1SVlmaVVLeXkyR0IyeEp0S0NESExvN2VWOW0yejloK1pQWHF4VVdzS0V4a0czejVnZkhKOThVc2Z0cmF1TVQ4eTVHZmthZVNpYlRMTk13MGk3VGwrZzNtZ3BHcUZjdmhPb1lRcjNpSzZUclo5UU1JeitXRE8yWHZvNnVYcXZHWXZQdEwvaDlPMWw4NDFxQzFuNHVkWVBuNUw0V2M3Vnlpem9mamZ0SE40dFA3cWU0MFQ0M2E3U29TSWhkWlUrTkRlZ2JXVllINHEzWnNXb0p1VnRybTFIS3ZMdkdtbGNibmFDbUNaVElNV2owNDcxSEpRM1ZvdlpWMDI5Qm5yS2dZUlRkV2MvaUtiQm0vb043Nnh0ZnpZM2RiNHJCd2VyZjlsdFBIUDkrM1podnRhMmJUU1dGM09wODFRNUZZY0p2UE80ZUkvM20vNmhWNU5vY3RWK2NRdHhaTVROclhOYjRWa29HUThmVy81OFMxV3llVC9UalcvOTlyMHVvcnh6VzNsWGVzTGxza204eTE5L1BqZDVhL2RaVjJhbGI5ZGFMeDB0bjVzek40NVhGUVY2Z2lDTFQvMmJDNjllS3BxQzNzNUZmbjk2ZHFCWFgxTTlPZDM2MWZySWtRREpmN1VodUsrcmRidEE0WVFqVnhvL1BqMTJZc3p6cG1yenB2ajAvY01tZnUybGo5N2E3RlNZQ1l5RFY3ZnoxKzl5eHBlWWJ3MVByMW5jMGtObEV0bFVJNTlEcFdWZmZMdzlNaEZtN3ljbTJuUXQ3ZVZ2Mzl2bVprbXFpSkNRMlV1RjlnUnVURGovUHFkMnUvK1U2dlpyVGlxbWdiZk9XanUyMnA5Y1hOcFJZR1l1ZW5JZHc1UE05SEJSeGJQeXViRzUwaFRISkdOayt3K0VEZTZxbWFZeHkvWlQ3d3k3YmhoTGpjZ3RubkErTUttMHZhMTVxQmxUTmZsM2F2Tm94ZnRvMk9OcWkxZWxJell5OGw0RVhQWnVOSjgvRzdySzNkWWY3OWtQLzNhOUc4ZTdkOHh2SGd4YVpMTERCRDNGeXlKRFl0ZGZiNU14ZUUzRUtJZmpzeis2VXhkbFJDTDM1VS9TM0ZiQjNNdnJqN2MvN3NaZjJaZWJURXo3VjVmL1BtdUZjWjFGUmlIWDJaa1Y5MFVSMjdMQk5uTGt6MzNZR1ZqditFR3dGbVZlSGwxUDY2Q1ZLR1hWKzZseklzL3dWWC9aN2RlYUxJbUt3cjgzSU1Wam0rbGx4MjVGWWZQVU1WNFlYZmZvTVd0WWordm5wekpLd0ZTN3h4eEs5SlZHOWZRS0FXSnE2aEJpMS9ZM1RkVU1TaS9mcWhQbnNYQjdDYlQ3MTluUHIrcmI3QnNlSFYvN1BvVXJKYTh1UjlkRStFZDdIL1R6YnN4RDVhTjUzZTExalhsbmtScjk4S0p0THJwTHM4S2FhbTZhcTE0YzM5QXdzS3U4K0Y2bmUzUmo1WVhRa0xFN1N2ZVlnVTJNdlhiTXAyODVGOGM3YlN2bFhWVDlGNU96WFZmVzZWQjdQa2liSGhyWlllOFNEbkVzY2p4UFN1T0RsT2p5bjlvVzJXdkl1aEViVUgwOW9sTWdXbkhjT0hKN2VXUDNWd3dPZ3VHTGp3VGlHTVJlazBjN2MvVmRtVEIvaHp1YThWZ1NySS9COFRSRWIwbWpvVTlNTE8vczg5VVRXcE5zVXhlWmMzYjJTZHUzZ1RpNklndWk2T1RFZjFqMnp2M1B5NWE4QmVyQ25EUjA4aVBPRElseVczcWtPdXpIN3Arc29oa0pIUzBVL1RUSXgvSGpUSmwxNkc3MTdrUGNIVkMzb0pnZnVBTEpDZHY0bEIwVXg4NTFtSnVYeXNCbHpQVC92TktvbmxYc0s5a2hTb3BUcFRpMGp0alJaNUpGK0xJUHZsOHJZQlVnRGlBRm9nRGFJRTRnSllNWnl0eFE3L3B1bG9wZW1xeGk3YTdHT0VPa0NUb2ZBUFZrSUxrUUJ4QUM4UUJ0RUFjUUV1YW05VEdqZTZGa3pBNG0yTElQTlBJYjNoWGtkZVZyZ2NhQUpZRGFJRTRnQmFJQTJpQk9JQ1dlQTVwdXNXeEtYYWVNR0FhVHNLRWZycGxEMGxxdkFQSFJqNHZXQTZnQmVJQVdpQU9vQVhpQUZwNmFHdm1URmVHQlVoM1BWV1NlNWd3UngrckJEVnU1N0FjUUF2RUFiUkFIRUFMeEFHMEJDT2szVnpJbFNUNzNFMC9PakpDbXAxWEdMY1VJZTVXSXVFOXczSUFMUkFIMEFKeEFDMFFCOUFDY1FBdGFmN1I0VWpTOWFYRGlWWEtFSDVzUWpMZGRDL0owQ2d3QnRjUHhBRzBRQnhBQzhRQnRLUzU0aTFBd3RLRVdJMlhkcWZmNUhzdmQzaHNKT2xlSml3SDBBSnhBQzBRQjlBQ2NRQXR2YnVEY2NLdENnSWtjZlF5amRXR040NDhtVmcvalRzV0xBZlFBbkVBTFJBSDBBSnhBQzI5NjVBR1NMZ0tMVW5VTXQwL1ZwZXdRcmliVzk3Q2NnQXRFQWZRQW5FQUxSQUgwSkxtbm1BSjZXWklORk9mTWNWVmczRzNsb2c4UEtRcnBPeEJEQ0FPb0FYaUFGb2dEcUFsd2lGZHdqK3RtK1NQRGNRbDA3VkRBYnE1bmlyaHpyNndIRUFMeEFHMFFCeEFDOFFCdFBUUUpyV2cxNERsQUZvZ0RxQUY0Z0JhSUE2Z0JlSUFXdjRQMzFKVkpock9oanNBQUFBQVNVVk9SSzVDWUlJPSI7CgkvL+W+ruS/oQoJdmFyIHFyV2VjaGF0ID0gImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBTFFBQUFDMENBSUFBQUN5cjVGbEFBQU52a2xFUVZSNG5PMmRYV3djVnhYSHo1bWR0WGNkZnlUcnhHMXdQcG8wU2dwRmFaRUtLbXBLeWtjamtFclZJcVVvaUNjRUtTcWlEKzBMb205SUZVaUlqNmNLSWtFUkZVSnRKVWpid0VPcUJxcEVGVlJRVlNTa0pIVmlPMDdhSnZIYThVZTg2OTNaT1R6Y21mRjY0ek8rdnJtelhvL1BUMHFzbmIxNzc1MjUvem4zekxrZmcwUUVnckFRem5KWFFHaGRSQndDaTRoRFlISHJQeUJpb29VMStEZjZ4ZW4vc0Q1bFF6SXIzbFhTbDZnQjR5dG1wVGl4SEFLTGlFTmdFWEVJTENJT2djV04rYTVsUGJnWXI5TktUY3p5Tjc1YzlVWG9aOUtFMWhITEliQ0lPQVFXRVlmQUV1ZHoxTk9FcmpjbWs1aHdsbGw4cklHR1g4VTRBVTEyb2ZRdlpoSU5KSlpEWUJGeENDd2lEb0ZGeENHdzZEcWtTUkRqNjhYN1pacFJvM2pQeXl6MHBGK0V2bXZjNUpGZWZjUnlDQ3dpRG9GRnhDR3dpRGdFbHVWMFNHUFFqNURHRVArcnBIMUovZnhiZG5XSVdBNkJSY1Foc0lnNEJCWmRueU9KZmpHbTY0MlBDMW1KWDVtaDd5NllPUzVKaE9PTUVjc2hzSWc0QkJZUmg4QWk0aEJZNGh6UzFoa3ROQnZHMUkra21YMEZTL0VsclJUSEZaMFFZamtFRmhHSHdDTGlFRmptK1J3dE93TFVnT2JzTC8xSW1sbFppMzVyblNZWEo1WkRZQkZ4Q0N3aURvRkZ4Q0d3Skw1V1ZqOU1sUFJZcTM3RnpPSkxTZXpQWVdVRnJIRW1ZamtFRmhHSHdDTGlFRmhFSEFJTG1tMk9Gb1B4ZmlOV3B0d3RJMVlXSE1RM1FkTDdNemNnbGtOZ0VYRUlMQ0lPZ1NYTzUyalpqY3lzdUNCV1JtWDFNWXQwSlhGTjlGT0s1UkJZUkJ3Q2k0aERZQkZ4Q0N5NkR1a2l1ZGgycVpyc2lCblRtcHR3MkZwT0laWkRZQkZ4Q0N3aURvRkZ4Q0d3MkJtVnRiNmswM2lacTNXU2lKQWFGOUhrWVhPeEhBS0xpRU5nRVhFSUxHaGx3cExacnJFeE5HRXYyQ1NjSWMyVVZrSm5UWWhZaXVVUVdGcDBlMnU3TEhoWHRjN2swNVlsemVKb1F2TVRVZXRzam1VZDZWWnVsaFJiSUVPSHRER1hoRi9FdWhJYndNeTFUR0k1c2F5VnZTa2EzbUtzV01iNnRBaHA5am5pVWMydjdpcEVqRDdlZUorbDI3R0lZZldLUTdXM1Q3V3lWeXg1eGRuYU5jOHZ1VTYrUGJNMjcvYm0zRjRITTFISzFha1B3MDFxazU0QnBkOFNVVXFkZ3FJMEJONVk2Y3pBK09HUnFUY25acytYdlRHZmZBQUNSQWVjbkZ2b2FkKyt1V3Z2am5XUEZQSzdITXlDdHYwdzBKRDF5WGhXM2trRjhRNXAwbSt6aXF2VzByMDU3VzMvNk5MMGlYOTk5UE5MVThkOXZ3cUlRQUFJUU1FZlVCa1NBSURqdVAxZDk5OXo2OVA5bmZjQjRJSjFpNis1emluRS9OeHN3eGxieTVWWGhUZ2lmMkttZXVYRXhXZk9qTDFNNEFPRlB5YWl1cjZEZ0hCT0xLaiszMVhZdjJmVHMzbDN3NExWaTZtNXppbkUvRnpFc1hqUmkxWlNSeGtmVHYvajZPREJ5Y293RUJCRTZUSDZSNkhWQ0g4SWdCQWQ2RzdidW0vYm9ZMmQ5MGJaY21lOTRQR1ZLSTVWOFNpTGlFTVRSNDhNSEppWUhTSWdRQUlBUUNVRlFnUUNJaUQxRVlJTFJJaUV3UWNpb01uSzhKR0JBME1UUjVmdE5KcU8vZjA1OURIZXdVM3p6cWkzR1VjR0RwUzhJaXJ6QUVES3U0Q3dieUdpdWU5QzN3TmdmaVVBQ1hKdTcwTTcvcml4ODk3NkorRUZzZktTQmpPc1hEMVlEWlpqcG5ybDZPREJrbGVFb01XUjFMVkNJQXg3SlFRRVFBUUVkUWdCa1JEVVVYVkFKU3ZWeG80T0hweXBYb0dtMzB2TkovWGlvQk1YbjVtc0RBZlJMUUxWZFFBQkFtYXd2YWQ5ZTEvSHAzcmF0anVZbmZNL0FKQlVoNE5JUUVSSXFoZENCSmlzREorNCtFd1VTbDNXczB1V2xIY3JsNmFQLy9uc3c2b2hnOTRFQUFFM2RlM2R2ZUU3bTdzZnlEcWQ2am1sVXB1OE1IbnNQMWNQZlREOWx1cGtvc0tqTWpFUUR3RTRqKzU4dGIvei9nV3J0MmlkVjBxM2tscHhFQkdCOStyQS9nc1R4ekIwTEFFZ20xbXpkL05QNytqOU9vWUJ3Q2gyRGdBK1ZVOFhYemcrOGtQUEx5a25JOVFVTmJnZ1czcSs4UENPbHhGY3pXZVdsU2dPM1ZkcUpCSDMxTTl6cVkreTZ1Tlk2Y3lscWVPQVFCRGMveTdtSHJ6dFY3ZXZmVmlsQW1ob0NYSXcrOG4xMzhvNm5XOE1QZUZETlloNEJMMVJGQ0ZEQUxvMGRYeXNkS1kzZitlTno3U0xOckQrMWJNeTF6RG0yL2lhcE5QblVCN0d3UGpobXU4QkFCSWlJQkIrdlBlYlNobGxyL2pLKzQrK2MvbVhVZnEzUC96eGErY2VtNjFOSU9LdXdtTTdDL3VKRUFHVkQ2c0VvbUppS2tqaSs5N0ErR0ZJdFZ1YVRuRVFrVSsxa2FrM3d3Y1FBS0tzazkvZDkyMEFRTVNLUHpWYU9qazZjeXBLZjdWMGNuVG1aTlcvcm02bTNYMlB1MDZiK2hiRGh4cVZWeGdHZ1pHcE53bDhXSm5UVFhSSTRhaXNzdk9sYW5GaTl2eGMxNEc0cG0zanV0d3UxY3c5N2R1KzhZbC90bVc2b3FqNWw3Zjl0bHE3bm5ON3g4dG5QNWgrYTZweUFkRWx2eEtOdEdEMEo1QWJUTXllTDN2RmpteGZXbzJIL1hmWkc4ODcwaWUrMTFUdFhmS0taVzhzSENnQklNcTVoV2dVSGdEeTd2cjZzWGpYeVJkTC8vdjd5Tk41ZC8zbXJnZjZPdTYrcmVjcjQrV3pneE4vSFpvNDZ2dlZPUStGVk9nTXl0NVl5U3QyWlB0dXB2NE5hQThmMmxubkVlLzJwZEJ5QUFBaXp0YXUrVlNMUEU1Q0tIdmpOYXBtTU50d2lkWEg4eE4vR1JnL2ZGLy9qN3JhdGtCNDFUWjJmdWFPM2dNZlhYLzc5Y0h2VGxhR0tCaTVWVU81Qk9EUDFxNHRHaXBkdWFUVzUvRDhFa0xvUUFJZzRIVGwwbGpwdllaa3luSk1Wb2JPRmw5NllNdlBPckszbkJwOXZrYXpBT0Q1cGRPakwzait6TWM2UC92VkhTL20zRjZsaWpCS2hpcE4wMCt1ZWFSUUhLcTlYU2RQaURRWG5LQWFsZCs5L0J5UkQrSGpqSUtJVGwzOTNkMjNmSy9ONmZiOG1mZkgvMVNwVFFGQXRYYjkzTFhYeXQ0NEFCVHlkOXpWOTdoNmpxWDZaMk1ubjBxYm9VaWhPQlR0bWJVT09FRVVCTlJvSzUwWmUrbDA4UThxZ2VvT1Fzc3h1RDUvSndEazNNTFhkaDdweUc0QWdIeDIvVU8zdjlqZHZrV2wzOXI5SllSTTZIa29lVGp0bWJXUTBqNEZqRi9qbGNSOERyTk1iZ3lDcVNONXR6Zm5Ga3JlS0FTQkt6Vi9wM1pzK1BzejFZL3V1ZldwK2h1RGdCQXpOMVlneWx5WklnY3pSTFZndkI4ZzV4YnlicTlCbldOU0d1dk1PTEFXUTJvdFI4N3Q3V25mRGlxQUZib2RBRUJFRnlhUCtlQmZtWG1uV0hxdjZsLzNxZVppWGcyMExvaHFzQ3N6Nzlhb0FrQklhcW9ROWJSdnovSGlTQUhwZkZvQkFBY3ptN3YyZmpqOU5pSVNoWDBCSWlKczZManIrTWdQL2p2NmV3U25MZFBsb0R0Ym0yalA5TnkvK1NmMXo3cjFWR3FUNzE1K0RnQWdDb0lSYnU3YXE5TEh6QXBiMGFSV0hBQ3dZOTBqLzc3OEM1ODhOWWs0NkZvQVRsMzlUWTBxS3MyTVZ3WUFJRGcxK254Mys5YmRHdzVtd3NCb3hLdzNjZXpDazZPbGs0RTVSa0FBQjkwZDZ4NEpEcVJSR1JBL0ttdGxkRTAvUTdNcHExeWUwYWpzeU9UZklIeG1pWDRXenZhYWR4REIyZEw5eGJ0dmVlTFdOWi9PWUJzQmVmNE1ndlBHOEpQbnJyMFNocjZDbjIvcC9yeXRVVm5OTTlYSFZqZy9uZUlJNXBIWHplY0E1WFdxOHcxbS9SQUZVd1JWbmhETk1NNDZYV3V5ZlQ3VnJsYy95R2Y3MmpQZHhkSnBpTDRuQU1SSGQ3NjZxZXR6d1BjcEtSQkhPaDNTS083WjM3bG5WMkUvQUlEeUlsVXdNNWhMck1iaktKamdCZUUwTVlLcVB6VmVQamRaR2FwUlpicHlzVmc2clo2RWc0WkMyRlhZMzkrNUp5cXI2ZWZYSk5JcERwaHJNOXl6NmRudXRxM0JYUE5BQjZpbWFGQXdHZzhRUE0wQ2hMcUpqb095TE9IVVVnRG9idHU2WjlPellHbURnbFltdGVLSTZNajI3ZHQyS0pmcGhUQ1VUdUhvYWpEQ0drd3BuVytOcWM0WENaWXJFQUhrTW9WOTJ3NnB3YllVMnd5RjdxSW00NzZ3Rlc0dklocWVmUDMxd2NmTHRURzEvaUJ3UEdqK2lVU3JtaGJ3SXdnQWM1bkNnOXQrZlZ2UHZvV1R6Q2VKYVlKV0xxYitUTEQwaXlOcXhXakZXekRaT0hBdWd6RjlDaDNTYUZ3KzZsblVrZm9WYnpxQkRSSEg0aXk3T09xcFd5czdOMkc0L3ZrV1ZDZUNGSzZTVlFSclphT3BHeUtPRklxRGlLQitsVDE1QkhNcUNCOXl3MGxmYzZ2c24rcnYzSVBvd0ZLQ29TS094V2tkY2RTM3EwL1ZodjA1d25YM2dEZTNQMGZFNmhXSFp0bEx3cXdJNCt1bEdudlJuWDF1VWhOYzBaby9zYkkwd1RqbGFoUkhRM3RISHhlYzhMZWtXWUNheVZhS09OSTg4TWF4b0RKdVBLNk82R3M5ZldHUDFTaU9lalNIelZZbmlXOVNhNVpKQTB2dGNacnNCUysxVUROZkZTeGRaMzNTR1Q1djVuMmZZaHVUMm00bDZac3N4WnFJU0swNDZsa05EWmtFNmV4V0JDc1lialhaZ0ZrbVNheGEwSS9xYXBiZWhMQk5FcVdiMFZCbnNSd0NpNGhEWUJGeENDd2lEb0ZsM3FOc0VwRTcvZkZvNnhQMjllc2NnLzV5aWliN3Ywa0VaQnNReXlHd2lEZ0VGaEdId0dLNEhIS1oxM0RxZVNmR1UrNmEwUEZyWm1obFRhVitUU1FJSnVnaTRoQllSQndDaTRoRFlESGNNSzZCSnUva29lOTE2dWRwOTFlUXZIZmZRQkpuSjVaRFlCRnhDQ3dpRG9IRmNBNnA4ZndyelR5VG1BR2w3d1NZQlFaak1vSFlTeFJUU2YxdmsvQzl4SElJTENJT2dVWEVJYkNJT0FTVzVkd3YwY3E0b3ZGMkJwcllXcHFROURoMkV2bUw1UkJZUkJ3Q2k0aERZQkZ4Q0N4eFN4T3NFN05xb1FtbG13MlRXbGx3MElDVkNLbHhyRGFtT0prbUtPZ2k0aEJZUkJ3Q1M5eW9iSk4zbUVoNkkxOHJHM2ZHRUorSmxZdXBtWW10d0taWURvRkZ4Q0d3aURnRUZoR0h3R0puYVVJOVNRd2ttZzI5SmhGUWlzSEtNdGNHckFRR2pkMXRzUndDaTRoRFlCRnhDQ3d0dEwyMTlhVUp4bXNxclcrR3RxU0t4YUE1SW1qTFFSVExJYkNJT0FRV0VZZkFJdUlRV0ZySUlZMGg2VmlRZnBETmVMV3FsVDFGekp6b0dHUW1tR0NJaUVOZ0VYRUlMQ0lPZ1VYWElVMWlTYTErRE5IS2E3ek1kbE94OG5JQ1k2eS95WHhKaU9VUVdFUWNBb3VJUTJDSmUydUNkWXgzM1RCTHVWTGVOV3ptMWlSeDRoSUVFM1FSY1Fnc0lnNkJSY1Foc0N6bmhuRkNpeU9XUTJBUmNRZ3NJZzZCUmNRaHNQd2YzaTNvSVh3NG1mNEFBQUFBU1VWT1JLNUNZSUk9IjsKCS8vcXEKCXZhciBxclFRID0gImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBTFFBQUFDMENBSUFBQUN5cjVGbEFBQVJXRWxFUVZSNG5PMmRiMndWVlJiQXo1MzMrcCsyU3N1L0RSb3NTeEZCZ3FaTE1LNVpOVXI0SUlZUEd2eXdTSXdmVEV6VVpFbGNOMWsva0JpVHphb3hNWEUxa0NYN3dTLytBWkkyYTVPQzJMQXV5NzlGNm9icXRsU3NrUWdsWXFYYmVhL3Z6ZHo5TUhaNHpuM24zak4zcGdXbjV4Y2pyelAzbm50bjNubm4zSFB1bWZlRWxCSVlwaHJPdFo0QWMvMlNELzRSUWxpTGlHVjdzSUZDSVpxWllBTlpkTkZndkJXcXpMQ0w4WlFxbkg3aDZpaDIwb3lFUXRoeU1DaXNIQXhLUHZKM0tqNUNZMmF4NFNobUVEUFJsRGxINU1lNnpFaGpPNHROdjFmWWRkbUZEdlJlNmd6WmNqQW9yQndNU3RTdGhDU0pHalNMZGlOMEgySGhUZFRqUm1PdUVhTDJwVWNjR2xLSk9DTFlCWFJzT1JnVVZnNEdCWFVyU2RBa1p6QW9tU1dqajZCQUR6Mk1FNGgxbVJGWGFPRmZOQjR3UlFkVUNWc09Cb1dWZzBGSjA2MVFWdjRSTkpiWnVJTkFpVGdzTExEYXdCaXRHRnRTK2hyUlRHeUd0dGJaY2pBb3JCd01DdXBXa2xpcVZOYlZ4bGlBNHNXTTR4cmpDNDJRV0JFSEpselRCZHNQc3ZBbWR1OG1XdzRHaFpXRFFZbTZsU1RwbEZqbXppTGlpQXdVeXlOZzQxcE0zaTQ0bXAwSUswa0FwY0tXZzBFUjE3YjYzRzZYMHFMNnhyakswOHdORzg2aU1DcmRVdGtrUzFRS2JEa1lGRllPQnNXY1BxZlh2NmVTM2tpeUNxUDdGMHA1anBGWXkwQjZrc1o0WFVtOFNheWRaTFljREFvckI0TmlmdUpOWTNib2RaR3FOR091Z201bUthYlM0amsyRll2bkcralhTMzhMTFB5cFptTkJBMXNPQm9XVmcwRkpsQVJMa2xCS3NnSzNxS21rNTgzb1JVYXgraHBiMGplUUtWR1MwWjFSb2lTMkhBd0tLd2VERW8xV1lxM3pMU3BaNktRaUJMc2N1NkoraS8yUm1jZ1RSdVpET1dWM005bHlNQ2lzSEF6S2oyNGxWc3lTU21FbWRqekpvMithR2M3RWcyNlVxYWF5M1c5UmZ4UTVSZDhncTRRdEI0UEN5c0dnb0Vrd2k3cjdkQi9udFVnS1Vkb2tNYk9SbGlIMExGeVNvalZOQTNyMlR3TW53WmdZSkhwV0Zrdk4ydFdGWTlBcnVTbENNSm5HTG1walk0MjdoY3hZazZUdk9mQ0NsRWtaVmc0R0JTMzJpVlhraUtHSisrazVFbm94cVNyRVlqZFlJOTlvdEkzamFoeFE4dVJOVlNGQkc3VXZaVEhMbG9OQlllVmdVSVRGeWorVitKdmVKZDJkVmV4NkxSNmVpSVZ4em5RZlRabGJrcHdUNXprWU02d2NERW8wZlo1dTF0eTRuRTZsZ2pWSllEWFQvaVZKMmg2TGRDeGNScXkrN0ZZWU02d2NERXFNdlJXTDlKUlJTQkl6cXdxaHBKam8wWm14cjRVL3BTU2oxT3N5WXR6TWl1V0NROWh5TUNpc0hBd0ttZ1N6Q0Z1dUNvMi8xMkN4WDJBeEhLVXY1UlFHZmFwWUE4MEVLSDFUdVZjaGJEa1lGRllPQmdYOUh0SlVrak9hSThiU0xHTjVsVVVobG9wRmNCUnJmNFNlOURONnNWZ0ZieGFSRHRlUU1qR0lrVDZuMXllcVhlaWxQWFQ1RnRscm8weUsvRmpYbTBvZDZFemtreWg5MlhJd0tLd2NERXFpaDVvd2twUzBxQk13TGd6VkxwcVpKTC9lV0xXMEZ2a1Z1cWhZMFlORmx4bjU2ZERyRU9ON2tLUjRJS3RrVmpsbTRjM0dFcGVad2VZTDQxSko2MFphV3Bqb0pENXJocUJQeWFJZ05OMG9oaEp6OFlLVVFXSGxZRkNpdTdJYTBxMUdvVC9naFhXSjVaSm1HY3kveE5yOXRzamZxMjMwODZrNnBaRHNXSTdyUnpNeVEzYVVnMG1kYUNpYjdvYUZzVUtUWW1hVHhJcmxjdG4zZlNsbExwZnpQRThJNFRoT3VWeDJIRWNJNFhuZTZPam8vdjM3ang4L1BqbzY2cnB1ZlgzOXpUZmYzTlhWOWZEREQzZDJkbGJ0a3N2bHBKUys3OWZYMTZzanhuMzJncjZQYW1jYTZiNjR5aEY2d2EwNlhoTGxpREZGV2hoY2RheXBxU2xzNk1uSnlkZGZmMzN2M3IyKzc2dG5IY2Q1NktHSG5uLysrY2JHUmt4Q2JXMnRlbEN2SEhZRmJ4YWhMSDI5a24zbHdBWXFGb3RDQ0NHRTcvdU80MGdwcFpTTzQ0eVBqei85OU5ObnpwelJUNit6cy9PdHQ5NXFiVzJ0N092N2ZpQ3pwcVpHZjFHUURlV2dRTGQ3Rm9VelNTYWdFVkxWclpSS3BXZWVlZWJvMGFOQm00YUdCcy96UWh1VHkrWHkrWHl4V0F6K1hMZHUzZTdkdXdPMW9MZ1ZRSlNWL2diUFRwaEdVWTZNTDBnOXp3TUF4M0VDelFpTzdOKy9QOVNNVmF0V2ZmVFJSNzI5dlV1V0xBR0E5dmIybnA2ZS92NytkZXZXQlExT25UcjF6anZ2NUhJNUFBaVVMSEJEd1pGc2szSGxDRCt2NGNlaVZDcTkvZmJiY3BwdDI3YlYxOWQvOHNrbmp6MzJtSlJ5NjlhdGl4Y3ZsbEkrK2VTVE1QMFoyck5uait1NlFmZFExRnlJbktQS0lYRENOaEloYktrNWhjMURNeTQyZ2NxKzZPVTVUdEErV0RRQVFIOS8vNlZMbDhJR2JXMXRodzhmM3JKbHl6ZmZmQU1BbnVlOS9QTExiN3p4Um10cmF6akU1Y3VYRHh3NEVBd1VMRGdBb09veU5weWVlbDJheGhIVXZ2U2JHZmNlNnFWbDNIS1V5MlVBQ0dOUkFQajQ0NDhyR3d3TURLeGZ2LzdWVjE4TjNNVDQrUGlMTDc3NHdnc3ZEQTRPVmpicjcrOEhBTi8zOC9sOG9CYjVmR1kzdEVOaTVEbEM1ZEo4RGlJTlZHbEdhMHhaVGhzbkVLSmFqbE9uVGxWMjM3Tm56OUtsUzVjdlgvN1NTeThKSWQ1Ly8vM096czdtNXVZMzMzeXpzdG1ubjM0S1pNdWhRWE5SSWJHaUVtSUR6UVIwalZPTVZsVG82MnJOWGRQY1IzV2dDS1ZTS1RDZVFRanF1dTQ5OTl4VDJhMnAzcjlsd2RUQ2xuSnp2Wi9QeWJJbnJoU2NDei9VbkJ1cm1TamtLZ2M4ZVBEZ2pUZmVXQmtTMTlYVjZTOWZNMmVLY2xqY2NEcVVDV1RjTm5xZTV6aE9FSzNrY3JteHNiSHcxSnFsN2g4Mmo2MWNVaFRWWWtVSll2QjgzWi8vM2o0dzJoQWNIQnNiYTIxdERVUGl1UkN0eFBnZVV2VlVCTXFuUDlJNFBCNXI4Uy9KTzhsQlRrSktHYndJZ3c0QU9IdWg3aC8vYlZyY1dyNmgwWWRnY0FFd1BZdnhTZWVmUTQxRDMxNjFEYTdyQ2lFcVEySnMyUkZaOTFVOVpid3o2dlZxU01Vd3EyVGNja1FJbGlBQmJzbjV5OEg1dXc3TjcrcVkvTlV0N3ZKRlV5ME4vaFhYR2I1UWUvekxoaE1qaldVZnBBUUFHY1FMYzhGVVJNaTRjZ1J1UlV4bk5wZWVPZk9ueWNsVHVkeGdMamVTeS8wZ1JObURmdzAxSFJsdUFna0NwQVFCQUFJa2dKQkNOZ04wZU42dHZuOW51ZHd4TWlKdnUyMU91UlcwMkllK1lxSTdFWlZZaXk5c1hBMlJCZW5FSTQrVUJ3WkNJVDhBakRuT1pTSCtKMFFSd0Fkd0FPb0FtcVM4UWNxRnZteUJxNG1IM05xMXJYdjNVaGFrZ3BBK1QzSzlsSVY1NUwyd2NGV1FlY3NSM2hvcFpmbjA2ZkpuQTVXM3FRV2d4UlNSaHUyOXp3WktwMC9uMTY2bHIzaCs3bVE4Q1ZhcEhNYy8rT0E3NFFTSHFQOU5Od2FBNzRSejdMMzNRcXN3RjVURG5PZXdpRlkwTGRXZzBhS3YrdlpnVXdwM1pRdUZ3b01QUHVoT1RpN3ovZFdlOSt6R2piVkhqM29YTDBKd0M0UUFBQ0VCQUtTUVFnSUlJZHJhY3N1V2xXNjY2YlVQUC94UExqZnFPQTJOamIyOXZjM056ZEswSzZzZXRERHZkTmRBajFZMGZkVlRHWGNyd2VKUkNOSFgxemM1T1FrQVh6ck91Vnh1NXl1dkZIYnM4THE3ZzF0VHQybFQwN1BQZ3VjQmdLaXJFODNOenZ6NVVGc0xBTDd2OXg0NkZNaHhYZmZRb1VPYk4yK0d1YkVybTNIbENEbDQ4R0Q0dXE2dXJyYTJ0aEQ4SVNVQU9DMHQrVldyQXBjUi9oK204Kzd6NXMwYkh4OFAvdXpyNnd1VVl5NkFmck9QaGlUdU5tTE5raVRmS0t2M29QeGlhbXJxeElrVDRYSWhMTytyN0ZnNW44cFVsWlN5c3VMcjVNbVQ1WEk1bjg5N25vZFZnbFhPMHhpbUdWdXFwelFYYm54cllpWEJNcjRnRFlwOWhvZUhDNFdDbW8wTnQ2M0RnNUVqbFRjdWVPMjY3dWVmZnc3c1ZqSkE4UGtZSGg0T1BFVkhSOGZaczJjbkp5Yzl6MnQ2N3JuYSsrLzN4OGJBODJydXVLT3lmZVVDMFBmOUsxZXVBTUN5WmN2T25Uc0hBQ01qSTJ2V3JJbVY3LytaZ3U2dGFNRDJDeXl3Mk1GUng5VVpSc2Z4Zlg5c2JFd0lzV0hEaGtjZmZYVEhqaDJlNTMzMTFWZkxWNnpJcjFpaGx3d0E1OCtmRDZxVW4zcnFxZTd1N2lOSGpseThlQkcwVy9hVU1FcWR2TWJnUjI1T2tqMHNpaWVhSzlGS1VPTlRMcGNYTGx5NGMrZk94c2JHK3ZwNjEzV1BIVHZXMGRFQlA4MW1WbjBkVkp2VzFOVGNkZGRkWFYxZGp6LytlSEI4TGhUN1pIek5FZXkwM1hmZmZidDI3V3B2YjI5c2JOeTBhWk1RWXQrK2ZXRWJNWTM2R2dEMjdkc25oTmk0Y1dOTFMwdGJXOXZ1M2J2dnZmZGVzQzMyK1prUldYWVpXMUlhU3h4S203aWphS1JOVFUwVmk4VkNvUkM4S0JhTFgzLzk5ZnIxNjFldlh0M1QwMk9jUTE5ZjMrclZxN3U2dXM2ZVBSdDBEMFVGSzF4czVoWlhvYmtEVmYra0NJOTFuNnVjc2hnbXhRdW10S1RNQnhQaXVtNnhXSnlhbW5KZE4zaFRYZGZ0N3U2Ky9mYmJOMnpZTURnNEtLWDBwNG04SGhvYXV2dnV1OWVzV2ZQdXUrK1dTcVZBSVVxbFVxRlFLQmFMNFpaZTFablB4TDJ5ZUNOaTNXZjFsSTFiTVE0akZJd1hwbW1KWFViWVJYT2Jnb0RUOS8zSzUwMGU2R3I5NDIvbkZ5YXZQUEhFRXowOVBlSG9sUzk2ZTN1M2I5OCtjZVg3MzI5dDNmS2JKWlhQdndTdUtqaGlmZXZVVTVxYlp1eHJGS3NaVG5kRWtyZVJqS3FxRVVMdnEya1phVVBwRW4xVzFpL0lrOXZGeFY0QStjVzNkYTk5Mkg3aXk0YU9qdVVQUFBEQXlwVXI1ODJiTnpFeE1UUTBkT0RBZ2FHaG9UdHZLZnh1MDZYYmZsRUFBRmkwQ2U3NEcrUWFLb1ZWZlZZV2xJVnQ1U24xT05heWFpOTFJS0tRcXA5RzQzQVpWNDVDb2ZDVHh4amQ4L0R2YlREeEJaUW5RUG9neE1oWS9lR2hHNzY0dE9oQ1llbVU1OVRXaUFXMTUyOWRjUEhYSzc3LzVRSVhRSUp3SU5jRXphdmt1cjlDM2FMS3h5cXJCaXo2MERIN3ltRnNUSG1EalMyTmZlbURYZzlRN25DRXlBMm5LSlpSS2RYNWFPNWJ4a05aSmduWlVRNkxqeWFqNTBldlNYRVpWZGZQZXVuR0xoUUxhYVN5N3pWMExwRlFLM0xRdUc1USs5SXh2bjJhYVdoT1pjZHlNS21UdFEyQ3lOcHROZ2ZOSHVpRDFQVFlrbUtwWnVMMkpmRkVzd2JtUnRVRzRTbXNqWG84bFFTRUtpM3NrbkczZ3VVSFU1RThFMkt2SzdMbVZxcWlTVm1xR0EzaFhGQ0xBSE1TVEhOYnNVeGxrb1RQMVpuRktTODFTb3VJcGJna2VyWlI3V0xoOHVoeFRicmVVM09mTSs1V21DU3djakFvaWI2a050S0Zrczh4K205NmxpYVdSOEQyS1RRazN3MkpOUzdkVjhhYUdQMzluWFBSQ3BNRVZnNEd4ZnhiOWhvaWJaS1VKbWdNTXVZMWtnUkhkdVVVU1Z4RDhyb1ppOEJLSTVQaTBObHlNQ2d4dm9MQitBbW1kMUZKVXZVekUwa0ZkUlJOWTBwS1puWjJzQzBxd1RUUzJISXdLS3djREVyVXJhUlNlMEtSWm5SSldCZktsRkxKM3h1Rko5bU90cXY0cFVQZkQySzN3dGpBeXNHZzJQdzZaRWlTYU1XWTF0VWNNZTZzR2oyUlhUbzV5V1o5NUhvcDZSeDFKbFZseHBvWXBiWW9oQzBIZzhMS3dhRFlwTStOYlZLcDdxUjdISXZoS0s1d2RtSWlpdk9pUnh5cVdQb3VOS2ZQbVJpd2NqQW9hTEdQUlFsbnVvVkM2WTZybjBaVklSWkZuUmI3VUpvcDBXZW90a21scUlvdEI0UEN5c0dnbUd0STZkWTFKSlU2VUUwYnVvbW1Gd3FsVWtFVGF5YkdMdlJ4TGE1WGxjWnVoWWtCS3dlRGduNC9SNUoxdFVxS1JqV1dORlVzbGtDakRFZS9jTFdsUmZXYXNacUM4bWJSRTVVcWJEa1lGUE92UTE1dGFscFVxaVRKbzF1VWNGS1dYY2ErRmhQUWlLVlBnRDVLclB5S2RSZGd5OEZvWU9WZ1VLSUwwaENOczZDdnJZeEM3QmJDeWN0YVkwbWdld1JORitPNDlNSW9UVitMV0VIajE5aHlNQ2lzSEF5S3pUZjdYS3NxR0V4K2tpUk5rc2NMTkVLTW84ZmFqcVpMMDdReHdzVStUQXhZT1JpVVJEK3BZWXc0akJtZVdBRUkzU05vMm1BdE5TVFpEYVlYM1ZnVUNpVjVWRUlEUnl1TUdWWU9CaVhObnhsSU1Va0ZCRzlsVjFPSk5kRE1oTjdGMkRmSnVHcmZHZDNCQWJZY2pBWldEZ2JGNXJmc0k4UnlJaGFyZC9xSWFsOTZtWUZGaWk5VytCQzUzaVFiSlpRM3kxamNSSEhmYkRrWUZGWU9CaVdGNytlSTFSZXptUlpWa0JxWFpMR0ZUWmtBZmJzZmMzQVVUMlNNa3BKVXZta2E4TjRLRXdQMHgzZ3Mxb01XQlR2R2xhTitKaFpkSXFmczh1aEdMTmFTRnB2QWRLdWpOcUNrN2RseU1DaXNIQXpLYlAvR0c3YTQweVFBNkY2RDRwc3NucXZBVUdYU3B4b3JuVU5QNUZ1MDVEd0hZd01yQjRPU3BsdUpsWnBOa3RaTm5ndFAxNWhyNUtkU2JVUVhqcmtQdTJDUUxRZUR3c3JCb0tCdUpjVWlJSTIwVk9xRExCNlNzeXNVb3J0Q2V2WmFFNlpaVE41WXV4ckxuYkhsWUZCWU9SZ1U5T3V0azVDazNGNERaaW90ekx1bVpaTEg5ZWdQdEZFQ2pjaHM2WGRWUFJXcmJ3aGJEZ2FGbFlOQlNmUFJCQ1pqc09WZ1VGZzVHSlQvQTQ1bWZxUTMxczMrQUFBQUFFbEZUa1N1UW1DQyI7CgkKCXZhciBxckFsbEFyciA9IFsKCQkvL+aUr+S7mOWunQoJCVtxckFsaXBheSwgIjxzcGFuIGNsYXNzPSdic2VnX2FsaXBheSc+5pSv5LuY5a6dPC9zcGFuPuaJq+S4gOaJqzxicj7mjZDliqnmlK/mjIEiXSwKCQkvL+W+ruS/oQoJCVtxcldlY2hhdCwgIjxzcGFuIGNsYXNzPSdic2VnX1dlY2hhdCc+5b6u5L+hPC9zcGFuPuaJq+S4gOaJqzxicj7mjZDliqnmlK/mjIEiXSwKCQkvL1FRCgkJW3FyUVEsICJRUeaJq+S4gOaJqzxicj7mjZDliqnmlK/mjIEiXSwKCV07CglyZXR1cm4gcXJBbGxBcnI7Cn0KCi8v5re75YqgY3NzCmZ1bmN0aW9uIGJzZWdBZGRDc3MoY3NzVGV4dCkgewoJdmFyIGFjc3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwoJYWNzcy50ZXh0Q29udGVudCA9IGNzc1RleHQ7Cgl2YXIgZG9jID0gKGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTsKCWRvYy5hcHBlbmRDaGlsZChhY3NzKTsKfQoKLy9jc3PmlbTnkIbkuI7nvo7ljJbvvIgg5oSf6LCiaHR0cHM6Ly90b29sLmx1L2Nzcy/vvIkKZnVuY3Rpb24gYnNlZ0NzcygpIHsKCWJzZWdBZGRDc3MoYC5ic2VnX25vbmUgewoJZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7Cn0KLmJzZWdfYmxvY2sgewoJZGlzcGxheTogYmxvY2s7Cn0KLmJzZWdfY3Vyc29yX3BvaW50ZXIgewoJY3Vyc29yOiBwb2ludGVyOwp9Ci5ic2VnX2N1cnNvcl9ub3RfYWxsb3dlZCB7CgljdXJzb3I6IG5vdC1hbGxvd2VkOwp9Ci5ic2VnX2Zsb2F0X2xlZnQgewoJZmxvYXQ6IGxlZnQ7Cn0KLmJzZWdfZmxvYXRfcmlnaHQgewoJZmxvYXQ6IHJpZ2h0Owp9Ci5ic2VnX3VzZXJfc2VsZWN0IHsKCS13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CgktbW96LXVzZXItc2VsZWN0OiBub25lOwoJLW1zLXVzZXItc2VsZWN0OiBub25lOwoJdXNlci1zZWxlY3Q6IG5vbmU7Cn0KLmJzZWdfcyB7Cglmb250LWZhbWlseTogJ01pY3Jvc29mdCBZYUhlaScsIGFyaWFsLCBTaW1TdW4sIOWui+S9kyFpbXBvcnRhbnQ7Cn0KLmJzZWdfaW5zdHJ1Y3QgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJd2lkdGg6IDE1cHg7CgloZWlnaHQ6IDI1cHg7Cglib3JkZXItdG9wOiAxcHggc29saWQgI0E5QTlBOTsKCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjQTlBOUE5OwoJYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjQTlBOUE5OwoJYm9yZGVyLXJhZGl1czogMTRweCAwIDAgMTRweDsKCWJhY2tncm91bmQtY29sb3I6ICNGRkY7Cgljb2xvcjogIzAwMDsKCXRleHQtYWxpZ246IHJpZ2h0OwoJZm9udC1zaXplOiAxMHB4OwoJbGluZS1oZWlnaHQ6IDI3cHg7Cn0KLmJzZWdfY2xvc2UgewoJd2lkdGg6IDIycHg7CgloZWlnaHQ6IDIycHg7Cglib3JkZXItcmFkaXVzOiAxMXB4OwoJYmFja2dyb3VuZC1jb2xvcjogI0I0RTNGRjsKCWNvbG9yOiAjZjAwOwoJZm9udC1mYW1pbHk6ICdNaWNyb3NvZnQgWWFIZWknLCBhcmlhbCwgU2ltU3VuLCDlrovkvZMhaW1wb3J0YW50OwoJbGluZS1oZWlnaHQ6IG5vcm1hbDsKfQouYnNlZ19zZWxlY3QgewoJd2lkdGg6IDEwNHB4OwoJb3V0bGluZTogMDsKCWJvcmRlcjogMXB4IHNvbGlkICNBOUE5QTk7Cglib3JkZXItcmFkaXVzOiAwOwoJYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKCWNvbG9yOiAjMDAwOwoJZm9udC1zaXplOiAxNXB4Owp9Ci5ic2VnX3Njb250IHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCWJveC1zaXppbmc6IGNvbnRlbnQtYm94OwoJbWFyZ2luOiAwOwoJcGFkZGluZzogMnB4OwoJb3V0bGluZTogMDsKCWJvcmRlci10b3A6IDFweCBzb2xpZCAjQTlBOUE5OwoJYm9yZGVyLXJpZ2h0OiAwOwoJYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNBOUE5QTk7Cglib3JkZXItbGVmdDogMDsKCWJvcmRlci1yYWRpdXM6IDA7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJY29sb3I6ICMwMDA7Cglmb250LXNpemU6IDE1cHg7Cglmb250LWZhbWlseTogJ01pY3Jvc29mdCBZYUhlaScsIGFyaWFsLCBTaW1TdW4sIOWui+S9kzsKCWN1cnNvcjogdGV4dDsKfQouYnNlZ194X2J0bmQgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJcGFkZGluZzogMnB4IDA7Cgl3aWR0aDogMTZweDsKCWhlaWdodDogMjRweDsKCW91dGxpbmU6IDA7Cglib3JkZXItdG9wOiAxcHggc29saWQgI2E5YTlhOTsKCWJvcmRlci1yaWdodDogMDsKCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYTlhOWE5OwoJYm9yZGVyLWxlZnQ6IDA7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJY29sb3I6ICMwMDA7Cgl0ZXh0LWFsaWduOiBjZW50ZXI7Cglmb250LXNpemU6IDE1cHg7CglsaW5lLWhlaWdodDogMjRweDsKfQouYnNlZ19idG4gewoJcGFkZGluZzogMDsKCXdpZHRoOiA1MnB4OwoJaGVpZ2h0OiAyOXB4OwoJbGluZS1oZWlnaHQ6IDI5cHg7Cglib3JkZXI6IDFweCBzb2xpZCAjQTlBOUE5OwoJYm9yZGVyLXJhZGl1czogMDsKCWNvbG9yOiAjZmZmOwoJZm9udC1zaXplOiAxNHB4Owp9Ci5ic2VnX2FsZXJ0IHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXRvcDogNjJweDsKCXJpZ2h0OiAwOwoJbGVmdDogMDsKCXotaW5kZXg6IDk5OTk7CgltYXJnaW46IDAgYXV0bzsKCXdpZHRoOiA0NTBweDsKCWhlaWdodDogMTIwcHg7Cglib3JkZXI6IDFweCBzb2xpZCAjZDNkM2QzOwoJYm9yZGVyLXJhZGl1czogN3B4OwoJYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKfQouYnNlZ19hbGVydF9jIHsKCXBhZGRpbmc6IDE1cHg7CgloZWlnaHQ6IDQycHg7CglsZXR0ZXItc3BhY2luZzogMXB4OwoJZm9udC1zaXplOiAxNHB4Owp9Ci5ic2VnX2FsZXJ0X2J0biB7CgltYXJnaW4tbGVmdDogMzcwcHg7CglwYWRkaW5nOiAwOwoJd2lkdGg6IDY0cHg7CgloZWlnaHQ6IDMycHg7Cglib3JkZXI6IDA7Cglib3JkZXItcmFkaXVzOiAzcHg7CgliYWNrZ3JvdW5kOiAjM2I4Y2ZmOwoJY29sb3I6ICNmZmY7Cglmb250LXNpemU6IDE0cHg7Cn0KLmJzZWdfaW5fYWxsIHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXRvcDogNjJweDsKCWxlZnQ6IDE0cHg7Cgl6LWluZGV4OiA5OTg7Cgl3aWR0aDogNjE0cHg7CgloZWlnaHQ6IDQxMHB4OwoJYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMzsKCWJvcmRlci1yYWRpdXM6IDdweDsKCWJhY2tncm91bmQtY29sb3I6ICNmZmY7CglsaW5lLWhlaWdodDogbm9ybWFsOwp9Ci5ic2VnX2luX3RpdGxlIHsKCXBhZGRpbmc6IDVweDsKCWhlaWdodDogMjBweDsKCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDNkM2QzOwoJdGV4dC1hbGlnbjogY2VudGVyOwoJbGV0dGVyLXNwYWNpbmc6IDFweDsKCWZvbnQtd2VpZ2h0OiA3MDA7Cglmb250LXNpemU6IDE0cHg7Cn0KLmJzZWdfaW5fdGV4dCB7CglvdmVyZmxvdy15OiBhdXRvOwoJbWFyZ2luOiAxMHB4IDEwcHggMTBweCAxMHB4OwoJd2lkdGg6IDU5NHB4OwoJaGVpZ2h0OiAzNjBweDsKCXRleHQtYWxpZ246IGp1c3RpZnk7Cgl0ZXh0LWluZGVudDogMzBweDsKCWZvbnQtc2l6ZTogMTVweDsKfQouYnNlZ19yZXdhcmQgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJd2lkdGg6IDE1cHg7CgloZWlnaHQ6IDI1cHg7Cglib3JkZXItdG9wOiAxcHggc29saWQgI0E5QTlBOTsKCWJvcmRlci1yaWdodDogMXB4IHNvbGlkICNBOUE5QTk7Cglib3JkZXItYm90dG9tOiAxcHggc29saWQgI0E5QTlBOTsKCWJvcmRlci1yYWRpdXM6IDAgMTRweCAxNHB4IDA7CgliYWNrZ3JvdW5kLWNvbG9yOiAjRkZGOwoJY29sb3I6ICMwMDA7Cglmb250LXNpemU6IDEwcHg7CglsaW5lLWhlaWdodDogMjdweDsKfQouYnNlZ19xcl9hbGwgewoJcG9zaXRpb246IGFic29sdXRlOwoJdG9wOiA2MnB4OwoJcmlnaHQ6IDE0cHg7Cgl6LWluZGV4OiA5OTk7Cgl3aWR0aDogNjEycHg7CgloZWlnaHQ6IDI4NXB4OwoJYm9yZGVyOiAxcHggc29saWQgI2QzZDNkMzsKCWJvcmRlci1yYWRpdXM6IDdweDsKCWJhY2tncm91bmQtY29sb3I6ICNmZmY7CglsaW5lLWhlaWdodDogbm9ybWFsOwp9Ci5ic2VnX3FyX3RpdGxlIHsKCXBhZGRpbmc6IDVweDsKCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDNkM2QzOwoJdGV4dC1hbGlnbjogY2VudGVyOwoJbGV0dGVyLXNwYWNpbmc6IDFweDsKCWZvbnQtd2VpZ2h0OiA3MDA7Cglmb250LXNpemU6IDE0cHg7Cn0KLmJzZWdfcXJfdGV4dCB7CglvdmVyZmxvdy15OiBhdXRvOwoJaGVpZ2h0OiA1MTVweDsKfQouYnNlZ19ic2UgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJd2lkdGg6IDE0NHB4OwoJdGV4dC1pbmRlbnQ6IDA7Cn0KLmJzZWdfYnNlX2kgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJbWFyZ2luOiAxcHggM3B4IDFweCAxcHg7Cgl3aWR0aDogMzNweDsKCWhlaWdodDogMjJweDsKCWJvcmRlcjogMXB4IHNvbGlkICNmMDA7Cglib3JkZXItcmFkaXVzOiAxN3B4IDE3cHggMTdweCAxN3B4LzEycHggMTJweCAxMnB4IDEycHg7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmYwOwoJdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5ic2VnX3FyX2MgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJd2lkdGg6IDIwMHB4OwoJaGVpZ2h0OiAyNTRweDsKCWJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgI2QzZDNkMzsKfQouYnNlZ19pbWdfcXIgewoJbWFyZ2luOiA5cHggOXB4IDAgOXB4OwoJd2lkdGg6IDE4MHB4OwoJaGVpZ2h0OiAxODBweDsKCWJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7Cn0KLmJzZWdfY2loIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCXdpZHRoOiAyMDBweDsKCWhlaWdodDogNjBweDsKCXRleHQtYWxpZ246IGNlbnRlcjsKCWZvbnQtc2l6ZTogMTZweDsKfQouYnNlZ19idG5fYmdfbW91c2VsZWF2ZSB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjM0I4Q0ZGOwp9Ci5ic2VnX2J0bl9iZ19tb3VzZWVudGVyIHsKCWJhY2tncm91bmQtY29sb3I6ICM3RUIyRkY7Cn0KLmJzZWdfY01FTUVGIHsKCW1hcmdpbjogMCA4cHghaW1wb3J0YW50Owp9Ci5ic2VnX25pIHsKCXdpZHRoOiAyNDBweDsKfQouYnNlZ19mX2hvbWUgewoJbWFyZ2luLWxlZnQ6IDAhaW1wb3J0YW50Owp9Ci5ic2VnX2ZfbWFpbiB7CgltYXJnaW4tbGVmdDogMjBweCFpbXBvcnRhbnQ7Cn0KLmJzZWdfZl9tYWxsIHsKCWxlZnQ6IDIwMHB4Owp9Ci5ic2VnX2ZfaG9tZSA+IC5ic2VnX3MgewoJbWFyZ2luOiAwIDAgMCAxMHB4Owp9Ci5ic2VnX2ZfbWFpbiA+IC5ic2VnX3MgewoJbWFyZ2luOiAwIDAgMCAxMHB4Owp9Ci5ic2VnX2ZfaW5pdCA+IC5ic2VnX3MgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJbWFyZ2luOiAzNXB4IDAgMCAwOwp9Ci5ic2VnX2ZfY2VudGVyID4gLmJzZWdfcyB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgltYXJnaW46IDE5cHggMCAwIDdweDsKfQouYnNlZ19mX2Vycm9yID4gLmJzZWdfcyB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgltYXJnaW46IDdweCAwIDAgODVweDsKfQouYnNlZ19mX2ZhY2UgPiAuYnNlZ19zIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCW1hcmdpbjogMTBweCAwIDAgMjAwcHg7Cn0KLmJzZWdfZl95a3AgPiAuYnNlZ19zIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCW1hcmdpbjogMTBweCAwIDAgMTBweDsKfQouYnNlZ19mX3dlbnpoYW5nID4gLmJzZWdfcyB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgltYXJnaW46IDExcHggMCAwIDUwcHg7Cn0KLmJzZWdfZl9zeCA+IC5ic2VnX3MgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJbWFyZ2luOiAxOHB4IDAgMCAyNDBweDsKfQouYnNlZ19mX25vdGxvZ2luID4gLmJzZWdfcyB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgltYXJnaW46IDE4cHggMCAwIDJweDsKfQouYnNlZ19mX2NoZWNrb3V0ID4gLmJzZWdfcyB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgltYXJnaW46IDVweCAwIDAgMTBweDsKfQouYnNlZ19mX2Rvd25sb2FkID4gLmJzZWdfcyB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgltYXJnaW46IDVweCAwIDAgNDhweDsKfQouYnNlZ19mX3ZlcnNpb24gPiAuYnNlZ19zIHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCW1hcmdpbjogNXB4IDAgMCA4NXB4Owp9Ci5ic2VnX2ZfbWFsbCA+IC5ic2VnX3MgewoJbWFyZ2luOiAwIDAgMCAzcHg7Cn0KLmJzZWdfZl9ob21lID4gLmJzZWdfcyA+IC5ic2VnX3NlbGVjdCB7CgloZWlnaHQ6IDMwcHg7Cn0KLmJzZWdfZl9tYWluID4gLmJzZWdfcyA+IC5ic2VnX3NlbGVjdCB7CgloZWlnaHQ6IDMwcHg7Cn0KLmJzZWdfZl9pbml0ID4gLmJzZWdfcyA+IC5ic2VnX3NlbGVjdCB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cgl3aWR0aDogMTAwcHg7CgloZWlnaHQ6IDMwcHg7Cn0KLmJzZWdfZl9kb3dubG9hZCA+IC5ic2VnX3MgPiAuYnNlZ19zZWxlY3QgewoJaGVpZ2h0OiAzMHB4Owp9Ci5ic2VnX2ZfdmVyc2lvbiA+IC5ic2VnX3MgPiAuYnNlZ19zZWxlY3QgewoJaGVpZ2h0OiAzMHB4Owp9Ci5ic2VnX2ZfY2hlY2tvdXQgPiAuYnNlZ19zID4gLmJzZWdfc2VsZWN0IHsKCWhlaWdodDogMzBweDsKfQouYnNlZ19mX21hbGwgPiAuYnNlZ19zID4gLmJzZWdfc2VsZWN0IHsKCWhlaWdodDogMzBweDsKfQouYnNlZ19mX2Vycm9yID4gLmJzZWdfcyA+IC5ic2VnX3NlbGVjdCB7CgloZWlnaHQ6IDMwcHg7Cn0KLmJzZWdfZl95a3AgPiAuYnNlZ19zID4gLmJzZWdfc2VsZWN0IHsKCWhlaWdodDogMzBweDsKfQouYnNlZ19mX2ZhY2UgPiAuYnNlZ19zID4gLmJzZWdfc2VsZWN0IHsKCWhlaWdodDogMzBweDsKfQouYnNlZ19mX3dlbnpoYW5nID4gLmJzZWdfcyA+IC5ic2VnX3NlbGVjdCB7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgloZWlnaHQ6IDMwcHg7Cn0KLmJzZWdfZl9ub3Rsb2dpbiA+IC5ic2VnX3MgPiAuYnNlZ19zZWxlY3QgewoJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJaGVpZ2h0OiAzMHB4Owp9Ci5ic2VnX2Zfc3ggPiAuYnNlZ19zID4gLmJzZWdfc2VsZWN0IHsKCWRpc3BsYXk6IGlubGluZS1ibG9jazsKCWhlaWdodDogMzBweDsKfQouYnNlZ19mX2NlbnRlciA+IC5ic2VnX3MgPiAuYnNlZ19zZWxlY3QgewoJd2lkdGg6IDEwMHB4OwoJaGVpZ2h0OiAzMHB4Owp9Ci5ic2VnX2ZfaG9tZSA+IC5ic2VnX3MgPiAuYnNlZ19zY29udCB7Cgl3aWR0aDogMjY0cHg7CgloZWlnaHQ6IDI0cHg7Cn0KLmJzZWdfZl9tYWluID4gLmJzZWdfcyA+IC5ic2VnX3Njb250IHsKCXdpZHRoOiAyNjRweDsKCWhlaWdodDogMjRweDsKfQouYnNlZ19mX2luaXQgPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDIwMnB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2ZfZG93bmxvYWQgPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDIzNHB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2ZfdmVyc2lvbiA+IC5ic2VnX3MgPiAuYnNlZ19zY29udCB7Cgl3aWR0aDogMjM0cHg7CgloZWlnaHQ6IDI0cHg7Cn0KLmJzZWdfZl9jaGVja291dCA+IC5ic2VnX3MgPiAuYnNlZ19zY29udCB7Cgl3aWR0aDogMjM0cHg7CgloZWlnaHQ6IDI0cHg7Cn0KLmJzZWdfZl9tYWxsID4gLmJzZWdfcyA+IC5ic2VnX3Njb250IHsKCXBhZGRpbmc6IDRweCAycHg7Cgl3aWR0aDogMjE1cHg7CgloZWlnaHQ6IDIwcHg7Cglib3JkZXItbGVmdDogMXB4IHNvbGlkICMwMDA7Cn0KLmJzZWdfZl9jZW50ZXIgPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDE3NnB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2ZfZXJyb3IgPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDI1NXB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2Zfd2VuemhhbmcgPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDI2NHB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2Zfbm90bG9naW4gPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDIxNHB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2Zfc3ggPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDIxNHB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2ZfZmFjZSA+IC5ic2VnX3MgPiAuYnNlZ19zY29udCB7Cgl3aWR0aDogMjY0cHg7CgloZWlnaHQ6IDI0cHg7Cn0KLmJzZWdfZl95a3AgPiAuYnNlZ19zID4gLmJzZWdfc2NvbnQgewoJd2lkdGg6IDI2NHB4OwoJaGVpZ2h0OiAyNHB4Owp9Ci5ic2VnX2ZfaW5pdCA+IC5ic2VnX3MgPiAuYnNlZ19idG4gewoJd2lkdGg6IDQycHg7Cn0KLmJzZWdfZl9jaGVja291dCA+IC5ic2VnX3MgPiAuYnNlZ19idG4gewoJaGVpZ2h0OiAzMXB4OwoJbGluZS1oZWlnaHQ6IDMxcHg7Cn0KLmJzZWdfZl9tYWxsID4gLmJzZWdfcyA+IC5ic2VnX2J0biB7CgloZWlnaHQ6IDMwcHg7Cglmb250LXNpemU6IDE1cHg7CglsaW5lLWhlaWdodDogNHB4Owp9Ci5ic2VnX2ZfY2VudGVyID4gLmJzZWdfcyA+IC5ic2VnX2J0biB7Cglmb250LXNpemU6IDE1cHg7Cn0KLmZhdGhlcl9jZW50ZXIgPiAuYnNlZ19zID4gLmJzZWdfYnRuIHsKCWhlaWdodDogMzBweDsKCWxpbmUtaGVpZ2h0OiAzMHB4Owp9Ci5mYXRoZXJfZXJyb3IgPiAuYnNlZ19zID4gLmJzZWdfYnRuIHsKCWhlaWdodDogMzBweDsKCWxpbmUtaGVpZ2h0OiAzMHB4Owp9Ci5ic2VnX3ZlcmlmeV9pbnB1dCB7CglwYWRkaW5nLWJvdHRvbTogMjBweDsKfQouYnNlZ190Y2UgewoJcGFkZGluZzogMCA4cHghaW1wb3J0YW50Owp9Ci5ic2VnX2hlYWRlcl9jb250ZW50IHsKCXdpZHRoOiAxMTQwcHg7Cn0KLmJzZWdfbmF2X2J1dHRvbiB7CgltYXJnaW46IDAgNXB4IWltcG9ydGFudDsKfQouYnNlZ19maXJzdF9uYXZfYnV0dG9uX3N1YiB7CgltYXJnaW4tbGVmdDogMjUwcHg7Cn0KLmJzZWdfYl9ub19sbiB7CgltYXJnaW4tcmlnaHQ6IDRweCFpbXBvcnRhbnQ7Cn0KLmJzZWdfYV9hbGVydF9jIHsKCWNvbG9yOiAjMDA4MDAwOwoJZm9udC1zaXplOiAxNXB4Owp9Ci5ic2VnX25fYWxlcnRfYyB7Cgljb2xvcjogI2YwMDsKCWZvbnQtc2l6ZTogMThweDsKfQouYnNlZ19hX2JsYW5rIHsKCWNvbG9yOiBncmVlbiFpbXBvcnRhbnQ7Cgl0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSFpbXBvcnRhbnQ7Cn0KLmJzZWdfbG9va291dCB7Cgljb2xvcjogI2YwMDsKfQouYnNlZ19nZyB7CgliYWNrZ3JvdW5kLWNvbG9yOiByZWQ7Cgljb2xvcjogI2ZmZjsKfQouYnNlZ19hbGlwYXkgewoJY29sb3I6ICMyNzkwRDY7Cn0KLmJzZWdfWXVlYmFvVCB7Cgljb2xvcjogI0VCMEEwQTsKfQouYnNlZ19KZGpyIHsKCWNvbG9yOiAjRkQzNDE0Owp9Ci5ic2VnX1dlY2hhdCB7Cgljb2xvcjogIzdDQUEwRDsKfQouYnNlZ19CYWlkdVBhbiB7Cgljb2xvcjogIzJGNzNFRjsKfQouYnNlZ19UdHF3IHsKCWNvbG9yOiAjRkEzOTRFOwp9Ci5ic2VnX1R4dyB7Cgljb2xvcjogI0ZGNDQyNDsKfQouYnNlZ19EemtkIHsKCWNvbG9yOiAjQzcwMDAwOwp9Ci5ic2VnX1l0IHsKCWNvbG9yOiAjRUExMDBGOwp9Ci5ic2VnX1l6dG0gewoJY29sb3I6ICNFRTRDNDA7Cn0KLmJzZWdfVGZiIHsKCWNvbG9yOiAjRkU1MTAwOwp9Ci5ic2VnX0xxIHsKCWNvbG9yOiAjMDBCN0E4Owp9Ci5ic2VnX0h0dCB7Cgljb2xvcjogI0ZFM0Q0NDsKfQouYnNlZ19YdHQgewoJY29sb3I6ICNGRTAwMDA7Cn0KLmJzZWdfV2xrayB7Cgljb2xvcjogI0ZGMTIwRDsKfQouYnNlZ195cW0gewoJYmFja2dyb3VuZC1jb2xvcjogIzk1MEFEMzsKCWNvbG9yOiAjZmZmOwp9Ci5ic2VnX015dHQgewoJY29sb3I6ICNFODM0MjU7Cn0KLmJzZWdfRGZ0dCB7Cgljb2xvcjogI0Y5MDAwMDsKfQouYnNlZ180Mzk5IHsKCWNvbG9yOiAjMDY3NzA3Owp9Ci5ic2VnX1poIHsKCWNvbG9yOiAjMEY4OEVCOwp9Ci5ic2VnX29wdGlvbiB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjRkZGOwoJdGV4dC1hbGlnbjogY2VudGVyOwoJdGV4dC1hbGlnbi1sYXN0OiBjZW50ZXI7Cn0KLmJzZWdfb3B0aW9uXzEgewoJY29sb3I6ICM5QjBBMEY7Cglmb250LXdlaWdodDogYm9sZDsKCWJhY2tncm91bmQtY29sb3I6I2Q4ZmJkMDsKfQouYnNlZ19vcHRpb25fMiB7Cgljb2xvcjogI0YwMDsKfQouYnNlZ19vcHRpb25fMyB7Cgljb2xvcjogI0UzODYwMDsKfQouYnNlZ19vcHRpb25fNCB7Cgljb2xvcjogIzI5QzkwQTsKfQouYnNlZ19vcHRpb25fNSB7Cgljb2xvcjogIzAwQzREMzsKfQouYnNlZ19vcHRpb25fNiB7Cgljb2xvcjogIzM5MzFGRjsKfQouYnNlZ19vcHRpb25fOSB7Cgljb2xvcjogI0EwQTcwRjsKfQouYnNlZ19vcHRpb25fNyB7Cgljb2xvcjogI0FCQzsKfQouYnNlZ19vcHRpb25fOCB7Cgljb2xvcjogI2RmYzVmNzsKfQouYnNlZ196Y3p6IHsKCW1hcmdpbjogMCBhdXRvOwoJd2lkdGg6IDExNHB4OwoJaGVpZ2h0OiAzMHB4OwoJYm9yZGVyLXJhZGl1czogNXB4OwoJYmFja2dyb3VuZC1jb2xvcjogI2ZiMWQxZDsKCWNvbG9yOiB3aGl0ZTsKCXRleHQtYWxpZ246IGNlbnRlcjsKCXRleHQtaW5kZW50OiAwOwoJZm9udC1zaXplOiAxOHB4OwoJbGluZS1oZWlnaHQ6IDMwcHg7Cn0KYCk7Cn0K"},{"name":"ÁôæÂ∫¶ÁΩëÁõòÁõ¥ÈìæÊûÅÈÄü‰∏ãËΩΩÂä©ÊâãÔºàÂÖ®Êñ∞ÁâàÊú¨Ôºâ","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["biubiu00.cn"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://pan.baidu.com/*","*://pan.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703210,"data":{}},"enabled":false,"position":9,"file_url":"https://greasyfork.org/scripts/436053-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E6%9E%81%E9%80%9F%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E5%85%A8%E6%96%B0%E7%89%88%E6%9C%AC/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E6%9E%81%E9%80%9F%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B%EF%BC%88%E5%85%A8%E6%96%B0%E7%89%88%E6%9C%AC%EF%BC%89.user.js","uuid":"f72ff0f0-c2aa-440d-a648-2345c21dd786","source":"","requires":[{"meta":{"name":"sweetalert2.all.min.js","url":"https://cdn.staticfile.org/limonte-sweetalert2/11.1.9/sweetalert2.all.min.js","ts":1657118213727,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1657118213728,"mimetype":"text/javascript"},"source":"LyohIGpRdWVyeSB2My42LjAgfCAoYykgT3BlbkpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyB8IGpxdWVyeS5vcmcvbGljZW5zZSAqLwohZnVuY3Rpb24oZSx0KXsidXNlIHN0cmljdCI7Im9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJiJvYmplY3QiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9ZS5kb2N1bWVudD90KGUsITApOmZ1bmN0aW9uKGUpe2lmKCFlLmRvY3VtZW50KXRocm93IG5ldyBFcnJvcigialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudCIpO3JldHVybiB0KGUpfTp0KGUpfSgidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dGhpcyxmdW5jdGlvbihDLGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD1bXSxyPU9iamVjdC5nZXRQcm90b3R5cGVPZixzPXQuc2xpY2UsZz10LmZsYXQ/ZnVuY3Rpb24oZSl7cmV0dXJuIHQuZmxhdC5jYWxsKGUpfTpmdW5jdGlvbihlKXtyZXR1cm4gdC5jb25jYXQuYXBwbHkoW10sZSl9LHU9dC5wdXNoLGk9dC5pbmRleE9mLG49e30sbz1uLnRvU3RyaW5nLHY9bi5oYXNPd25Qcm9wZXJ0eSxhPXYudG9TdHJpbmcsbD1hLmNhbGwoT2JqZWN0KSx5PXt9LG09ZnVuY3Rpb24oZSl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGUmJiJudW1iZXIiIT10eXBlb2YgZS5ub2RlVHlwZSYmImZ1bmN0aW9uIiE9dHlwZW9mIGUuaXRlbX0seD1mdW5jdGlvbihlKXtyZXR1cm4gbnVsbCE9ZSYmZT09PWUud2luZG93fSxFPUMuZG9jdW1lbnQsYz17dHlwZTohMCxzcmM6ITAsbm9uY2U6ITAsbm9Nb2R1bGU6ITB9O2Z1bmN0aW9uIGIoZSx0LG4pe3ZhciByLGksbz0obj1ufHxFKS5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtpZihvLnRleHQ9ZSx0KWZvcihyIGluIGMpKGk9dFtyXXx8dC5nZXRBdHRyaWJ1dGUmJnQuZ2V0QXR0cmlidXRlKHIpKSYmby5zZXRBdHRyaWJ1dGUocixpKTtuLmhlYWQuYXBwZW5kQ2hpbGQobykucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvKX1mdW5jdGlvbiB3KGUpe3JldHVybiBudWxsPT1lP2UrIiI6Im9iamVjdCI9PXR5cGVvZiBlfHwiZnVuY3Rpb24iPT10eXBlb2YgZT9uW28uY2FsbChlKV18fCJvYmplY3QiOnR5cGVvZiBlfXZhciBmPSIzLjYuMCIsUz1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgUy5mbi5pbml0KGUsdCl9O2Z1bmN0aW9uIHAoZSl7dmFyIHQ9ISFlJiYibGVuZ3RoImluIGUmJmUubGVuZ3RoLG49dyhlKTtyZXR1cm4hbShlKSYmIXgoZSkmJigiYXJyYXkiPT09bnx8MD09PXR8fCJudW1iZXIiPT10eXBlb2YgdCYmMDx0JiZ0LTEgaW4gZSl9Uy5mbj1TLnByb3RvdHlwZT17anF1ZXJ5OmYsY29uc3RydWN0b3I6UyxsZW5ndGg6MCx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHMuY2FsbCh0aGlzKX0sZ2V0OmZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lP3MuY2FsbCh0aGlzKTplPDA/dGhpc1tlK3RoaXMubGVuZ3RoXTp0aGlzW2VdfSxwdXNoU3RhY2s6ZnVuY3Rpb24oZSl7dmFyIHQ9Uy5tZXJnZSh0aGlzLmNvbnN0cnVjdG9yKCksZSk7cmV0dXJuIHQucHJldk9iamVjdD10aGlzLHR9LGVhY2g6ZnVuY3Rpb24oZSl7cmV0dXJuIFMuZWFjaCh0aGlzLGUpfSxtYXA6ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFMubWFwKHRoaXMsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCxlKX0pKX0sc2xpY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2socy5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxmaXJzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKDApfSxsYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoLTEpfSxldmVuOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFMuZ3JlcCh0aGlzLGZ1bmN0aW9uKGUsdCl7cmV0dXJuKHQrMSklMn0pKX0sb2RkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKFMuZ3JlcCh0aGlzLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQlMn0pKX0sZXE6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5sZW5ndGgsbj0rZSsoZTwwP3Q6MCk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKDA8PW4mJm48dD9bdGhpc1tuXV06W10pfSxlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcmV2T2JqZWN0fHx0aGlzLmNvbnN0cnVjdG9yKCl9LHB1c2g6dSxzb3J0OnQuc29ydCxzcGxpY2U6dC5zcGxpY2V9LFMuZXh0ZW5kPVMuZm4uZXh0ZW5kPWZ1bmN0aW9uKCl7dmFyIGUsdCxuLHIsaSxvLGE9YXJndW1lbnRzWzBdfHx7fSxzPTEsdT1hcmd1bWVudHMubGVuZ3RoLGw9ITE7Zm9yKCJib29sZWFuIj09dHlwZW9mIGEmJihsPWEsYT1hcmd1bWVudHNbc118fHt9LHMrKyksIm9iamVjdCI9PXR5cGVvZiBhfHxtKGEpfHwoYT17fSkscz09PXUmJihhPXRoaXMscy0tKTtzPHU7cysrKWlmKG51bGwhPShlPWFyZ3VtZW50c1tzXSkpZm9yKHQgaW4gZSlyPWVbdF0sIl9fcHJvdG9fXyIhPT10JiZhIT09ciYmKGwmJnImJihTLmlzUGxhaW5PYmplY3Qocil8fChpPUFycmF5LmlzQXJyYXkocikpKT8obj1hW3RdLG89aSYmIUFycmF5LmlzQXJyYXkobik/W106aXx8Uy5pc1BsYWluT2JqZWN0KG4pP246e30saT0hMSxhW3RdPVMuZXh0ZW5kKGwsbyxyKSk6dm9pZCAwIT09ciYmKGFbdF09cikpO3JldHVybiBhfSxTLmV4dGVuZCh7ZXhwYW5kbzoialF1ZXJ5IisoZitNYXRoLnJhbmRvbSgpKS5yZXBsYWNlKC9cRC9nLCIiKSxpc1JlYWR5OiEwLGVycm9yOmZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihlKX0sbm9vcDpmdW5jdGlvbigpe30saXNQbGFpbk9iamVjdDpmdW5jdGlvbihlKXt2YXIgdCxuO3JldHVybiEoIWV8fCJbb2JqZWN0IE9iamVjdF0iIT09by5jYWxsKGUpKSYmKCEodD1yKGUpKXx8ImZ1bmN0aW9uIj09dHlwZW9mKG49di5jYWxsKHQsImNvbnN0cnVjdG9yIikmJnQuY29uc3RydWN0b3IpJiZhLmNhbGwobik9PT1sKX0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihlKXt2YXIgdDtmb3IodCBpbiBlKXJldHVybiExO3JldHVybiEwfSxnbG9iYWxFdmFsOmZ1bmN0aW9uKGUsdCxuKXtiKGUse25vbmNlOnQmJnQubm9uY2V9LG4pfSxlYWNoOmZ1bmN0aW9uKGUsdCl7dmFyIG4scj0wO2lmKHAoZSkpe2ZvcihuPWUubGVuZ3RoO3I8bjtyKyspaWYoITE9PT10LmNhbGwoZVtyXSxyLGVbcl0pKWJyZWFrfWVsc2UgZm9yKHIgaW4gZSlpZighMT09PXQuY2FsbChlW3JdLHIsZVtyXSkpYnJlYWs7cmV0dXJuIGV9LG1ha2VBcnJheTpmdW5jdGlvbihlLHQpe3ZhciBuPXR8fFtdO3JldHVybiBudWxsIT1lJiYocChPYmplY3QoZSkpP1MubWVyZ2Uobiwic3RyaW5nIj09dHlwZW9mIGU/W2VdOmUpOnUuY2FsbChuLGUpKSxufSxpbkFycmF5OmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbnVsbD09dD8tMTppLmNhbGwodCxlLG4pfSxtZXJnZTpmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0rdC5sZW5ndGgscj0wLGk9ZS5sZW5ndGg7cjxuO3IrKyllW2krK109dFtyXTtyZXR1cm4gZS5sZW5ndGg9aSxlfSxncmVwOmZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHI9W10saT0wLG89ZS5sZW5ndGgsYT0hbjtpPG87aSsrKSF0KGVbaV0saSkhPT1hJiZyLnB1c2goZVtpXSk7cmV0dXJuIHJ9LG1hcDpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvPTAsYT1bXTtpZihwKGUpKWZvcihyPWUubGVuZ3RoO288cjtvKyspbnVsbCE9KGk9dChlW29dLG8sbikpJiZhLnB1c2goaSk7ZWxzZSBmb3IobyBpbiBlKW51bGwhPShpPXQoZVtvXSxvLG4pKSYmYS5wdXNoKGkpO3JldHVybiBnKGEpfSxndWlkOjEsc3VwcG9ydDp5fSksImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmKFMuZm5bU3ltYm9sLml0ZXJhdG9yXT10W1N5bWJvbC5pdGVyYXRvcl0pLFMuZWFjaCgiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciBTeW1ib2wiLnNwbGl0KCIgIiksZnVuY3Rpb24oZSx0KXtuWyJbb2JqZWN0ICIrdCsiXSJdPXQudG9Mb3dlckNhc2UoKX0pO3ZhciBkPWZ1bmN0aW9uKG4pe3ZhciBlLGQsYixvLGksaCxmLGcsdyx1LGwsVCxDLGEsRSx2LHMsYyx5LFM9InNpenpsZSIrMSpuZXcgRGF0ZSxwPW4uZG9jdW1lbnQsaz0wLHI9MCxtPXVlKCkseD11ZSgpLEE9dWUoKSxOPXVlKCksaj1mdW5jdGlvbihlLHQpe3JldHVybiBlPT09dCYmKGw9ITApLDB9LEQ9e30uaGFzT3duUHJvcGVydHksdD1bXSxxPXQucG9wLEw9dC5wdXNoLEg9dC5wdXNoLE89dC5zbGljZSxQPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPTAscj1lLmxlbmd0aDtuPHI7bisrKWlmKGVbbl09PT10KXJldHVybiBuO3JldHVybi0xfSxSPSJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZCIsTT0iW1xceDIwXFx0XFxyXFxuXFxmXSIsST0iKD86XFxcXFtcXGRhLWZBLUZdezEsNn0iK00rIj98XFxcXFteXFxyXFxuXFxmXXxbXFx3LV18W15cMC1cXHg3Zl0pKyIsVz0iXFxbIitNKyIqKCIrSSsiKSg/OiIrTSsiKihbKl4kfCF+XT89KSIrTSsiKig/OicoKD86XFxcXC58W15cXFxcJ10pKiknfFwiKCg/OlxcXFwufFteXFxcXFwiXSkqKVwifCgiK0krIikpfCkiK00rIipcXF0iLEY9IjooIitJKyIpKD86XFwoKCgnKCg/OlxcXFwufFteXFxcXCddKSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcIil8KCg/OlxcXFwufFteXFxcXCgpW1xcXV18IitXKyIpKil8LiopXFwpfCkiLEI9bmV3IFJlZ0V4cChNKyIrIiwiZyIpLCQ9bmV3IFJlZ0V4cCgiXiIrTSsiK3woKD86XnxbXlxcXFxdKSg/OlxcXFwuKSopIitNKyIrJCIsImciKSxfPW5ldyBSZWdFeHAoIl4iK00rIiosIitNKyIqIiksej1uZXcgUmVnRXhwKCJeIitNKyIqKFs+K35dfCIrTSsiKSIrTSsiKiIpLFU9bmV3IFJlZ0V4cChNKyJ8PiIpLFg9bmV3IFJlZ0V4cChGKSxWPW5ldyBSZWdFeHAoIl4iK0krIiQiKSxHPXtJRDpuZXcgUmVnRXhwKCJeIygiK0krIikiKSxDTEFTUzpuZXcgUmVnRXhwKCJeXFwuKCIrSSsiKSIpLFRBRzpuZXcgUmVnRXhwKCJeKCIrSSsifFsqXSkiKSxBVFRSOm5ldyBSZWdFeHAoIl4iK1cpLFBTRVVETzpuZXcgUmVnRXhwKCJeIitGKSxDSElMRDpuZXcgUmVnRXhwKCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXCgiK00rIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiK00rIiooPzooWystXXwpIitNKyIqKFxcZCspfCkpIitNKyIqXFwpfCkiLCJpIiksYm9vbDpuZXcgUmVnRXhwKCJeKD86IitSKyIpJCIsImkiKSxuZWVkc0NvbnRleHQ6bmV3IFJlZ0V4cCgiXiIrTSsiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFwoIitNKyIqKCg/Oi1cXGQpP1xcZCopIitNKyIqXFwpfCkoPz1bXi1dfCQpIiwiaSIpfSxZPS9IVE1MJC9pLFE9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxKPS9eaFxkJC9pLEs9L15bXntdK1x7XHMqXFtuYXRpdmUgXHcvLFo9L14oPzojKFtcdy1dKyl8KFx3Kyl8XC4oW1x3LV0rKSkkLyxlZT0vWyt+XS8sdGU9bmV3IFJlZ0V4cCgiXFxcXFtcXGRhLWZBLUZdezEsNn0iK00rIj98XFxcXChbXlxcclxcblxcZl0pIiwiZyIpLG5lPWZ1bmN0aW9uKGUsdCl7dmFyIG49IjB4IitlLnNsaWNlKDEpLTY1NTM2O3JldHVybiB0fHwobjwwP1N0cmluZy5mcm9tQ2hhckNvZGUobis2NTUzNik6U3RyaW5nLmZyb21DaGFyQ29kZShuPj4xMHw1NTI5NiwxMDIzJm58NTYzMjApKX0scmU9LyhbXDAtXHgxZlx4N2ZdfF4tP1xkKXxeLSR8W15cMC1ceDFmXHg3Zi1cdUZGRkZcdy1dL2csaWU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdD8iXDAiPT09ZT8iXHVmZmZkIjplLnNsaWNlKDAsLTEpKyJcXCIrZS5jaGFyQ29kZUF0KGUubGVuZ3RoLTEpLnRvU3RyaW5nKDE2KSsiICI6IlxcIitlfSxvZT1mdW5jdGlvbigpe1QoKX0sYWU9YmUoZnVuY3Rpb24oZSl7cmV0dXJuITA9PT1lLmRpc2FibGVkJiYiZmllbGRzZXQiPT09ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpfSx7ZGlyOiJwYXJlbnROb2RlIixuZXh0OiJsZWdlbmQifSk7dHJ5e0guYXBwbHkodD1PLmNhbGwocC5jaGlsZE5vZGVzKSxwLmNoaWxkTm9kZXMpLHRbcC5jaGlsZE5vZGVzLmxlbmd0aF0ubm9kZVR5cGV9Y2F0Y2goZSl7SD17YXBwbHk6dC5sZW5ndGg/ZnVuY3Rpb24oZSx0KXtMLmFwcGx5KGUsTy5jYWxsKHQpKX06ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLmxlbmd0aCxyPTA7d2hpbGUoZVtuKytdPXRbcisrXSk7ZS5sZW5ndGg9bi0xfX19ZnVuY3Rpb24gc2UodCxlLG4scil7dmFyIGksbyxhLHMsdSxsLGMsZj1lJiZlLm93bmVyRG9jdW1lbnQscD1lP2Uubm9kZVR5cGU6OTtpZihuPW58fFtdLCJzdHJpbmciIT10eXBlb2YgdHx8IXR8fDEhPT1wJiY5IT09cCYmMTEhPT1wKXJldHVybiBuO2lmKCFyJiYoVChlKSxlPWV8fEMsRSkpe2lmKDExIT09cCYmKHU9Wi5leGVjKHQpKSlpZihpPXVbMV0pe2lmKDk9PT1wKXtpZighKGE9ZS5nZXRFbGVtZW50QnlJZChpKSkpcmV0dXJuIG47aWYoYS5pZD09PWkpcmV0dXJuIG4ucHVzaChhKSxufWVsc2UgaWYoZiYmKGE9Zi5nZXRFbGVtZW50QnlJZChpKSkmJnkoZSxhKSYmYS5pZD09PWkpcmV0dXJuIG4ucHVzaChhKSxufWVsc2V7aWYodVsyXSlyZXR1cm4gSC5hcHBseShuLGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUodCkpLG47aWYoKGk9dVszXSkmJmQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKXJldHVybiBILmFwcGx5KG4sZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGkpKSxufWlmKGQucXNhJiYhTlt0KyIgIl0mJighdnx8IXYudGVzdCh0KSkmJigxIT09cHx8Im9iamVjdCIhPT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpKXtpZihjPXQsZj1lLDE9PT1wJiYoVS50ZXN0KHQpfHx6LnRlc3QodCkpKXsoZj1lZS50ZXN0KHQpJiZ5ZShlLnBhcmVudE5vZGUpfHxlKT09PWUmJmQuc2NvcGV8fCgocz1lLmdldEF0dHJpYnV0ZSgiaWQiKSk/cz1zLnJlcGxhY2UocmUsaWUpOmUuc2V0QXR0cmlidXRlKCJpZCIscz1TKSksbz0obD1oKHQpKS5sZW5ndGg7d2hpbGUoby0tKWxbb109KHM/IiMiK3M6IjpzY29wZSIpKyIgIit4ZShsW29dKTtjPWwuam9pbigiLCIpfXRyeXtyZXR1cm4gSC5hcHBseShuLGYucXVlcnlTZWxlY3RvckFsbChjKSksbn1jYXRjaChlKXtOKHQsITApfWZpbmFsbHl7cz09PVMmJmUucmVtb3ZlQXR0cmlidXRlKCJpZCIpfX19cmV0dXJuIGcodC5yZXBsYWNlKCQsIiQxIiksZSxuLHIpfWZ1bmN0aW9uIHVlKCl7dmFyIHI9W107cmV0dXJuIGZ1bmN0aW9uIGUodCxuKXtyZXR1cm4gci5wdXNoKHQrIiAiKT5iLmNhY2hlTGVuZ3RoJiZkZWxldGUgZVtyLnNoaWZ0KCldLGVbdCsiICJdPW59fWZ1bmN0aW9uIGxlKGUpe3JldHVybiBlW1NdPSEwLGV9ZnVuY3Rpb24gY2UoZSl7dmFyIHQ9Qy5jcmVhdGVFbGVtZW50KCJmaWVsZHNldCIpO3RyeXtyZXR1cm4hIWUodCl9Y2F0Y2goZSl7cmV0dXJuITF9ZmluYWxseXt0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KSx0PW51bGx9fWZ1bmN0aW9uIGZlKGUsdCl7dmFyIG49ZS5zcGxpdCgifCIpLHI9bi5sZW5ndGg7d2hpbGUoci0tKWIuYXR0ckhhbmRsZVtuW3JdXT10fWZ1bmN0aW9uIHBlKGUsdCl7dmFyIG49dCYmZSxyPW4mJjE9PT1lLm5vZGVUeXBlJiYxPT09dC5ub2RlVHlwZSYmZS5zb3VyY2VJbmRleC10LnNvdXJjZUluZGV4O2lmKHIpcmV0dXJuIHI7aWYobil3aGlsZShuPW4ubmV4dFNpYmxpbmcpaWYobj09PXQpcmV0dXJuLTE7cmV0dXJuIGU/MTotMX1mdW5jdGlvbiBkZSh0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuImlucHV0Ij09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmZS50eXBlPT09dH19ZnVuY3Rpb24gaGUobil7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4oImlucHV0Ij09PXR8fCJidXR0b24iPT09dCkmJmUudHlwZT09PW59fWZ1bmN0aW9uIGdlKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4iZm9ybSJpbiBlP2UucGFyZW50Tm9kZSYmITE9PT1lLmRpc2FibGVkPyJsYWJlbCJpbiBlPyJsYWJlbCJpbiBlLnBhcmVudE5vZGU/ZS5wYXJlbnROb2RlLmRpc2FibGVkPT09dDplLmRpc2FibGVkPT09dDplLmlzRGlzYWJsZWQ9PT10fHxlLmlzRGlzYWJsZWQhPT0hdCYmYWUoZSk9PT10OmUuZGlzYWJsZWQ9PT10OiJsYWJlbCJpbiBlJiZlLmRpc2FibGVkPT09dH19ZnVuY3Rpb24gdmUoYSl7cmV0dXJuIGxlKGZ1bmN0aW9uKG8pe3JldHVybiBvPStvLGxlKGZ1bmN0aW9uKGUsdCl7dmFyIG4scj1hKFtdLGUubGVuZ3RoLG8pLGk9ci5sZW5ndGg7d2hpbGUoaS0tKWVbbj1yW2ldXSYmKGVbbl09ISh0W25dPWVbbl0pKX0pfSl9ZnVuY3Rpb24geWUoZSl7cmV0dXJuIGUmJiJ1bmRlZmluZWQiIT10eXBlb2YgZS5nZXRFbGVtZW50c0J5VGFnTmFtZSYmZX1mb3IoZSBpbiBkPXNlLnN1cHBvcnQ9e30saT1zZS5pc1hNTD1mdW5jdGlvbihlKXt2YXIgdD1lJiZlLm5hbWVzcGFjZVVSSSxuPWUmJihlLm93bmVyRG9jdW1lbnR8fGUpLmRvY3VtZW50RWxlbWVudDtyZXR1cm4hWS50ZXN0KHR8fG4mJm4ubm9kZU5hbWV8fCJIVE1MIil9LFQ9c2Uuc2V0RG9jdW1lbnQ9ZnVuY3Rpb24oZSl7dmFyIHQsbixyPWU/ZS5vd25lckRvY3VtZW50fHxlOnA7cmV0dXJuIHIhPUMmJjk9PT1yLm5vZGVUeXBlJiZyLmRvY3VtZW50RWxlbWVudCYmKGE9KEM9cikuZG9jdW1lbnRFbGVtZW50LEU9IWkoQykscCE9QyYmKG49Qy5kZWZhdWx0VmlldykmJm4udG9wIT09biYmKG4uYWRkRXZlbnRMaXN0ZW5lcj9uLmFkZEV2ZW50TGlzdGVuZXIoInVubG9hZCIsb2UsITEpOm4uYXR0YWNoRXZlbnQmJm4uYXR0YWNoRXZlbnQoIm9udW5sb2FkIixvZSkpLGQuc2NvcGU9Y2UoZnVuY3Rpb24oZSl7cmV0dXJuIGEuYXBwZW5kQ2hpbGQoZSkuYXBwZW5kQ2hpbGQoQy5jcmVhdGVFbGVtZW50KCJkaXYiKSksInVuZGVmaW5lZCIhPXR5cGVvZiBlLnF1ZXJ5U2VsZWN0b3JBbGwmJiFlLnF1ZXJ5U2VsZWN0b3JBbGwoIjpzY29wZSBmaWVsZHNldCBkaXYiKS5sZW5ndGh9KSxkLmF0dHJpYnV0ZXM9Y2UoZnVuY3Rpb24oZSl7cmV0dXJuIGUuY2xhc3NOYW1lPSJpIiwhZS5nZXRBdHRyaWJ1dGUoImNsYXNzTmFtZSIpfSksZC5nZXRFbGVtZW50c0J5VGFnTmFtZT1jZShmdW5jdGlvbihlKXtyZXR1cm4gZS5hcHBlbmRDaGlsZChDLmNyZWF0ZUNvbW1lbnQoIiIpKSwhZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpLmxlbmd0aH0pLGQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZT1LLnRlc3QoQy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKSxkLmdldEJ5SWQ9Y2UoZnVuY3Rpb24oZSl7cmV0dXJuIGEuYXBwZW5kQ2hpbGQoZSkuaWQ9UywhQy5nZXRFbGVtZW50c0J5TmFtZXx8IUMuZ2V0RWxlbWVudHNCeU5hbWUoUykubGVuZ3RofSksZC5nZXRCeUlkPyhiLmZpbHRlci5JRD1mdW5jdGlvbihlKXt2YXIgdD1lLnJlcGxhY2UodGUsbmUpO3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZS5nZXRBdHRyaWJ1dGUoImlkIik9PT10fX0sYi5maW5kLklEPWZ1bmN0aW9uKGUsdCl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiB0LmdldEVsZW1lbnRCeUlkJiZFKXt2YXIgbj10LmdldEVsZW1lbnRCeUlkKGUpO3JldHVybiBuP1tuXTpbXX19KTooYi5maWx0ZXIuSUQ9ZnVuY3Rpb24oZSl7dmFyIG49ZS5yZXBsYWNlKHRlLG5lKTtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9InVuZGVmaW5lZCIhPXR5cGVvZiBlLmdldEF0dHJpYnV0ZU5vZGUmJmUuZ2V0QXR0cmlidXRlTm9kZSgiaWQiKTtyZXR1cm4gdCYmdC52YWx1ZT09PW59fSxiLmZpbmQuSUQ9ZnVuY3Rpb24oZSx0KXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIHQuZ2V0RWxlbWVudEJ5SWQmJkUpe3ZhciBuLHIsaSxvPXQuZ2V0RWxlbWVudEJ5SWQoZSk7aWYobyl7aWYoKG49by5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIpKSYmbi52YWx1ZT09PWUpcmV0dXJuW29dO2k9dC5nZXRFbGVtZW50c0J5TmFtZShlKSxyPTA7d2hpbGUobz1pW3IrK10paWYoKG49by5nZXRBdHRyaWJ1dGVOb2RlKCJpZCIpKSYmbi52YWx1ZT09PWUpcmV0dXJuW29dfXJldHVybltdfX0pLGIuZmluZC5UQUc9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZT9mdW5jdGlvbihlLHQpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgdC5nZXRFbGVtZW50c0J5VGFnTmFtZT90LmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpOmQucXNhP3QucXVlcnlTZWxlY3RvckFsbChlKTp2b2lkIDB9OmZ1bmN0aW9uKGUsdCl7dmFyIG4scj1bXSxpPTAsbz10LmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpO2lmKCIqIj09PWUpe3doaWxlKG49b1tpKytdKTE9PT1uLm5vZGVUeXBlJiZyLnB1c2gobik7cmV0dXJuIHJ9cmV0dXJuIG99LGIuZmluZC5DTEFTUz1kLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmZ1bmN0aW9uKGUsdCl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiB0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJkUpcmV0dXJuIHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShlKX0scz1bXSx2PVtdLChkLnFzYT1LLnRlc3QoQy5xdWVyeVNlbGVjdG9yQWxsKSkmJihjZShmdW5jdGlvbihlKXt2YXIgdDthLmFwcGVuZENoaWxkKGUpLmlubmVySFRNTD0iPGEgaWQ9JyIrUysiJz48L2E+PHNlbGVjdCBpZD0nIitTKyItXHJcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD4iLGUucXVlcnlTZWxlY3RvckFsbCgiW21zYWxsb3djYXB0dXJlXj0nJ10iKS5sZW5ndGgmJnYucHVzaCgiWypeJF09IitNKyIqKD86Jyd8XCJcIikiKSxlLnF1ZXJ5U2VsZWN0b3JBbGwoIltzZWxlY3RlZF0iKS5sZW5ndGh8fHYucHVzaCgiXFxbIitNKyIqKD86dmFsdWV8IitSKyIpIiksZS5xdWVyeVNlbGVjdG9yQWxsKCJbaWR+PSIrUysiLV0iKS5sZW5ndGh8fHYucHVzaCgifj0iKSwodD1DLmNyZWF0ZUVsZW1lbnQoImlucHV0IikpLnNldEF0dHJpYnV0ZSgibmFtZSIsIiIpLGUuYXBwZW5kQ2hpbGQodCksZS5xdWVyeVNlbGVjdG9yQWxsKCJbbmFtZT0nJ10iKS5sZW5ndGh8fHYucHVzaCgiXFxbIitNKyIqbmFtZSIrTSsiKj0iK00rIiooPzonJ3xcIlwiKSIpLGUucXVlcnlTZWxlY3RvckFsbCgiOmNoZWNrZWQiKS5sZW5ndGh8fHYucHVzaCgiOmNoZWNrZWQiKSxlLnF1ZXJ5U2VsZWN0b3JBbGwoImEjIitTKyIrKiIpLmxlbmd0aHx8di5wdXNoKCIuIy4rWyt+XSIpLGUucXVlcnlTZWxlY3RvckFsbCgiXFxcZiIpLHYucHVzaCgiW1xcclxcblxcZl0iKX0pLGNlKGZ1bmN0aW9uKGUpe2UuaW5uZXJIVE1MPSI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPjxzZWxlY3QgZGlzYWJsZWQ9J2Rpc2FibGVkJz48b3B0aW9uLz48L3NlbGVjdD4iO3ZhciB0PUMuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTt0LnNldEF0dHJpYnV0ZSgidHlwZSIsImhpZGRlbiIpLGUuYXBwZW5kQ2hpbGQodCkuc2V0QXR0cmlidXRlKCJuYW1lIiwiRCIpLGUucXVlcnlTZWxlY3RvckFsbCgiW25hbWU9ZF0iKS5sZW5ndGgmJnYucHVzaCgibmFtZSIrTSsiKlsqXiR8IX5dPz0iKSwyIT09ZS5xdWVyeVNlbGVjdG9yQWxsKCI6ZW5hYmxlZCIpLmxlbmd0aCYmdi5wdXNoKCI6ZW5hYmxlZCIsIjpkaXNhYmxlZCIpLGEuYXBwZW5kQ2hpbGQoZSkuZGlzYWJsZWQ9ITAsMiE9PWUucXVlcnlTZWxlY3RvckFsbCgiOmRpc2FibGVkIikubGVuZ3RoJiZ2LnB1c2goIjplbmFibGVkIiwiOmRpc2FibGVkIiksZS5xdWVyeVNlbGVjdG9yQWxsKCIqLDp4Iiksdi5wdXNoKCIsLio6Iil9KSksKGQubWF0Y2hlc1NlbGVjdG9yPUsudGVzdChjPWEubWF0Y2hlc3x8YS53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fGEubW96TWF0Y2hlc1NlbGVjdG9yfHxhLm9NYXRjaGVzU2VsZWN0b3J8fGEubXNNYXRjaGVzU2VsZWN0b3IpKSYmY2UoZnVuY3Rpb24oZSl7ZC5kaXNjb25uZWN0ZWRNYXRjaD1jLmNhbGwoZSwiKiIpLGMuY2FsbChlLCJbcyE9JyddOngiKSxzLnB1c2goIiE9IixGKX0pLHY9di5sZW5ndGgmJm5ldyBSZWdFeHAodi5qb2luKCJ8IikpLHM9cy5sZW5ndGgmJm5ldyBSZWdFeHAocy5qb2luKCJ8IikpLHQ9Sy50ZXN0KGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24pLHk9dHx8Sy50ZXN0KGEuY29udGFpbnMpP2Z1bmN0aW9uKGUsdCl7dmFyIG49OT09PWUubm9kZVR5cGU/ZS5kb2N1bWVudEVsZW1lbnQ6ZSxyPXQmJnQucGFyZW50Tm9kZTtyZXR1cm4gZT09PXJ8fCEoIXJ8fDEhPT1yLm5vZGVUeXBlfHwhKG4uY29udGFpbnM/bi5jb250YWlucyhyKTplLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uJiYxNiZlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHIpKSl9OmZ1bmN0aW9uKGUsdCl7aWYodCl3aGlsZSh0PXQucGFyZW50Tm9kZSlpZih0PT09ZSlyZXR1cm4hMDtyZXR1cm4hMX0saj10P2Z1bmN0aW9uKGUsdCl7aWYoZT09PXQpcmV0dXJuIGw9ITAsMDt2YXIgbj0hZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbi0hdC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtyZXR1cm4gbnx8KDEmKG49KGUub3duZXJEb2N1bWVudHx8ZSk9PSh0Lm93bmVyRG9jdW1lbnR8fHQpP2UuY29tcGFyZURvY3VtZW50UG9zaXRpb24odCk6MSl8fCFkLnNvcnREZXRhY2hlZCYmdC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihlKT09PW4/ZT09Q3x8ZS5vd25lckRvY3VtZW50PT1wJiZ5KHAsZSk/LTE6dD09Q3x8dC5vd25lckRvY3VtZW50PT1wJiZ5KHAsdCk/MTp1P1AodSxlKS1QKHUsdCk6MDo0Jm4/LTE6MSl9OmZ1bmN0aW9uKGUsdCl7aWYoZT09PXQpcmV0dXJuIGw9ITAsMDt2YXIgbixyPTAsaT1lLnBhcmVudE5vZGUsbz10LnBhcmVudE5vZGUsYT1bZV0scz1bdF07aWYoIWl8fCFvKXJldHVybiBlPT1DPy0xOnQ9PUM/MTppPy0xOm8/MTp1P1AodSxlKS1QKHUsdCk6MDtpZihpPT09bylyZXR1cm4gcGUoZSx0KTtuPWU7d2hpbGUobj1uLnBhcmVudE5vZGUpYS51bnNoaWZ0KG4pO249dDt3aGlsZShuPW4ucGFyZW50Tm9kZSlzLnVuc2hpZnQobik7d2hpbGUoYVtyXT09PXNbcl0pcisrO3JldHVybiByP3BlKGFbcl0sc1tyXSk6YVtyXT09cD8tMTpzW3JdPT1wPzE6MH0pLEN9LHNlLm1hdGNoZXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gc2UoZSxudWxsLG51bGwsdCl9LHNlLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihlLHQpe2lmKFQoZSksZC5tYXRjaGVzU2VsZWN0b3ImJkUmJiFOW3QrIiAiXSYmKCFzfHwhcy50ZXN0KHQpKSYmKCF2fHwhdi50ZXN0KHQpKSl0cnl7dmFyIG49Yy5jYWxsKGUsdCk7aWYobnx8ZC5kaXNjb25uZWN0ZWRNYXRjaHx8ZS5kb2N1bWVudCYmMTEhPT1lLmRvY3VtZW50Lm5vZGVUeXBlKXJldHVybiBufWNhdGNoKGUpe04odCwhMCl9cmV0dXJuIDA8c2UodCxDLG51bGwsW2VdKS5sZW5ndGh9LHNlLmNvbnRhaW5zPWZ1bmN0aW9uKGUsdCl7cmV0dXJuKGUub3duZXJEb2N1bWVudHx8ZSkhPUMmJlQoZSkseShlLHQpfSxzZS5hdHRyPWZ1bmN0aW9uKGUsdCl7KGUub3duZXJEb2N1bWVudHx8ZSkhPUMmJlQoZSk7dmFyIG49Yi5hdHRySGFuZGxlW3QudG9Mb3dlckNhc2UoKV0scj1uJiZELmNhbGwoYi5hdHRySGFuZGxlLHQudG9Mb3dlckNhc2UoKSk/bihlLHQsIUUpOnZvaWQgMDtyZXR1cm4gdm9pZCAwIT09cj9yOmQuYXR0cmlidXRlc3x8IUU/ZS5nZXRBdHRyaWJ1dGUodCk6KHI9ZS5nZXRBdHRyaWJ1dGVOb2RlKHQpKSYmci5zcGVjaWZpZWQ/ci52YWx1ZTpudWxsfSxzZS5lc2NhcGU9ZnVuY3Rpb24oZSl7cmV0dXJuKGUrIiIpLnJlcGxhY2UocmUsaWUpfSxzZS5lcnJvcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246ICIrZSl9LHNlLnVuaXF1ZVNvcnQ9ZnVuY3Rpb24oZSl7dmFyIHQsbj1bXSxyPTAsaT0wO2lmKGw9IWQuZGV0ZWN0RHVwbGljYXRlcyx1PSFkLnNvcnRTdGFibGUmJmUuc2xpY2UoMCksZS5zb3J0KGopLGwpe3doaWxlKHQ9ZVtpKytdKXQ9PT1lW2ldJiYocj1uLnB1c2goaSkpO3doaWxlKHItLSllLnNwbGljZShuW3JdLDEpfXJldHVybiB1PW51bGwsZX0sbz1zZS5nZXRUZXh0PWZ1bmN0aW9uKGUpe3ZhciB0LG49IiIscj0wLGk9ZS5ub2RlVHlwZTtpZihpKXtpZigxPT09aXx8OT09PWl8fDExPT09aSl7aWYoInN0cmluZyI9PXR5cGVvZiBlLnRleHRDb250ZW50KXJldHVybiBlLnRleHRDb250ZW50O2ZvcihlPWUuZmlyc3RDaGlsZDtlO2U9ZS5uZXh0U2libGluZyluKz1vKGUpfWVsc2UgaWYoMz09PWl8fDQ9PT1pKXJldHVybiBlLm5vZGVWYWx1ZX1lbHNlIHdoaWxlKHQ9ZVtyKytdKW4rPW8odCk7cmV0dXJuIG59LChiPXNlLnNlbGVjdG9ycz17Y2FjaGVMZW5ndGg6NTAsY3JlYXRlUHNldWRvOmxlLG1hdGNoOkcsYXR0ckhhbmRsZTp7fSxmaW5kOnt9LHJlbGF0aXZlOnsiPiI6e2RpcjoicGFyZW50Tm9kZSIsZmlyc3Q6ITB9LCIgIjp7ZGlyOiJwYXJlbnROb2RlIn0sIisiOntkaXI6InByZXZpb3VzU2libGluZyIsZmlyc3Q6ITB9LCJ+Ijp7ZGlyOiJwcmV2aW91c1NpYmxpbmcifX0scHJlRmlsdGVyOntBVFRSOmZ1bmN0aW9uKGUpe3JldHVybiBlWzFdPWVbMV0ucmVwbGFjZSh0ZSxuZSksZVszXT0oZVszXXx8ZVs0XXx8ZVs1XXx8IiIpLnJlcGxhY2UodGUsbmUpLCJ+PSI9PT1lWzJdJiYoZVszXT0iICIrZVszXSsiICIpLGUuc2xpY2UoMCw0KX0sQ0hJTEQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGVbMV09ZVsxXS50b0xvd2VyQ2FzZSgpLCJudGgiPT09ZVsxXS5zbGljZSgwLDMpPyhlWzNdfHxzZS5lcnJvcihlWzBdKSxlWzRdPSsoZVs0XT9lWzVdKyhlWzZdfHwxKToyKigiZXZlbiI9PT1lWzNdfHwib2RkIj09PWVbM10pKSxlWzVdPSsoZVs3XStlWzhdfHwib2RkIj09PWVbM10pKTplWzNdJiZzZS5lcnJvcihlWzBdKSxlfSxQU0VVRE86ZnVuY3Rpb24oZSl7dmFyIHQsbj0hZVs2XSYmZVsyXTtyZXR1cm4gRy5DSElMRC50ZXN0KGVbMF0pP251bGw6KGVbM10/ZVsyXT1lWzRdfHxlWzVdfHwiIjpuJiZYLnRlc3QobikmJih0PWgobiwhMCkpJiYodD1uLmluZGV4T2YoIikiLG4ubGVuZ3RoLXQpLW4ubGVuZ3RoKSYmKGVbMF09ZVswXS5zbGljZSgwLHQpLGVbMl09bi5zbGljZSgwLHQpKSxlLnNsaWNlKDAsMykpfX0sZmlsdGVyOntUQUc6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXBsYWNlKHRlLG5lKS50b0xvd2VyQ2FzZSgpO3JldHVybiIqIj09PWU/ZnVuY3Rpb24oKXtyZXR1cm4hMH06ZnVuY3Rpb24oZSl7cmV0dXJuIGUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXR9fSxDTEFTUzpmdW5jdGlvbihlKXt2YXIgdD1tW2UrIiAiXTtyZXR1cm4gdHx8KHQ9bmV3IFJlZ0V4cCgiKF58IitNKyIpIitlKyIoIitNKyJ8JCkiKSkmJm0oZSxmdW5jdGlvbihlKXtyZXR1cm4gdC50ZXN0KCJzdHJpbmciPT10eXBlb2YgZS5jbGFzc05hbWUmJmUuY2xhc3NOYW1lfHwidW5kZWZpbmVkIiE9dHlwZW9mIGUuZ2V0QXR0cmlidXRlJiZlLmdldEF0dHJpYnV0ZSgiY2xhc3MiKXx8IiIpfSl9LEFUVFI6ZnVuY3Rpb24obixyLGkpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgdD1zZS5hdHRyKGUsbik7cmV0dXJuIG51bGw9PXQ/IiE9Ij09PXI6IXJ8fCh0Kz0iIiwiPSI9PT1yP3Q9PT1pOiIhPSI9PT1yP3QhPT1pOiJePSI9PT1yP2kmJjA9PT10LmluZGV4T2YoaSk6Iio9Ij09PXI/aSYmLTE8dC5pbmRleE9mKGkpOiIkPSI9PT1yP2kmJnQuc2xpY2UoLWkubGVuZ3RoKT09PWk6In49Ij09PXI/LTE8KCIgIit0LnJlcGxhY2UoQiwiICIpKyIgIikuaW5kZXhPZihpKToifD0iPT09ciYmKHQ9PT1pfHx0LnNsaWNlKDAsaS5sZW5ndGgrMSk9PT1pKyItIikpfX0sQ0hJTEQ6ZnVuY3Rpb24oaCxlLHQsZyx2KXt2YXIgeT0ibnRoIiE9PWguc2xpY2UoMCwzKSxtPSJsYXN0IiE9PWguc2xpY2UoLTQpLHg9Im9mLXR5cGUiPT09ZTtyZXR1cm4gMT09PWcmJjA9PT12P2Z1bmN0aW9uKGUpe3JldHVybiEhZS5wYXJlbnROb2RlfTpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGEscyx1LGw9eSE9PW0/Im5leHRTaWJsaW5nIjoicHJldmlvdXNTaWJsaW5nIixjPWUucGFyZW50Tm9kZSxmPXgmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxwPSFuJiYheCxkPSExO2lmKGMpe2lmKHkpe3doaWxlKGwpe2E9ZTt3aGlsZShhPWFbbF0paWYoeD9hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1mOjE9PT1hLm5vZGVUeXBlKXJldHVybiExO3U9bD0ib25seSI9PT1oJiYhdSYmIm5leHRTaWJsaW5nIn1yZXR1cm4hMH1pZih1PVttP2MuZmlyc3RDaGlsZDpjLmxhc3RDaGlsZF0sbSYmcCl7ZD0ocz0ocj0oaT0obz0oYT1jKVtTXXx8KGFbU109e30pKVthLnVuaXF1ZUlEXXx8KG9bYS51bmlxdWVJRF09e30pKVtoXXx8W10pWzBdPT09ayYmclsxXSkmJnJbMl0sYT1zJiZjLmNoaWxkTm9kZXNbc107d2hpbGUoYT0rK3MmJmEmJmFbbF18fChkPXM9MCl8fHUucG9wKCkpaWYoMT09PWEubm9kZVR5cGUmJisrZCYmYT09PWUpe2lbaF09W2sscyxkXTticmVha319ZWxzZSBpZihwJiYoZD1zPShyPShpPShvPShhPWUpW1NdfHwoYVtTXT17fSkpW2EudW5pcXVlSURdfHwob1thLnVuaXF1ZUlEXT17fSkpW2hdfHxbXSlbMF09PT1rJiZyWzFdKSwhMT09PWQpd2hpbGUoYT0rK3MmJmEmJmFbbF18fChkPXM9MCl8fHUucG9wKCkpaWYoKHg/YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09ZjoxPT09YS5ub2RlVHlwZSkmJisrZCYmKHAmJigoaT0obz1hW1NdfHwoYVtTXT17fSkpW2EudW5pcXVlSURdfHwob1thLnVuaXF1ZUlEXT17fSkpW2hdPVtrLGRdKSxhPT09ZSkpYnJlYWs7cmV0dXJuKGQtPXYpPT09Z3x8ZCVnPT0wJiYwPD1kL2d9fX0sUFNFVURPOmZ1bmN0aW9uKGUsbyl7dmFyIHQsYT1iLnBzZXVkb3NbZV18fGIuc2V0RmlsdGVyc1tlLnRvTG93ZXJDYXNlKCldfHxzZS5lcnJvcigidW5zdXBwb3J0ZWQgcHNldWRvOiAiK2UpO3JldHVybiBhW1NdP2Eobyk6MTxhLmxlbmd0aD8odD1bZSxlLCIiLG9dLGIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eShlLnRvTG93ZXJDYXNlKCkpP2xlKGZ1bmN0aW9uKGUsdCl7dmFyIG4scj1hKGUsbyksaT1yLmxlbmd0aDt3aGlsZShpLS0pZVtuPVAoZSxyW2ldKV09ISh0W25dPXJbaV0pfSk6ZnVuY3Rpb24oZSl7cmV0dXJuIGEoZSwwLHQpfSk6YX19LHBzZXVkb3M6e25vdDpsZShmdW5jdGlvbihlKXt2YXIgcj1bXSxpPVtdLHM9ZihlLnJlcGxhY2UoJCwiJDEiKSk7cmV0dXJuIHNbU10/bGUoZnVuY3Rpb24oZSx0LG4scil7dmFyIGksbz1zKGUsbnVsbCxyLFtdKSxhPWUubGVuZ3RoO3doaWxlKGEtLSkoaT1vW2FdKSYmKGVbYV09ISh0W2FdPWkpKX0pOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gclswXT1lLHMocixudWxsLG4saSksclswXT1udWxsLCFpLnBvcCgpfX0pLGhhczpsZShmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIDA8c2UodCxlKS5sZW5ndGh9fSksY29udGFpbnM6bGUoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dC5yZXBsYWNlKHRlLG5lKSxmdW5jdGlvbihlKXtyZXR1cm4tMTwoZS50ZXh0Q29udGVudHx8byhlKSkuaW5kZXhPZih0KX19KSxsYW5nOmxlKGZ1bmN0aW9uKG4pe3JldHVybiBWLnRlc3Qobnx8IiIpfHxzZS5lcnJvcigidW5zdXBwb3J0ZWQgbGFuZzogIituKSxuPW4ucmVwbGFjZSh0ZSxuZSkudG9Mb3dlckNhc2UoKSxmdW5jdGlvbihlKXt2YXIgdDtkb3tpZih0PUU/ZS5sYW5nOmUuZ2V0QXR0cmlidXRlKCJ4bWw6bGFuZyIpfHxlLmdldEF0dHJpYnV0ZSgibGFuZyIpKXJldHVybih0PXQudG9Mb3dlckNhc2UoKSk9PT1ufHwwPT09dC5pbmRleE9mKG4rIi0iKX13aGlsZSgoZT1lLnBhcmVudE5vZGUpJiYxPT09ZS5ub2RlVHlwZSk7cmV0dXJuITF9fSksdGFyZ2V0OmZ1bmN0aW9uKGUpe3ZhciB0PW4ubG9jYXRpb24mJm4ubG9jYXRpb24uaGFzaDtyZXR1cm4gdCYmdC5zbGljZSgxKT09PWUuaWR9LHJvb3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT1hfSxmb2N1czpmdW5jdGlvbihlKXtyZXR1cm4gZT09PUMuYWN0aXZlRWxlbWVudCYmKCFDLmhhc0ZvY3VzfHxDLmhhc0ZvY3VzKCkpJiYhIShlLnR5cGV8fGUuaHJlZnx8fmUudGFiSW5kZXgpfSxlbmFibGVkOmdlKCExKSxkaXNhYmxlZDpnZSghMCksY2hlY2tlZDpmdW5jdGlvbihlKXt2YXIgdD1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuImlucHV0Ij09PXQmJiEhZS5jaGVja2VkfHwib3B0aW9uIj09PXQmJiEhZS5zZWxlY3RlZH0sc2VsZWN0ZWQ6ZnVuY3Rpb24oZSl7cmV0dXJuIGUucGFyZW50Tm9kZSYmZS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgsITA9PT1lLnNlbGVjdGVkfSxlbXB0eTpmdW5jdGlvbihlKXtmb3IoZT1lLmZpcnN0Q2hpbGQ7ZTtlPWUubmV4dFNpYmxpbmcpaWYoZS5ub2RlVHlwZTw2KXJldHVybiExO3JldHVybiEwfSxwYXJlbnQ6ZnVuY3Rpb24oZSl7cmV0dXJuIWIucHNldWRvcy5lbXB0eShlKX0saGVhZGVyOmZ1bmN0aW9uKGUpe3JldHVybiBKLnRlc3QoZS5ub2RlTmFtZSl9LGlucHV0OmZ1bmN0aW9uKGUpe3JldHVybiBRLnRlc3QoZS5ub2RlTmFtZSl9LGJ1dHRvbjpmdW5jdGlvbihlKXt2YXIgdD1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuImlucHV0Ij09PXQmJiJidXR0b24iPT09ZS50eXBlfHwiYnV0dG9uIj09PXR9LHRleHQ6ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuImlucHV0Ij09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmInRleHQiPT09ZS50eXBlJiYobnVsbD09KHQ9ZS5nZXRBdHRyaWJ1dGUoInR5cGUiKSl8fCJ0ZXh0Ij09PXQudG9Mb3dlckNhc2UoKSl9LGZpcnN0OnZlKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDp2ZShmdW5jdGlvbihlLHQpe3JldHVyblt0LTFdfSksZXE6dmUoZnVuY3Rpb24oZSx0LG4pe3JldHVybltuPDA/bit0Om5dfSksZXZlbjp2ZShmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0wO248dDtuKz0yKWUucHVzaChuKTtyZXR1cm4gZX0pLG9kZDp2ZShmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0xO248dDtuKz0yKWUucHVzaChuKTtyZXR1cm4gZX0pLGx0OnZlKGZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHI9bjwwP24rdDp0PG4/dDpuOzA8PS0tcjspZS5wdXNoKHIpO3JldHVybiBlfSksZ3Q6dmUoZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcj1uPDA/bit0Om47KytyPHQ7KWUucHVzaChyKTtyZXR1cm4gZX0pfX0pLnBzZXVkb3MubnRoPWIucHNldWRvcy5lcSx7cmFkaW86ITAsY2hlY2tib3g6ITAsZmlsZTohMCxwYXNzd29yZDohMCxpbWFnZTohMH0pYi5wc2V1ZG9zW2VdPWRlKGUpO2ZvcihlIGlue3N1Ym1pdDohMCxyZXNldDohMH0pYi5wc2V1ZG9zW2VdPWhlKGUpO2Z1bmN0aW9uIG1lKCl7fWZ1bmN0aW9uIHhlKGUpe2Zvcih2YXIgdD0wLG49ZS5sZW5ndGgscj0iIjt0PG47dCsrKXIrPWVbdF0udmFsdWU7cmV0dXJuIHJ9ZnVuY3Rpb24gYmUocyxlLHQpe3ZhciB1PWUuZGlyLGw9ZS5uZXh0LGM9bHx8dSxmPXQmJiJwYXJlbnROb2RlIj09PWMscD1yKys7cmV0dXJuIGUuZmlyc3Q/ZnVuY3Rpb24oZSx0LG4pe3doaWxlKGU9ZVt1XSlpZigxPT09ZS5ub2RlVHlwZXx8ZilyZXR1cm4gcyhlLHQsbik7cmV0dXJuITF9OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYT1bayxwXTtpZihuKXt3aGlsZShlPWVbdV0paWYoKDE9PT1lLm5vZGVUeXBlfHxmKSYmcyhlLHQsbikpcmV0dXJuITB9ZWxzZSB3aGlsZShlPWVbdV0paWYoMT09PWUubm9kZVR5cGV8fGYpaWYoaT0obz1lW1NdfHwoZVtTXT17fSkpW2UudW5pcXVlSURdfHwob1tlLnVuaXF1ZUlEXT17fSksbCYmbD09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSllPWVbdV18fGU7ZWxzZXtpZigocj1pW2NdKSYmclswXT09PWsmJnJbMV09PT1wKXJldHVybiBhWzJdPXJbMl07aWYoKGlbY109YSlbMl09cyhlLHQsbikpcmV0dXJuITB9cmV0dXJuITF9fWZ1bmN0aW9uIHdlKGkpe3JldHVybiAxPGkubGVuZ3RoP2Z1bmN0aW9uKGUsdCxuKXt2YXIgcj1pLmxlbmd0aDt3aGlsZShyLS0paWYoIWlbcl0oZSx0LG4pKXJldHVybiExO3JldHVybiEwfTppWzBdfWZ1bmN0aW9uIFRlKGUsdCxuLHIsaSl7Zm9yKHZhciBvLGE9W10scz0wLHU9ZS5sZW5ndGgsbD1udWxsIT10O3M8dTtzKyspKG89ZVtzXSkmJihuJiYhbihvLHIsaSl8fChhLnB1c2gobyksbCYmdC5wdXNoKHMpKSk7cmV0dXJuIGF9ZnVuY3Rpb24gQ2UoZCxoLGcsdix5LGUpe3JldHVybiB2JiYhdltTXSYmKHY9Q2UodikpLHkmJiF5W1NdJiYoeT1DZSh5LGUpKSxsZShmdW5jdGlvbihlLHQsbixyKXt2YXIgaSxvLGEscz1bXSx1PVtdLGw9dC5sZW5ndGgsYz1lfHxmdW5jdGlvbihlLHQsbil7Zm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7cisrKXNlKGUsdFtyXSxuKTtyZXR1cm4gbn0oaHx8IioiLG4ubm9kZVR5cGU/W25dOm4sW10pLGY9IWR8fCFlJiZoP2M6VGUoYyxzLGQsbixyKSxwPWc/eXx8KGU/ZDpsfHx2KT9bXTp0OmY7aWYoZyYmZyhmLHAsbixyKSx2KXtpPVRlKHAsdSksdihpLFtdLG4sciksbz1pLmxlbmd0aDt3aGlsZShvLS0pKGE9aVtvXSkmJihwW3Vbb11dPSEoZlt1W29dXT1hKSl9aWYoZSl7aWYoeXx8ZCl7aWYoeSl7aT1bXSxvPXAubGVuZ3RoO3doaWxlKG8tLSkoYT1wW29dKSYmaS5wdXNoKGZbb109YSk7eShudWxsLHA9W10saSxyKX1vPXAubGVuZ3RoO3doaWxlKG8tLSkoYT1wW29dKSYmLTE8KGk9eT9QKGUsYSk6c1tvXSkmJihlW2ldPSEodFtpXT1hKSl9fWVsc2UgcD1UZShwPT09dD9wLnNwbGljZShsLHAubGVuZ3RoKTpwKSx5P3kobnVsbCx0LHAscik6SC5hcHBseSh0LHApfSl9ZnVuY3Rpb24gRWUoZSl7Zm9yKHZhciBpLHQsbixyPWUubGVuZ3RoLG89Yi5yZWxhdGl2ZVtlWzBdLnR5cGVdLGE9b3x8Yi5yZWxhdGl2ZVsiICJdLHM9bz8xOjAsdT1iZShmdW5jdGlvbihlKXtyZXR1cm4gZT09PWl9LGEsITApLGw9YmUoZnVuY3Rpb24oZSl7cmV0dXJuLTE8UChpLGUpfSxhLCEwKSxjPVtmdW5jdGlvbihlLHQsbil7dmFyIHI9IW8mJihufHx0IT09dyl8fCgoaT10KS5ub2RlVHlwZT91KGUsdCxuKTpsKGUsdCxuKSk7cmV0dXJuIGk9bnVsbCxyfV07czxyO3MrKylpZih0PWIucmVsYXRpdmVbZVtzXS50eXBlXSljPVtiZSh3ZShjKSx0KV07ZWxzZXtpZigodD1iLmZpbHRlcltlW3NdLnR5cGVdLmFwcGx5KG51bGwsZVtzXS5tYXRjaGVzKSlbU10pe2ZvcihuPSsrcztuPHI7bisrKWlmKGIucmVsYXRpdmVbZVtuXS50eXBlXSlicmVhaztyZXR1cm4gQ2UoMTxzJiZ3ZShjKSwxPHMmJnhlKGUuc2xpY2UoMCxzLTEpLmNvbmNhdCh7dmFsdWU6IiAiPT09ZVtzLTJdLnR5cGU/IioiOiIifSkpLnJlcGxhY2UoJCwiJDEiKSx0LHM8biYmRWUoZS5zbGljZShzLG4pKSxuPHImJkVlKGU9ZS5zbGljZShuKSksbjxyJiZ4ZShlKSl9Yy5wdXNoKHQpfXJldHVybiB3ZShjKX1yZXR1cm4gbWUucHJvdG90eXBlPWIuZmlsdGVycz1iLnBzZXVkb3MsYi5zZXRGaWx0ZXJzPW5ldyBtZSxoPXNlLnRva2VuaXplPWZ1bmN0aW9uKGUsdCl7dmFyIG4scixpLG8sYSxzLHUsbD14W2UrIiAiXTtpZihsKXJldHVybiB0PzA6bC5zbGljZSgwKTthPWUscz1bXSx1PWIucHJlRmlsdGVyO3doaWxlKGEpe2ZvcihvIGluIG4mJiEocj1fLmV4ZWMoYSkpfHwociYmKGE9YS5zbGljZShyWzBdLmxlbmd0aCl8fGEpLHMucHVzaChpPVtdKSksbj0hMSwocj16LmV4ZWMoYSkpJiYobj1yLnNoaWZ0KCksaS5wdXNoKHt2YWx1ZTpuLHR5cGU6clswXS5yZXBsYWNlKCQsIiAiKX0pLGE9YS5zbGljZShuLmxlbmd0aCkpLGIuZmlsdGVyKSEocj1HW29dLmV4ZWMoYSkpfHx1W29dJiYhKHI9dVtvXShyKSl8fChuPXIuc2hpZnQoKSxpLnB1c2goe3ZhbHVlOm4sdHlwZTpvLG1hdGNoZXM6cn0pLGE9YS5zbGljZShuLmxlbmd0aCkpO2lmKCFuKWJyZWFrfXJldHVybiB0P2EubGVuZ3RoOmE/c2UuZXJyb3IoZSk6eChlLHMpLnNsaWNlKDApfSxmPXNlLmNvbXBpbGU9ZnVuY3Rpb24oZSx0KXt2YXIgbix2LHksbSx4LHIsaT1bXSxvPVtdLGE9QVtlKyIgIl07aWYoIWEpe3R8fCh0PWgoZSkpLG49dC5sZW5ndGg7d2hpbGUobi0tKShhPUVlKHRbbl0pKVtTXT9pLnB1c2goYSk6by5wdXNoKGEpOyhhPUEoZSwodj1vLG09MDwoeT1pKS5sZW5ndGgseD0wPHYubGVuZ3RoLHI9ZnVuY3Rpb24oZSx0LG4scixpKXt2YXIgbyxhLHMsdT0wLGw9IjAiLGM9ZSYmW10sZj1bXSxwPXcsZD1lfHx4JiZiLmZpbmQuVEFHKCIqIixpKSxoPWsrPW51bGw9PXA/MTpNYXRoLnJhbmRvbSgpfHwuMSxnPWQubGVuZ3RoO2ZvcihpJiYodz10PT1DfHx0fHxpKTtsIT09ZyYmbnVsbCE9KG89ZFtsXSk7bCsrKXtpZih4JiZvKXthPTAsdHx8by5vd25lckRvY3VtZW50PT1DfHwoVChvKSxuPSFFKTt3aGlsZShzPXZbYSsrXSlpZihzKG8sdHx8QyxuKSl7ci5wdXNoKG8pO2JyZWFrfWkmJihrPWgpfW0mJigobz0hcyYmbykmJnUtLSxlJiZjLnB1c2gobykpfWlmKHUrPWwsbSYmbCE9PXUpe2E9MDt3aGlsZShzPXlbYSsrXSlzKGMsZix0LG4pO2lmKGUpe2lmKDA8dSl3aGlsZShsLS0pY1tsXXx8ZltsXXx8KGZbbF09cS5jYWxsKHIpKTtmPVRlKGYpfUguYXBwbHkocixmKSxpJiYhZSYmMDxmLmxlbmd0aCYmMTx1K3kubGVuZ3RoJiZzZS51bmlxdWVTb3J0KHIpfXJldHVybiBpJiYoaz1oLHc9cCksY30sbT9sZShyKTpyKSkpLnNlbGVjdG9yPWV9cmV0dXJuIGF9LGc9c2Uuc2VsZWN0PWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBpLG8sYSxzLHUsbD0iZnVuY3Rpb24iPT10eXBlb2YgZSYmZSxjPSFyJiZoKGU9bC5zZWxlY3Rvcnx8ZSk7aWYobj1ufHxbXSwxPT09Yy5sZW5ndGgpe2lmKDI8KG89Y1swXT1jWzBdLnNsaWNlKDApKS5sZW5ndGgmJiJJRCI9PT0oYT1vWzBdKS50eXBlJiY5PT09dC5ub2RlVHlwZSYmRSYmYi5yZWxhdGl2ZVtvWzFdLnR5cGVdKXtpZighKHQ9KGIuZmluZC5JRChhLm1hdGNoZXNbMF0ucmVwbGFjZSh0ZSxuZSksdCl8fFtdKVswXSkpcmV0dXJuIG47bCYmKHQ9dC5wYXJlbnROb2RlKSxlPWUuc2xpY2Uoby5zaGlmdCgpLnZhbHVlLmxlbmd0aCl9aT1HLm5lZWRzQ29udGV4dC50ZXN0KGUpPzA6by5sZW5ndGg7d2hpbGUoaS0tKXtpZihhPW9baV0sYi5yZWxhdGl2ZVtzPWEudHlwZV0pYnJlYWs7aWYoKHU9Yi5maW5kW3NdKSYmKHI9dShhLm1hdGNoZXNbMF0ucmVwbGFjZSh0ZSxuZSksZWUudGVzdChvWzBdLnR5cGUpJiZ5ZSh0LnBhcmVudE5vZGUpfHx0KSkpe2lmKG8uc3BsaWNlKGksMSksIShlPXIubGVuZ3RoJiZ4ZShvKSkpcmV0dXJuIEguYXBwbHkobixyKSxuO2JyZWFrfX19cmV0dXJuKGx8fGYoZSxjKSkocix0LCFFLG4sIXR8fGVlLnRlc3QoZSkmJnllKHQucGFyZW50Tm9kZSl8fHQpLG59LGQuc29ydFN0YWJsZT1TLnNwbGl0KCIiKS5zb3J0KGopLmpvaW4oIiIpPT09UyxkLmRldGVjdER1cGxpY2F0ZXM9ISFsLFQoKSxkLnNvcnREZXRhY2hlZD1jZShmdW5jdGlvbihlKXtyZXR1cm4gMSZlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKEMuY3JlYXRlRWxlbWVudCgiZmllbGRzZXQiKSl9KSxjZShmdW5jdGlvbihlKXtyZXR1cm4gZS5pbm5lckhUTUw9IjxhIGhyZWY9JyMnPjwvYT4iLCIjIj09PWUuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoImhyZWYiKX0pfHxmZSgidHlwZXxocmVmfGhlaWdodHx3aWR0aCIsZnVuY3Rpb24oZSx0LG4pe2lmKCFuKXJldHVybiBlLmdldEF0dHJpYnV0ZSh0LCJ0eXBlIj09PXQudG9Mb3dlckNhc2UoKT8xOjIpfSksZC5hdHRyaWJ1dGVzJiZjZShmdW5jdGlvbihlKXtyZXR1cm4gZS5pbm5lckhUTUw9IjxpbnB1dC8+IixlLmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCJ2YWx1ZSIsIiIpLCIiPT09ZS5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSgidmFsdWUiKX0pfHxmZSgidmFsdWUiLGZ1bmN0aW9uKGUsdCxuKXtpZighbiYmImlucHV0Ij09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSlyZXR1cm4gZS5kZWZhdWx0VmFsdWV9KSxjZShmdW5jdGlvbihlKXtyZXR1cm4gbnVsbD09ZS5nZXRBdHRyaWJ1dGUoImRpc2FibGVkIil9KXx8ZmUoUixmdW5jdGlvbihlLHQsbil7dmFyIHI7aWYoIW4pcmV0dXJuITA9PT1lW3RdP3QudG9Mb3dlckNhc2UoKToocj1lLmdldEF0dHJpYnV0ZU5vZGUodCkpJiZyLnNwZWNpZmllZD9yLnZhbHVlOm51bGx9KSxzZX0oQyk7Uy5maW5kPWQsUy5leHByPWQuc2VsZWN0b3JzLFMuZXhwclsiOiJdPVMuZXhwci5wc2V1ZG9zLFMudW5pcXVlU29ydD1TLnVuaXF1ZT1kLnVuaXF1ZVNvcnQsUy50ZXh0PWQuZ2V0VGV4dCxTLmlzWE1MRG9jPWQuaXNYTUwsUy5jb250YWlucz1kLmNvbnRhaW5zLFMuZXNjYXBlU2VsZWN0b3I9ZC5lc2NhcGU7dmFyIGg9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPVtdLGk9dm9pZCAwIT09bjt3aGlsZSgoZT1lW3RdKSYmOSE9PWUubm9kZVR5cGUpaWYoMT09PWUubm9kZVR5cGUpe2lmKGkmJlMoZSkuaXMobikpYnJlYWs7ci5wdXNoKGUpfXJldHVybiByfSxUPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPVtdO2U7ZT1lLm5leHRTaWJsaW5nKTE9PT1lLm5vZGVUeXBlJiZlIT09dCYmbi5wdXNoKGUpO3JldHVybiBufSxrPVMuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7ZnVuY3Rpb24gQShlLHQpe3JldHVybiBlLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT10LnRvTG93ZXJDYXNlKCl9dmFyIE49L148KFthLXpdW15cL1wwPjpceDIwXHRcclxuXGZdKilbXHgyMFx0XHJcblxmXSpcLz8+KD86PFwvXDE+fCkkL2k7ZnVuY3Rpb24gaihlLG4scil7cmV0dXJuIG0obik/Uy5ncmVwKGUsZnVuY3Rpb24oZSx0KXtyZXR1cm4hIW4uY2FsbChlLHQsZSkhPT1yfSk6bi5ub2RlVHlwZT9TLmdyZXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gZT09PW4hPT1yfSk6InN0cmluZyIhPXR5cGVvZiBuP1MuZ3JlcChlLGZ1bmN0aW9uKGUpe3JldHVybi0xPGkuY2FsbChuLGUpIT09cn0pOlMuZmlsdGVyKG4sZSxyKX1TLmZpbHRlcj1mdW5jdGlvbihlLHQsbil7dmFyIHI9dFswXTtyZXR1cm4gbiYmKGU9Ijpub3QoIitlKyIpIiksMT09PXQubGVuZ3RoJiYxPT09ci5ub2RlVHlwZT9TLmZpbmQubWF0Y2hlc1NlbGVjdG9yKHIsZSk/W3JdOltdOlMuZmluZC5tYXRjaGVzKGUsUy5ncmVwKHQsZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT1lLm5vZGVUeXBlfSkpfSxTLmZuLmV4dGVuZCh7ZmluZDpmdW5jdGlvbihlKXt2YXIgdCxuLHI9dGhpcy5sZW5ndGgsaT10aGlzO2lmKCJzdHJpbmciIT10eXBlb2YgZSlyZXR1cm4gdGhpcy5wdXNoU3RhY2soUyhlKS5maWx0ZXIoZnVuY3Rpb24oKXtmb3IodD0wO3Q8cjt0KyspaWYoUy5jb250YWlucyhpW3RdLHRoaXMpKXJldHVybiEwfSkpO2ZvcihuPXRoaXMucHVzaFN0YWNrKFtdKSx0PTA7dDxyO3QrKylTLmZpbmQoZSxpW3RdLG4pO3JldHVybiAxPHI/Uy51bmlxdWVTb3J0KG4pOm59LGZpbHRlcjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soaih0aGlzLGV8fFtdLCExKSl9LG5vdDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soaih0aGlzLGV8fFtdLCEwKSl9LGlzOmZ1bmN0aW9uKGUpe3JldHVybiEhaih0aGlzLCJzdHJpbmciPT10eXBlb2YgZSYmay50ZXN0KGUpP1MoZSk6ZXx8W10sITEpLmxlbmd0aH19KTt2YXIgRCxxPS9eKD86XHMqKDxbXHdcV10rPilbXj5dKnwjKFtcdy1dKykpJC87KFMuZm4uaW5pdD1mdW5jdGlvbihlLHQsbil7dmFyIHIsaTtpZighZSlyZXR1cm4gdGhpcztpZihuPW58fEQsInN0cmluZyI9PXR5cGVvZiBlKXtpZighKHI9IjwiPT09ZVswXSYmIj4iPT09ZVtlLmxlbmd0aC0xXSYmMzw9ZS5sZW5ndGg/W251bGwsZSxudWxsXTpxLmV4ZWMoZSkpfHwhclsxXSYmdClyZXR1cm4hdHx8dC5qcXVlcnk/KHR8fG4pLmZpbmQoZSk6dGhpcy5jb25zdHJ1Y3Rvcih0KS5maW5kKGUpO2lmKHJbMV0pe2lmKHQ9dCBpbnN0YW5jZW9mIFM/dFswXTp0LFMubWVyZ2UodGhpcyxTLnBhcnNlSFRNTChyWzFdLHQmJnQubm9kZVR5cGU/dC5vd25lckRvY3VtZW50fHx0OkUsITApKSxOLnRlc3QoclsxXSkmJlMuaXNQbGFpbk9iamVjdCh0KSlmb3IociBpbiB0KW0odGhpc1tyXSk/dGhpc1tyXSh0W3JdKTp0aGlzLmF0dHIocix0W3JdKTtyZXR1cm4gdGhpc31yZXR1cm4oaT1FLmdldEVsZW1lbnRCeUlkKHJbMl0pKSYmKHRoaXNbMF09aSx0aGlzLmxlbmd0aD0xKSx0aGlzfXJldHVybiBlLm5vZGVUeXBlPyh0aGlzWzBdPWUsdGhpcy5sZW5ndGg9MSx0aGlzKTptKGUpP3ZvaWQgMCE9PW4ucmVhZHk/bi5yZWFkeShlKTplKFMpOlMubWFrZUFycmF5KGUsdGhpcyl9KS5wcm90b3R5cGU9Uy5mbixEPVMoRSk7dmFyIEw9L14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sSD17Y2hpbGRyZW46ITAsY29udGVudHM6ITAsbmV4dDohMCxwcmV2OiEwfTtmdW5jdGlvbiBPKGUsdCl7d2hpbGUoKGU9ZVt0XSkmJjEhPT1lLm5vZGVUeXBlKTtyZXR1cm4gZX1TLmZuLmV4dGVuZCh7aGFzOmZ1bmN0aW9uKGUpe3ZhciB0PVMoZSx0aGlzKSxuPXQubGVuZ3RoO3JldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbigpe2Zvcih2YXIgZT0wO2U8bjtlKyspaWYoUy5jb250YWlucyh0aGlzLHRbZV0pKXJldHVybiEwfSl9LGNsb3Nlc3Q6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPTAsaT10aGlzLmxlbmd0aCxvPVtdLGE9InN0cmluZyIhPXR5cGVvZiBlJiZTKGUpO2lmKCFrLnRlc3QoZSkpZm9yKDtyPGk7cisrKWZvcihuPXRoaXNbcl07biYmbiE9PXQ7bj1uLnBhcmVudE5vZGUpaWYobi5ub2RlVHlwZTwxMSYmKGE/LTE8YS5pbmRleChuKToxPT09bi5ub2RlVHlwZSYmUy5maW5kLm1hdGNoZXNTZWxlY3RvcihuLGUpKSl7by5wdXNoKG4pO2JyZWFrfXJldHVybiB0aGlzLnB1c2hTdGFjaygxPG8ubGVuZ3RoP1MudW5pcXVlU29ydChvKTpvKX0saW5kZXg6ZnVuY3Rpb24oZSl7cmV0dXJuIGU/InN0cmluZyI9PXR5cGVvZiBlP2kuY2FsbChTKGUpLHRoaXNbMF0pOmkuY2FsbCh0aGlzLGUuanF1ZXJ5P2VbMF06ZSk6dGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlP3RoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoOi0xfSxhZGQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soUy51bmlxdWVTb3J0KFMubWVyZ2UodGhpcy5nZXQoKSxTKGUsdCkpKSl9LGFkZEJhY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuYWRkKG51bGw9PWU/dGhpcy5wcmV2T2JqZWN0OnRoaXMucHJldk9iamVjdC5maWx0ZXIoZSkpfX0pLFMuZWFjaCh7cGFyZW50OmZ1bmN0aW9uKGUpe3ZhciB0PWUucGFyZW50Tm9kZTtyZXR1cm4gdCYmMTEhPT10Lm5vZGVUeXBlP3Q6bnVsbH0scGFyZW50czpmdW5jdGlvbihlKXtyZXR1cm4gaChlLCJwYXJlbnROb2RlIil9LHBhcmVudHNVbnRpbDpmdW5jdGlvbihlLHQsbil7cmV0dXJuIGgoZSwicGFyZW50Tm9kZSIsbil9LG5leHQ6ZnVuY3Rpb24oZSl7cmV0dXJuIE8oZSwibmV4dFNpYmxpbmciKX0scHJldjpmdW5jdGlvbihlKXtyZXR1cm4gTyhlLCJwcmV2aW91c1NpYmxpbmciKX0sbmV4dEFsbDpmdW5jdGlvbihlKXtyZXR1cm4gaChlLCJuZXh0U2libGluZyIpfSxwcmV2QWxsOmZ1bmN0aW9uKGUpe3JldHVybiBoKGUsInByZXZpb3VzU2libGluZyIpfSxuZXh0VW50aWw6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBoKGUsIm5leHRTaWJsaW5nIixuKX0scHJldlVudGlsOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gaChlLCJwcmV2aW91c1NpYmxpbmciLG4pfSxzaWJsaW5nczpmdW5jdGlvbihlKXtyZXR1cm4gVCgoZS5wYXJlbnROb2RlfHx7fSkuZmlyc3RDaGlsZCxlKX0sY2hpbGRyZW46ZnVuY3Rpb24oZSl7cmV0dXJuIFQoZS5maXJzdENoaWxkKX0sY29udGVudHM6ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPWUuY29udGVudERvY3VtZW50JiZyKGUuY29udGVudERvY3VtZW50KT9lLmNvbnRlbnREb2N1bWVudDooQShlLCJ0ZW1wbGF0ZSIpJiYoZT1lLmNvbnRlbnR8fGUpLFMubWVyZ2UoW10sZS5jaGlsZE5vZGVzKSl9fSxmdW5jdGlvbihyLGkpe1MuZm5bcl09ZnVuY3Rpb24oZSx0KXt2YXIgbj1TLm1hcCh0aGlzLGksZSk7cmV0dXJuIlVudGlsIiE9PXIuc2xpY2UoLTUpJiYodD1lKSx0JiYic3RyaW5nIj09dHlwZW9mIHQmJihuPVMuZmlsdGVyKHQsbikpLDE8dGhpcy5sZW5ndGgmJihIW3JdfHxTLnVuaXF1ZVNvcnQobiksTC50ZXN0KHIpJiZuLnJldmVyc2UoKSksdGhpcy5wdXNoU3RhY2sobil9fSk7dmFyIFA9L1teXHgyMFx0XHJcblxmXSsvZztmdW5jdGlvbiBSKGUpe3JldHVybiBlfWZ1bmN0aW9uIE0oZSl7dGhyb3cgZX1mdW5jdGlvbiBJKGUsdCxuLHIpe3ZhciBpO3RyeXtlJiZtKGk9ZS5wcm9taXNlKT9pLmNhbGwoZSkuZG9uZSh0KS5mYWlsKG4pOmUmJm0oaT1lLnRoZW4pP2kuY2FsbChlLHQsbik6dC5hcHBseSh2b2lkIDAsW2VdLnNsaWNlKHIpKX1jYXRjaChlKXtuLmFwcGx5KHZvaWQgMCxbZV0pfX1TLkNhbGxiYWNrcz1mdW5jdGlvbihyKXt2YXIgZSxuO3I9InN0cmluZyI9PXR5cGVvZiByPyhlPXIsbj17fSxTLmVhY2goZS5tYXRjaChQKXx8W10sZnVuY3Rpb24oZSx0KXtuW3RdPSEwfSksbik6Uy5leHRlbmQoe30scik7dmFyIGksdCxvLGEscz1bXSx1PVtdLGw9LTEsYz1mdW5jdGlvbigpe2ZvcihhPWF8fHIub25jZSxvPWk9ITA7dS5sZW5ndGg7bD0tMSl7dD11LnNoaWZ0KCk7d2hpbGUoKytsPHMubGVuZ3RoKSExPT09c1tsXS5hcHBseSh0WzBdLHRbMV0pJiZyLnN0b3BPbkZhbHNlJiYobD1zLmxlbmd0aCx0PSExKX1yLm1lbW9yeXx8KHQ9ITEpLGk9ITEsYSYmKHM9dD9bXToiIil9LGY9e2FkZDpmdW5jdGlvbigpe3JldHVybiBzJiYodCYmIWkmJihsPXMubGVuZ3RoLTEsdS5wdXNoKHQpKSxmdW5jdGlvbiBuKGUpe1MuZWFjaChlLGZ1bmN0aW9uKGUsdCl7bSh0KT9yLnVuaXF1ZSYmZi5oYXModCl8fHMucHVzaCh0KTp0JiZ0Lmxlbmd0aCYmInN0cmluZyIhPT13KHQpJiZuKHQpfSl9KGFyZ3VtZW50cyksdCYmIWkmJmMoKSksdGhpc30scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIFMuZWFjaChhcmd1bWVudHMsZnVuY3Rpb24oZSx0KXt2YXIgbjt3aGlsZSgtMTwobj1TLmluQXJyYXkodCxzLG4pKSlzLnNwbGljZShuLDEpLG48PWwmJmwtLX0pLHRoaXN9LGhhczpmdW5jdGlvbihlKXtyZXR1cm4gZT8tMTxTLmluQXJyYXkoZSxzKTowPHMubGVuZ3RofSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiBzJiYocz1bXSksdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBhPXU9W10scz10PSIiLHRoaXN9LGRpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIXN9LGxvY2s6ZnVuY3Rpb24oKXtyZXR1cm4gYT11PVtdLHR8fGl8fChzPXQ9IiIpLHRoaXN9LGxvY2tlZDpmdW5jdGlvbigpe3JldHVybiEhYX0sZmlyZVdpdGg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYXx8KHQ9W2UsKHQ9dHx8W10pLnNsaWNlP3Quc2xpY2UoKTp0XSx1LnB1c2godCksaXx8YygpKSx0aGlzfSxmaXJlOmZ1bmN0aW9uKCl7cmV0dXJuIGYuZmlyZVdpdGgodGhpcyxhcmd1bWVudHMpLHRoaXN9LGZpcmVkOmZ1bmN0aW9uKCl7cmV0dXJuISFvfX07cmV0dXJuIGZ9LFMuZXh0ZW5kKHtEZWZlcnJlZDpmdW5jdGlvbihlKXt2YXIgbz1bWyJub3RpZnkiLCJwcm9ncmVzcyIsUy5DYWxsYmFja3MoIm1lbW9yeSIpLFMuQ2FsbGJhY2tzKCJtZW1vcnkiKSwyXSxbInJlc29sdmUiLCJkb25lIixTLkNhbGxiYWNrcygib25jZSBtZW1vcnkiKSxTLkNhbGxiYWNrcygib25jZSBtZW1vcnkiKSwwLCJyZXNvbHZlZCJdLFsicmVqZWN0IiwiZmFpbCIsUy5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksUy5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksMSwicmVqZWN0ZWQiXV0saT0icGVuZGluZyIsYT17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIHMuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSwiY2F0Y2giOmZ1bmN0aW9uKGUpe3JldHVybiBhLnRoZW4obnVsbCxlKX0scGlwZTpmdW5jdGlvbigpe3ZhciBpPWFyZ3VtZW50cztyZXR1cm4gUy5EZWZlcnJlZChmdW5jdGlvbihyKXtTLmVhY2gobyxmdW5jdGlvbihlLHQpe3ZhciBuPW0oaVt0WzRdXSkmJmlbdFs0XV07c1t0WzFdXShmdW5jdGlvbigpe3ZhciBlPW4mJm4uYXBwbHkodGhpcyxhcmd1bWVudHMpO2UmJm0oZS5wcm9taXNlKT9lLnByb21pc2UoKS5wcm9ncmVzcyhyLm5vdGlmeSkuZG9uZShyLnJlc29sdmUpLmZhaWwoci5yZWplY3QpOnJbdFswXSsiV2l0aCJdKHRoaXMsbj9bZV06YXJndW1lbnRzKX0pfSksaT1udWxsfSkucHJvbWlzZSgpfSx0aGVuOmZ1bmN0aW9uKHQsbixyKXt2YXIgdT0wO2Z1bmN0aW9uIGwoaSxvLGEscyl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpcyxyPWFyZ3VtZW50cyxlPWZ1bmN0aW9uKCl7dmFyIGUsdDtpZighKGk8dSkpe2lmKChlPWEuYXBwbHkobixyKSk9PT1vLnByb21pc2UoKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb24iKTt0PWUmJigib2JqZWN0Ij09dHlwZW9mIGV8fCJmdW5jdGlvbiI9PXR5cGVvZiBlKSYmZS50aGVuLG0odCk/cz90LmNhbGwoZSxsKHUsbyxSLHMpLGwodSxvLE0scykpOih1KyssdC5jYWxsKGUsbCh1LG8sUixzKSxsKHUsbyxNLHMpLGwodSxvLFIsby5ub3RpZnlXaXRoKSkpOihhIT09UiYmKG49dm9pZCAwLHI9W2VdKSwoc3x8by5yZXNvbHZlV2l0aCkobixyKSl9fSx0PXM/ZTpmdW5jdGlvbigpe3RyeXtlKCl9Y2F0Y2goZSl7Uy5EZWZlcnJlZC5leGNlcHRpb25Ib29rJiZTLkRlZmVycmVkLmV4Y2VwdGlvbkhvb2soZSx0LnN0YWNrVHJhY2UpLHU8PWkrMSYmKGEhPT1NJiYobj12b2lkIDAscj1bZV0pLG8ucmVqZWN0V2l0aChuLHIpKX19O2k/dCgpOihTLkRlZmVycmVkLmdldFN0YWNrSG9vayYmKHQuc3RhY2tUcmFjZT1TLkRlZmVycmVkLmdldFN0YWNrSG9vaygpKSxDLnNldFRpbWVvdXQodCkpfX1yZXR1cm4gUy5EZWZlcnJlZChmdW5jdGlvbihlKXtvWzBdWzNdLmFkZChsKDAsZSxtKHIpP3I6UixlLm5vdGlmeVdpdGgpKSxvWzFdWzNdLmFkZChsKDAsZSxtKHQpP3Q6UikpLG9bMl1bM10uYWRkKGwoMCxlLG0obik/bjpNKSl9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPWU/Uy5leHRlbmQoZSxhKTphfX0scz17fTtyZXR1cm4gUy5lYWNoKG8sZnVuY3Rpb24oZSx0KXt2YXIgbj10WzJdLHI9dFs1XTthW3RbMV1dPW4uYWRkLHImJm4uYWRkKGZ1bmN0aW9uKCl7aT1yfSxvWzMtZV1bMl0uZGlzYWJsZSxvWzMtZV1bM10uZGlzYWJsZSxvWzBdWzJdLmxvY2ssb1swXVszXS5sb2NrKSxuLmFkZCh0WzNdLmZpcmUpLHNbdFswXV09ZnVuY3Rpb24oKXtyZXR1cm4gc1t0WzBdKyJXaXRoIl0odGhpcz09PXM/dm9pZCAwOnRoaXMsYXJndW1lbnRzKSx0aGlzfSxzW3RbMF0rIldpdGgiXT1uLmZpcmVXaXRofSksYS5wcm9taXNlKHMpLGUmJmUuY2FsbChzLHMpLHN9LHdoZW46ZnVuY3Rpb24oZSl7dmFyIG49YXJndW1lbnRzLmxlbmd0aCx0PW4scj1BcnJheSh0KSxpPXMuY2FsbChhcmd1bWVudHMpLG89Uy5EZWZlcnJlZCgpLGE9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JbdF09dGhpcyxpW3RdPTE8YXJndW1lbnRzLmxlbmd0aD9zLmNhbGwoYXJndW1lbnRzKTplLC0tbnx8by5yZXNvbHZlV2l0aChyLGkpfX07aWYobjw9MSYmKEkoZSxvLmRvbmUoYSh0KSkucmVzb2x2ZSxvLnJlamVjdCwhbiksInBlbmRpbmciPT09by5zdGF0ZSgpfHxtKGlbdF0mJmlbdF0udGhlbikpKXJldHVybiBvLnRoZW4oKTt3aGlsZSh0LS0pSShpW3RdLGEodCksby5yZWplY3QpO3JldHVybiBvLnByb21pc2UoKX19KTt2YXIgVz0vXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztTLkRlZmVycmVkLmV4Y2VwdGlvbkhvb2s9ZnVuY3Rpb24oZSx0KXtDLmNvbnNvbGUmJkMuY29uc29sZS53YXJuJiZlJiZXLnRlc3QoZS5uYW1lKSYmQy5jb25zb2xlLndhcm4oImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246ICIrZS5tZXNzYWdlLGUuc3RhY2ssdCl9LFMucmVhZHlFeGNlcHRpb249ZnVuY3Rpb24oZSl7Qy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZX0pfTt2YXIgRj1TLkRlZmVycmVkKCk7ZnVuY3Rpb24gQigpe0UucmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsQiksQy5yZW1vdmVFdmVudExpc3RlbmVyKCJsb2FkIixCKSxTLnJlYWR5KCl9Uy5mbi5yZWFkeT1mdW5jdGlvbihlKXtyZXR1cm4gRi50aGVuKGUpWyJjYXRjaCJdKGZ1bmN0aW9uKGUpe1MucmVhZHlFeGNlcHRpb24oZSl9KSx0aGlzfSxTLmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxyZWFkeTpmdW5jdGlvbihlKXsoITA9PT1lPy0tUy5yZWFkeVdhaXQ6Uy5pc1JlYWR5KXx8KFMuaXNSZWFkeT0hMCkhPT1lJiYwPC0tUy5yZWFkeVdhaXR8fEYucmVzb2x2ZVdpdGgoRSxbU10pfX0pLFMucmVhZHkudGhlbj1GLnRoZW4sImNvbXBsZXRlIj09PUUucmVhZHlTdGF0ZXx8ImxvYWRpbmciIT09RS5yZWFkeVN0YXRlJiYhRS5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGw/Qy5zZXRUaW1lb3V0KFMucmVhZHkpOihFLmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLEIpLEMuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsQikpO3ZhciAkPWZ1bmN0aW9uKGUsdCxuLHIsaSxvLGEpe3ZhciBzPTAsdT1lLmxlbmd0aCxsPW51bGw9PW47aWYoIm9iamVjdCI9PT13KG4pKWZvcihzIGluIGk9ITAsbikkKGUsdCxzLG5bc10sITAsbyxhKTtlbHNlIGlmKHZvaWQgMCE9PXImJihpPSEwLG0ocil8fChhPSEwKSxsJiYoYT8odC5jYWxsKGUsciksdD1udWxsKToobD10LHQ9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBsLmNhbGwoUyhlKSxuKX0pKSx0KSlmb3IoO3M8dTtzKyspdChlW3NdLG4sYT9yOnIuY2FsbChlW3NdLHMsdChlW3NdLG4pKSk7cmV0dXJuIGk/ZTpsP3QuY2FsbChlKTp1P3QoZVswXSxuKTpvfSxfPS9eLW1zLS8sej0vLShbYS16XSkvZztmdW5jdGlvbiBVKGUsdCl7cmV0dXJuIHQudG9VcHBlckNhc2UoKX1mdW5jdGlvbiBYKGUpe3JldHVybiBlLnJlcGxhY2UoXywibXMtIikucmVwbGFjZSh6LFUpfXZhciBWPWZ1bmN0aW9uKGUpe3JldHVybiAxPT09ZS5ub2RlVHlwZXx8OT09PWUubm9kZVR5cGV8fCErZS5ub2RlVHlwZX07ZnVuY3Rpb24gRygpe3RoaXMuZXhwYW5kbz1TLmV4cGFuZG8rRy51aWQrK31HLnVpZD0xLEcucHJvdG90eXBlPXtjYWNoZTpmdW5jdGlvbihlKXt2YXIgdD1lW3RoaXMuZXhwYW5kb107cmV0dXJuIHR8fCh0PXt9LFYoZSkmJihlLm5vZGVUeXBlP2VbdGhpcy5leHBhbmRvXT10Ok9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHRoaXMuZXhwYW5kbyx7dmFsdWU6dCxjb25maWd1cmFibGU6ITB9KSkpLHR9LHNldDpmdW5jdGlvbihlLHQsbil7dmFyIHIsaT10aGlzLmNhY2hlKGUpO2lmKCJzdHJpbmciPT10eXBlb2YgdClpW1godCldPW47ZWxzZSBmb3IociBpbiB0KWlbWChyKV09dFtyXTtyZXR1cm4gaX0sZ2V0OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQ/dGhpcy5jYWNoZShlKTplW3RoaXMuZXhwYW5kb10mJmVbdGhpcy5leHBhbmRvXVtYKHQpXX0sYWNjZXNzOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gdm9pZCAwPT09dHx8dCYmInN0cmluZyI9PXR5cGVvZiB0JiZ2b2lkIDA9PT1uP3RoaXMuZ2V0KGUsdCk6KHRoaXMuc2V0KGUsdCxuKSx2b2lkIDAhPT1uP246dCl9LHJlbW92ZTpmdW5jdGlvbihlLHQpe3ZhciBuLHI9ZVt0aGlzLmV4cGFuZG9dO2lmKHZvaWQgMCE9PXIpe2lmKHZvaWQgMCE9PXQpe249KHQ9QXJyYXkuaXNBcnJheSh0KT90Lm1hcChYKToodD1YKHQpKWluIHI/W3RdOnQubWF0Y2goUCl8fFtdKS5sZW5ndGg7d2hpbGUobi0tKWRlbGV0ZSByW3Rbbl1dfSh2b2lkIDA9PT10fHxTLmlzRW1wdHlPYmplY3QocikpJiYoZS5ub2RlVHlwZT9lW3RoaXMuZXhwYW5kb109dm9pZCAwOmRlbGV0ZSBlW3RoaXMuZXhwYW5kb10pfX0saGFzRGF0YTpmdW5jdGlvbihlKXt2YXIgdD1lW3RoaXMuZXhwYW5kb107cmV0dXJuIHZvaWQgMCE9PXQmJiFTLmlzRW1wdHlPYmplY3QodCl9fTt2YXIgWT1uZXcgRyxRPW5ldyBHLEo9L14oPzpce1tcd1xXXSpcfXxcW1tcd1xXXSpcXSkkLyxLPS9bQS1aXS9nO2Z1bmN0aW9uIFooZSx0LG4pe3ZhciByLGk7aWYodm9pZCAwPT09biYmMT09PWUubm9kZVR5cGUpaWYocj0iZGF0YS0iK3QucmVwbGFjZShLLCItJCYiKS50b0xvd2VyQ2FzZSgpLCJzdHJpbmciPT10eXBlb2Yobj1lLmdldEF0dHJpYnV0ZShyKSkpe3RyeXtuPSJ0cnVlIj09PShpPW4pfHwiZmFsc2UiIT09aSYmKCJudWxsIj09PWk/bnVsbDppPT09K2krIiI/K2k6Si50ZXN0KGkpP0pTT04ucGFyc2UoaSk6aSl9Y2F0Y2goZSl7fVEuc2V0KGUsdCxuKX1lbHNlIG49dm9pZCAwO3JldHVybiBufVMuZXh0ZW5kKHtoYXNEYXRhOmZ1bmN0aW9uKGUpe3JldHVybiBRLmhhc0RhdGEoZSl8fFkuaGFzRGF0YShlKX0sZGF0YTpmdW5jdGlvbihlLHQsbil7cmV0dXJuIFEuYWNjZXNzKGUsdCxuKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihlLHQpe1EucmVtb3ZlKGUsdCl9LF9kYXRhOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gWS5hY2Nlc3MoZSx0LG4pfSxfcmVtb3ZlRGF0YTpmdW5jdGlvbihlLHQpe1kucmVtb3ZlKGUsdCl9fSksUy5mbi5leHRlbmQoe2RhdGE6ZnVuY3Rpb24obixlKXt2YXIgdCxyLGksbz10aGlzWzBdLGE9byYmby5hdHRyaWJ1dGVzO2lmKHZvaWQgMD09PW4pe2lmKHRoaXMubGVuZ3RoJiYoaT1RLmdldChvKSwxPT09by5ub2RlVHlwZSYmIVkuZ2V0KG8sImhhc0RhdGFBdHRycyIpKSl7dD1hLmxlbmd0aDt3aGlsZSh0LS0pYVt0XSYmMD09PShyPWFbdF0ubmFtZSkuaW5kZXhPZigiZGF0YS0iKSYmKHI9WChyLnNsaWNlKDUpKSxaKG8scixpW3JdKSk7WS5zZXQobywiaGFzRGF0YUF0dHJzIiwhMCl9cmV0dXJuIGl9cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBuP3RoaXMuZWFjaChmdW5jdGlvbigpe1Euc2V0KHRoaXMsbil9KTokKHRoaXMsZnVuY3Rpb24oZSl7dmFyIHQ7aWYobyYmdm9pZCAwPT09ZSlyZXR1cm4gdm9pZCAwIT09KHQ9US5nZXQobyxuKSk/dDp2b2lkIDAhPT0odD1aKG8sbikpP3Q6dm9pZCAwO3RoaXMuZWFjaChmdW5jdGlvbigpe1Euc2V0KHRoaXMsbixlKX0pfSxudWxsLGUsMTxhcmd1bWVudHMubGVuZ3RoLG51bGwsITApfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtRLnJlbW92ZSh0aGlzLGUpfSl9fSksUy5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcjtpZihlKXJldHVybiB0PSh0fHwiZngiKSsicXVldWUiLHI9WS5nZXQoZSx0KSxuJiYoIXJ8fEFycmF5LmlzQXJyYXkobik/cj1ZLmFjY2VzcyhlLHQsUy5tYWtlQXJyYXkobikpOnIucHVzaChuKSkscnx8W119LGRlcXVldWU6ZnVuY3Rpb24oZSx0KXt0PXR8fCJmeCI7dmFyIG49Uy5xdWV1ZShlLHQpLHI9bi5sZW5ndGgsaT1uLnNoaWZ0KCksbz1TLl9xdWV1ZUhvb2tzKGUsdCk7ImlucHJvZ3Jlc3MiPT09aSYmKGk9bi5zaGlmdCgpLHItLSksaSYmKCJmeCI9PT10JiZuLnVuc2hpZnQoImlucHJvZ3Jlc3MiKSxkZWxldGUgby5zdG9wLGkuY2FsbChlLGZ1bmN0aW9uKCl7Uy5kZXF1ZXVlKGUsdCl9LG8pKSwhciYmbyYmby5lbXB0eS5maXJlKCl9LF9xdWV1ZUhvb2tzOmZ1bmN0aW9uKGUsdCl7dmFyIG49dCsicXVldWVIb29rcyI7cmV0dXJuIFkuZ2V0KGUsbil8fFkuYWNjZXNzKGUsbix7ZW1wdHk6Uy5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IikuYWRkKGZ1bmN0aW9uKCl7WS5yZW1vdmUoZSxbdCsicXVldWUiLG5dKX0pfSl9fSksUy5mbi5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKHQsbil7dmFyIGU9MjtyZXR1cm4ic3RyaW5nIiE9dHlwZW9mIHQmJihuPXQsdD0iZngiLGUtLSksYXJndW1lbnRzLmxlbmd0aDxlP1MucXVldWUodGhpc1swXSx0KTp2b2lkIDA9PT1uP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9Uy5xdWV1ZSh0aGlzLHQsbik7Uy5fcXVldWVIb29rcyh0aGlzLHQpLCJmeCI9PT10JiYiaW5wcm9ncmVzcyIhPT1lWzBdJiZTLmRlcXVldWUodGhpcyx0KX0pfSxkZXF1ZXVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtTLmRlcXVldWUodGhpcyxlKX0pfSxjbGVhclF1ZXVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnF1ZXVlKGV8fCJmeCIsW10pfSxwcm9taXNlOmZ1bmN0aW9uKGUsdCl7dmFyIG4scj0xLGk9Uy5EZWZlcnJlZCgpLG89dGhpcyxhPXRoaXMubGVuZ3RoLHM9ZnVuY3Rpb24oKXstLXJ8fGkucmVzb2x2ZVdpdGgobyxbb10pfTsic3RyaW5nIiE9dHlwZW9mIGUmJih0PWUsZT12b2lkIDApLGU9ZXx8ImZ4Ijt3aGlsZShhLS0pKG49WS5nZXQob1thXSxlKyJxdWV1ZUhvb2tzIikpJiZuLmVtcHR5JiYocisrLG4uZW1wdHkuYWRkKHMpKTtyZXR1cm4gcygpLGkucHJvbWlzZSh0KX19KTt2YXIgZWU9L1srLV0/KD86XGQqXC58KVxkKyg/OltlRV1bKy1dP1xkK3wpLy5zb3VyY2UsdGU9bmV3IFJlZ0V4cCgiXig/OihbKy1dKT18KSgiK2VlKyIpKFthLXolXSopJCIsImkiKSxuZT1bIlRvcCIsIlJpZ2h0IiwiQm90dG9tIiwiTGVmdCJdLHJlPUUuZG9jdW1lbnRFbGVtZW50LGllPWZ1bmN0aW9uKGUpe3JldHVybiBTLmNvbnRhaW5zKGUub3duZXJEb2N1bWVudCxlKX0sb2U9e2NvbXBvc2VkOiEwfTtyZS5nZXRSb290Tm9kZSYmKGllPWZ1bmN0aW9uKGUpe3JldHVybiBTLmNvbnRhaW5zKGUub3duZXJEb2N1bWVudCxlKXx8ZS5nZXRSb290Tm9kZShvZSk9PT1lLm93bmVyRG9jdW1lbnR9KTt2YXIgYWU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4ibm9uZSI9PT0oZT10fHxlKS5zdHlsZS5kaXNwbGF5fHwiIj09PWUuc3R5bGUuZGlzcGxheSYmaWUoZSkmJiJub25lIj09PVMuY3NzKGUsImRpc3BsYXkiKX07ZnVuY3Rpb24gc2UoZSx0LG4scil7dmFyIGksbyxhPTIwLHM9cj9mdW5jdGlvbigpe3JldHVybiByLmN1cigpfTpmdW5jdGlvbigpe3JldHVybiBTLmNzcyhlLHQsIiIpfSx1PXMoKSxsPW4mJm5bM118fChTLmNzc051bWJlclt0XT8iIjoicHgiKSxjPWUubm9kZVR5cGUmJihTLmNzc051bWJlclt0XXx8InB4IiE9PWwmJit1KSYmdGUuZXhlYyhTLmNzcyhlLHQpKTtpZihjJiZjWzNdIT09bCl7dS89MixsPWx8fGNbM10sYz0rdXx8MTt3aGlsZShhLS0pUy5zdHlsZShlLHQsYytsKSwoMS1vKSooMS0obz1zKCkvdXx8LjUpKTw9MCYmKGE9MCksYy89bztjKj0yLFMuc3R5bGUoZSx0LGMrbCksbj1ufHxbXX1yZXR1cm4gbiYmKGM9K2N8fCt1fHwwLGk9blsxXT9jKyhuWzFdKzEpKm5bMl06K25bMl0sciYmKHIudW5pdD1sLHIuc3RhcnQ9YyxyLmVuZD1pKSksaX12YXIgdWU9e307ZnVuY3Rpb24gbGUoZSx0KXtmb3IodmFyIG4scixpLG8sYSxzLHUsbD1bXSxjPTAsZj1lLmxlbmd0aDtjPGY7YysrKShyPWVbY10pLnN0eWxlJiYobj1yLnN0eWxlLmRpc3BsYXksdD8oIm5vbmUiPT09biYmKGxbY109WS5nZXQociwiZGlzcGxheSIpfHxudWxsLGxbY118fChyLnN0eWxlLmRpc3BsYXk9IiIpKSwiIj09PXIuc3R5bGUuZGlzcGxheSYmYWUocikmJihsW2NdPSh1PWE9bz12b2lkIDAsYT0oaT1yKS5vd25lckRvY3VtZW50LHM9aS5ub2RlTmFtZSwodT11ZVtzXSl8fChvPWEuYm9keS5hcHBlbmRDaGlsZChhLmNyZWF0ZUVsZW1lbnQocykpLHU9Uy5jc3MobywiZGlzcGxheSIpLG8ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvKSwibm9uZSI9PT11JiYodT0iYmxvY2siKSx1ZVtzXT11KSkpKToibm9uZSIhPT1uJiYobFtjXT0ibm9uZSIsWS5zZXQociwiZGlzcGxheSIsbikpKTtmb3IoYz0wO2M8ZjtjKyspbnVsbCE9bFtjXSYmKGVbY10uc3R5bGUuZGlzcGxheT1sW2NdKTtyZXR1cm4gZX1TLmZuLmV4dGVuZCh7c2hvdzpmdW5jdGlvbigpe3JldHVybiBsZSh0aGlzLCEwKX0saGlkZTpmdW5jdGlvbigpe3JldHVybiBsZSh0aGlzKX0sdG9nZ2xlOmZ1bmN0aW9uKGUpe3JldHVybiJib29sZWFuIj09dHlwZW9mIGU/ZT90aGlzLnNob3coKTp0aGlzLmhpZGUoKTp0aGlzLmVhY2goZnVuY3Rpb24oKXthZSh0aGlzKT9TKHRoaXMpLnNob3coKTpTKHRoaXMpLmhpZGUoKX0pfX0pO3ZhciBjZSxmZSxwZT0vXig/OmNoZWNrYm94fHJhZGlvKSQvaSxkZT0vPChbYS16XVteXC9cMD5ceDIwXHRcclxuXGZdKikvaSxoZT0vXiR8Xm1vZHVsZSR8XC8oPzpqYXZhfGVjbWEpc2NyaXB0L2k7Y2U9RS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkuYXBwZW5kQ2hpbGQoRS5jcmVhdGVFbGVtZW50KCJkaXYiKSksKGZlPUUuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSkuc2V0QXR0cmlidXRlKCJ0eXBlIiwicmFkaW8iKSxmZS5zZXRBdHRyaWJ1dGUoImNoZWNrZWQiLCJjaGVja2VkIiksZmUuc2V0QXR0cmlidXRlKCJuYW1lIiwidCIpLGNlLmFwcGVuZENoaWxkKGZlKSx5LmNoZWNrQ2xvbmU9Y2UuY2xvbmVOb2RlKCEwKS5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5jaGVja2VkLGNlLmlubmVySFRNTD0iPHRleHRhcmVhPng8L3RleHRhcmVhPiIseS5ub0Nsb25lQ2hlY2tlZD0hIWNlLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZSxjZS5pbm5lckhUTUw9IjxvcHRpb24+PC9vcHRpb24+Iix5Lm9wdGlvbj0hIWNlLmxhc3RDaGlsZDt2YXIgZ2U9e3RoZWFkOlsxLCI8dGFibGU+IiwiPC90YWJsZT4iXSxjb2w6WzIsIjx0YWJsZT48Y29sZ3JvdXA+IiwiPC9jb2xncm91cD48L3RhYmxlPiJdLHRyOlsyLCI8dGFibGU+PHRib2R5PiIsIjwvdGJvZHk+PC90YWJsZT4iXSx0ZDpbMywiPHRhYmxlPjx0Ym9keT48dHI+IiwiPC90cj48L3Rib2R5PjwvdGFibGU+Il0sX2RlZmF1bHQ6WzAsIiIsIiJdfTtmdW5jdGlvbiB2ZShlLHQpe3ZhciBuO3JldHVybiBuPSJ1bmRlZmluZWQiIT10eXBlb2YgZS5nZXRFbGVtZW50c0J5VGFnTmFtZT9lLmdldEVsZW1lbnRzQnlUYWdOYW1lKHR8fCIqIik6InVuZGVmaW5lZCIhPXR5cGVvZiBlLnF1ZXJ5U2VsZWN0b3JBbGw/ZS5xdWVyeVNlbGVjdG9yQWxsKHR8fCIqIik6W10sdm9pZCAwPT09dHx8dCYmQShlLHQpP1MubWVyZ2UoW2VdLG4pOm59ZnVuY3Rpb24geWUoZSx0KXtmb3IodmFyIG49MCxyPWUubGVuZ3RoO248cjtuKyspWS5zZXQoZVtuXSwiZ2xvYmFsRXZhbCIsIXR8fFkuZ2V0KHRbbl0sImdsb2JhbEV2YWwiKSl9Z2UudGJvZHk9Z2UudGZvb3Q9Z2UuY29sZ3JvdXA9Z2UuY2FwdGlvbj1nZS50aGVhZCxnZS50aD1nZS50ZCx5Lm9wdGlvbnx8KGdlLm9wdGdyb3VwPWdlLm9wdGlvbj1bMSwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPiIsIjwvc2VsZWN0PiJdKTt2YXIgbWU9Lzx8JiM/XHcrOy87ZnVuY3Rpb24geGUoZSx0LG4scixpKXtmb3IodmFyIG8sYSxzLHUsbCxjLGY9dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscD1bXSxkPTAsaD1lLmxlbmd0aDtkPGg7ZCsrKWlmKChvPWVbZF0pfHwwPT09bylpZigib2JqZWN0Ij09PXcobykpUy5tZXJnZShwLG8ubm9kZVR5cGU/W29dOm8pO2Vsc2UgaWYobWUudGVzdChvKSl7YT1hfHxmLmFwcGVuZENoaWxkKHQuY3JlYXRlRWxlbWVudCgiZGl2IikpLHM9KGRlLmV4ZWMobyl8fFsiIiwiIl0pWzFdLnRvTG93ZXJDYXNlKCksdT1nZVtzXXx8Z2UuX2RlZmF1bHQsYS5pbm5lckhUTUw9dVsxXStTLmh0bWxQcmVmaWx0ZXIobykrdVsyXSxjPXVbMF07d2hpbGUoYy0tKWE9YS5sYXN0Q2hpbGQ7Uy5tZXJnZShwLGEuY2hpbGROb2RlcyksKGE9Zi5maXJzdENoaWxkKS50ZXh0Q29udGVudD0iIn1lbHNlIHAucHVzaCh0LmNyZWF0ZVRleHROb2RlKG8pKTtmLnRleHRDb250ZW50PSIiLGQ9MDt3aGlsZShvPXBbZCsrXSlpZihyJiYtMTxTLmluQXJyYXkobyxyKSlpJiZpLnB1c2gobyk7ZWxzZSBpZihsPWllKG8pLGE9dmUoZi5hcHBlbmRDaGlsZChvKSwic2NyaXB0IiksbCYmeWUoYSksbil7Yz0wO3doaWxlKG89YVtjKytdKWhlLnRlc3Qoby50eXBlfHwiIikmJm4ucHVzaChvKX1yZXR1cm4gZn12YXIgYmU9L14oW14uXSopKD86XC4oLispfCkvO2Z1bmN0aW9uIHdlKCl7cmV0dXJuITB9ZnVuY3Rpb24gVGUoKXtyZXR1cm4hMX1mdW5jdGlvbiBDZShlLHQpe3JldHVybiBlPT09ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIEUuYWN0aXZlRWxlbWVudH1jYXRjaChlKXt9fSgpPT0oImZvY3VzIj09PXQpfWZ1bmN0aW9uIEVlKGUsdCxuLHIsaSxvKXt2YXIgYSxzO2lmKCJvYmplY3QiPT10eXBlb2YgdCl7Zm9yKHMgaW4ic3RyaW5nIiE9dHlwZW9mIG4mJihyPXJ8fG4sbj12b2lkIDApLHQpRWUoZSxzLG4scix0W3NdLG8pO3JldHVybiBlfWlmKG51bGw9PXImJm51bGw9PWk/KGk9bixyPW49dm9pZCAwKTpudWxsPT1pJiYoInN0cmluZyI9PXR5cGVvZiBuPyhpPXIscj12b2lkIDApOihpPXIscj1uLG49dm9pZCAwKSksITE9PT1pKWk9VGU7ZWxzZSBpZighaSlyZXR1cm4gZTtyZXR1cm4gMT09PW8mJihhPWksKGk9ZnVuY3Rpb24oZSl7cmV0dXJuIFMoKS5vZmYoZSksYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KS5ndWlkPWEuZ3VpZHx8KGEuZ3VpZD1TLmd1aWQrKykpLGUuZWFjaChmdW5jdGlvbigpe1MuZXZlbnQuYWRkKHRoaXMsdCxpLHIsbil9KX1mdW5jdGlvbiBTZShlLGksbyl7bz8oWS5zZXQoZSxpLCExKSxTLmV2ZW50LmFkZChlLGkse25hbWVzcGFjZTohMSxoYW5kbGVyOmZ1bmN0aW9uKGUpe3ZhciB0LG4scj1ZLmdldCh0aGlzLGkpO2lmKDEmZS5pc1RyaWdnZXImJnRoaXNbaV0pe2lmKHIubGVuZ3RoKShTLmV2ZW50LnNwZWNpYWxbaV18fHt9KS5kZWxlZ2F0ZVR5cGUmJmUuc3RvcFByb3BhZ2F0aW9uKCk7ZWxzZSBpZihyPXMuY2FsbChhcmd1bWVudHMpLFkuc2V0KHRoaXMsaSxyKSx0PW8odGhpcyxpKSx0aGlzW2ldKCksciE9PShuPVkuZ2V0KHRoaXMsaSkpfHx0P1kuc2V0KHRoaXMsaSwhMSk6bj17fSxyIT09bilyZXR1cm4gZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSxlLnByZXZlbnREZWZhdWx0KCksbiYmbi52YWx1ZX1lbHNlIHIubGVuZ3RoJiYoWS5zZXQodGhpcyxpLHt2YWx1ZTpTLmV2ZW50LnRyaWdnZXIoUy5leHRlbmQoclswXSxTLkV2ZW50LnByb3RvdHlwZSksci5zbGljZSgxKSx0aGlzKX0pLGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkpfX0pKTp2b2lkIDA9PT1ZLmdldChlLGkpJiZTLmV2ZW50LmFkZChlLGksd2UpfVMuZXZlbnQ9e2dsb2JhbDp7fSxhZGQ6ZnVuY3Rpb24odCxlLG4scixpKXt2YXIgbyxhLHMsdSxsLGMsZixwLGQsaCxnLHY9WS5nZXQodCk7aWYoVih0KSl7bi5oYW5kbGVyJiYobj0obz1uKS5oYW5kbGVyLGk9by5zZWxlY3RvciksaSYmUy5maW5kLm1hdGNoZXNTZWxlY3RvcihyZSxpKSxuLmd1aWR8fChuLmd1aWQ9Uy5ndWlkKyspLCh1PXYuZXZlbnRzKXx8KHU9di5ldmVudHM9T2JqZWN0LmNyZWF0ZShudWxsKSksKGE9di5oYW5kbGUpfHwoYT12LmhhbmRsZT1mdW5jdGlvbihlKXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIFMmJlMuZXZlbnQudHJpZ2dlcmVkIT09ZS50eXBlP1MuZXZlbnQuZGlzcGF0Y2guYXBwbHkodCxhcmd1bWVudHMpOnZvaWQgMH0pLGw9KGU9KGV8fCIiKS5tYXRjaChQKXx8WyIiXSkubGVuZ3RoO3doaWxlKGwtLSlkPWc9KHM9YmUuZXhlYyhlW2xdKXx8W10pWzFdLGg9KHNbMl18fCIiKS5zcGxpdCgiLiIpLnNvcnQoKSxkJiYoZj1TLmV2ZW50LnNwZWNpYWxbZF18fHt9LGQ9KGk/Zi5kZWxlZ2F0ZVR5cGU6Zi5iaW5kVHlwZSl8fGQsZj1TLmV2ZW50LnNwZWNpYWxbZF18fHt9LGM9Uy5leHRlbmQoe3R5cGU6ZCxvcmlnVHlwZTpnLGRhdGE6cixoYW5kbGVyOm4sZ3VpZDpuLmd1aWQsc2VsZWN0b3I6aSxuZWVkc0NvbnRleHQ6aSYmUy5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KGkpLG5hbWVzcGFjZTpoLmpvaW4oIi4iKX0sbyksKHA9dVtkXSl8fCgocD11W2RdPVtdKS5kZWxlZ2F0ZUNvdW50PTAsZi5zZXR1cCYmITEhPT1mLnNldHVwLmNhbGwodCxyLGgsYSl8fHQuYWRkRXZlbnRMaXN0ZW5lciYmdC5hZGRFdmVudExpc3RlbmVyKGQsYSkpLGYuYWRkJiYoZi5hZGQuY2FsbCh0LGMpLGMuaGFuZGxlci5ndWlkfHwoYy5oYW5kbGVyLmd1aWQ9bi5ndWlkKSksaT9wLnNwbGljZShwLmRlbGVnYXRlQ291bnQrKywwLGMpOnAucHVzaChjKSxTLmV2ZW50Lmdsb2JhbFtkXT0hMCl9fSxyZW1vdmU6ZnVuY3Rpb24oZSx0LG4scixpKXt2YXIgbyxhLHMsdSxsLGMsZixwLGQsaCxnLHY9WS5oYXNEYXRhKGUpJiZZLmdldChlKTtpZih2JiYodT12LmV2ZW50cykpe2w9KHQ9KHR8fCIiKS5tYXRjaChQKXx8WyIiXSkubGVuZ3RoO3doaWxlKGwtLSlpZihkPWc9KHM9YmUuZXhlYyh0W2xdKXx8W10pWzFdLGg9KHNbMl18fCIiKS5zcGxpdCgiLiIpLnNvcnQoKSxkKXtmPVMuZXZlbnQuc3BlY2lhbFtkXXx8e30scD11W2Q9KHI/Zi5kZWxlZ2F0ZVR5cGU6Zi5iaW5kVHlwZSl8fGRdfHxbXSxzPXNbMl0mJm5ldyBSZWdFeHAoIihefFxcLikiK2guam9pbigiXFwuKD86LipcXC58KSIpKyIoXFwufCQpIiksYT1vPXAubGVuZ3RoO3doaWxlKG8tLSljPXBbb10sIWkmJmchPT1jLm9yaWdUeXBlfHxuJiZuLmd1aWQhPT1jLmd1aWR8fHMmJiFzLnRlc3QoYy5uYW1lc3BhY2UpfHxyJiZyIT09Yy5zZWxlY3RvciYmKCIqKiIhPT1yfHwhYy5zZWxlY3Rvcil8fChwLnNwbGljZShvLDEpLGMuc2VsZWN0b3ImJnAuZGVsZWdhdGVDb3VudC0tLGYucmVtb3ZlJiZmLnJlbW92ZS5jYWxsKGUsYykpO2EmJiFwLmxlbmd0aCYmKGYudGVhcmRvd24mJiExIT09Zi50ZWFyZG93bi5jYWxsKGUsaCx2LmhhbmRsZSl8fFMucmVtb3ZlRXZlbnQoZSxkLHYuaGFuZGxlKSxkZWxldGUgdVtkXSl9ZWxzZSBmb3IoZCBpbiB1KVMuZXZlbnQucmVtb3ZlKGUsZCt0W2xdLG4sciwhMCk7Uy5pc0VtcHR5T2JqZWN0KHUpJiZZLnJlbW92ZShlLCJoYW5kbGUgZXZlbnRzIil9fSxkaXNwYXRjaDpmdW5jdGlvbihlKXt2YXIgdCxuLHIsaSxvLGEscz1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCksdT1TLmV2ZW50LmZpeChlKSxsPShZLmdldCh0aGlzLCJldmVudHMiKXx8T2JqZWN0LmNyZWF0ZShudWxsKSlbdS50eXBlXXx8W10sYz1TLmV2ZW50LnNwZWNpYWxbdS50eXBlXXx8e307Zm9yKHNbMF09dSx0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKylzW3RdPWFyZ3VtZW50c1t0XTtpZih1LmRlbGVnYXRlVGFyZ2V0PXRoaXMsIWMucHJlRGlzcGF0Y2h8fCExIT09Yy5wcmVEaXNwYXRjaC5jYWxsKHRoaXMsdSkpe2E9Uy5ldmVudC5oYW5kbGVycy5jYWxsKHRoaXMsdSxsKSx0PTA7d2hpbGUoKGk9YVt0KytdKSYmIXUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSl7dS5jdXJyZW50VGFyZ2V0PWkuZWxlbSxuPTA7d2hpbGUoKG89aS5oYW5kbGVyc1tuKytdKSYmIXUuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSl1LnJuYW1lc3BhY2UmJiExIT09by5uYW1lc3BhY2UmJiF1LnJuYW1lc3BhY2UudGVzdChvLm5hbWVzcGFjZSl8fCh1LmhhbmRsZU9iaj1vLHUuZGF0YT1vLmRhdGEsdm9pZCAwIT09KHI9KChTLmV2ZW50LnNwZWNpYWxbby5vcmlnVHlwZV18fHt9KS5oYW5kbGV8fG8uaGFuZGxlcikuYXBwbHkoaS5lbGVtLHMpKSYmITE9PT0odS5yZXN1bHQ9cikmJih1LnByZXZlbnREZWZhdWx0KCksdS5zdG9wUHJvcGFnYXRpb24oKSkpfXJldHVybiBjLnBvc3REaXNwYXRjaCYmYy5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLHUpLHUucmVzdWx0fX0saGFuZGxlcnM6ZnVuY3Rpb24oZSx0KXt2YXIgbixyLGksbyxhLHM9W10sdT10LmRlbGVnYXRlQ291bnQsbD1lLnRhcmdldDtpZih1JiZsLm5vZGVUeXBlJiYhKCJjbGljayI9PT1lLnR5cGUmJjE8PWUuYnV0dG9uKSlmb3IoO2whPT10aGlzO2w9bC5wYXJlbnROb2RlfHx0aGlzKWlmKDE9PT1sLm5vZGVUeXBlJiYoImNsaWNrIiE9PWUudHlwZXx8ITAhPT1sLmRpc2FibGVkKSl7Zm9yKG89W10sYT17fSxuPTA7bjx1O24rKyl2b2lkIDA9PT1hW2k9KHI9dFtuXSkuc2VsZWN0b3IrIiAiXSYmKGFbaV09ci5uZWVkc0NvbnRleHQ/LTE8UyhpLHRoaXMpLmluZGV4KGwpOlMuZmluZChpLHRoaXMsbnVsbCxbbF0pLmxlbmd0aCksYVtpXSYmby5wdXNoKHIpO28ubGVuZ3RoJiZzLnB1c2goe2VsZW06bCxoYW5kbGVyczpvfSl9cmV0dXJuIGw9dGhpcyx1PHQubGVuZ3RoJiZzLnB1c2goe2VsZW06bCxoYW5kbGVyczp0LnNsaWNlKHUpfSksc30sYWRkUHJvcDpmdW5jdGlvbih0LGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShTLkV2ZW50LnByb3RvdHlwZSx0LHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6bShlKT9mdW5jdGlvbigpe2lmKHRoaXMub3JpZ2luYWxFdmVudClyZXR1cm4gZSh0aGlzLm9yaWdpbmFsRXZlbnQpfTpmdW5jdGlvbigpe2lmKHRoaXMub3JpZ2luYWxFdmVudClyZXR1cm4gdGhpcy5vcmlnaW5hbEV2ZW50W3RdfSxzZXQ6ZnVuY3Rpb24oZSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsdCx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6ZX0pfX0pfSxmaXg6ZnVuY3Rpb24oZSl7cmV0dXJuIGVbUy5leHBhbmRvXT9lOm5ldyBTLkV2ZW50KGUpfSxzcGVjaWFsOntsb2FkOntub0J1YmJsZTohMH0sY2xpY2s6e3NldHVwOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXN8fGU7cmV0dXJuIHBlLnRlc3QodC50eXBlKSYmdC5jbGljayYmQSh0LCJpbnB1dCIpJiZTZSh0LCJjbGljayIsd2UpLCExfSx0cmlnZ2VyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXN8fGU7cmV0dXJuIHBlLnRlc3QodC50eXBlKSYmdC5jbGljayYmQSh0LCJpbnB1dCIpJiZTZSh0LCJjbGljayIpLCEwfSxfZGVmYXVsdDpmdW5jdGlvbihlKXt2YXIgdD1lLnRhcmdldDtyZXR1cm4gcGUudGVzdCh0LnR5cGUpJiZ0LmNsaWNrJiZBKHQsImlucHV0IikmJlkuZ2V0KHQsImNsaWNrIil8fEEodCwiYSIpfX0sYmVmb3JldW5sb2FkOntwb3N0RGlzcGF0Y2g6ZnVuY3Rpb24oZSl7dm9pZCAwIT09ZS5yZXN1bHQmJmUub3JpZ2luYWxFdmVudCYmKGUub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZT1lLnJlc3VsdCl9fX19LFMucmVtb3ZlRXZlbnQ9ZnVuY3Rpb24oZSx0LG4pe2UucmVtb3ZlRXZlbnRMaXN0ZW5lciYmZS5yZW1vdmVFdmVudExpc3RlbmVyKHQsbil9LFMuRXZlbnQ9ZnVuY3Rpb24oZSx0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBTLkV2ZW50KSlyZXR1cm4gbmV3IFMuRXZlbnQoZSx0KTtlJiZlLnR5cGU/KHRoaXMub3JpZ2luYWxFdmVudD1lLHRoaXMudHlwZT1lLnR5cGUsdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZS5kZWZhdWx0UHJldmVudGVkfHx2b2lkIDA9PT1lLmRlZmF1bHRQcmV2ZW50ZWQmJiExPT09ZS5yZXR1cm5WYWx1ZT93ZTpUZSx0aGlzLnRhcmdldD1lLnRhcmdldCYmMz09PWUudGFyZ2V0Lm5vZGVUeXBlP2UudGFyZ2V0LnBhcmVudE5vZGU6ZS50YXJnZXQsdGhpcy5jdXJyZW50VGFyZ2V0PWUuY3VycmVudFRhcmdldCx0aGlzLnJlbGF0ZWRUYXJnZXQ9ZS5yZWxhdGVkVGFyZ2V0KTp0aGlzLnR5cGU9ZSx0JiZTLmV4dGVuZCh0aGlzLHQpLHRoaXMudGltZVN0YW1wPWUmJmUudGltZVN0YW1wfHxEYXRlLm5vdygpLHRoaXNbUy5leHBhbmRvXT0hMH0sUy5FdmVudC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlMuRXZlbnQsaXNEZWZhdWx0UHJldmVudGVkOlRlLGlzUHJvcGFnYXRpb25TdG9wcGVkOlRlLGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOlRlLGlzU2ltdWxhdGVkOiExLHByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPXdlLGUmJiF0aGlzLmlzU2ltdWxhdGVkJiZlLnByZXZlbnREZWZhdWx0KCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXdlLGUmJiF0aGlzLmlzU2ltdWxhdGVkJiZlLnN0b3BQcm9wYWdhdGlvbigpfSxzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZD13ZSxlJiYhdGhpcy5pc1NpbXVsYXRlZCYmZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSx0aGlzLnN0b3BQcm9wYWdhdGlvbigpfX0sUy5lYWNoKHthbHRLZXk6ITAsYnViYmxlczohMCxjYW5jZWxhYmxlOiEwLGNoYW5nZWRUb3VjaGVzOiEwLGN0cmxLZXk6ITAsZGV0YWlsOiEwLGV2ZW50UGhhc2U6ITAsbWV0YUtleTohMCxwYWdlWDohMCxwYWdlWTohMCxzaGlmdEtleTohMCx2aWV3OiEwLCJjaGFyIjohMCxjb2RlOiEwLGNoYXJDb2RlOiEwLGtleTohMCxrZXlDb2RlOiEwLGJ1dHRvbjohMCxidXR0b25zOiEwLGNsaWVudFg6ITAsY2xpZW50WTohMCxvZmZzZXRYOiEwLG9mZnNldFk6ITAscG9pbnRlcklkOiEwLHBvaW50ZXJUeXBlOiEwLHNjcmVlblg6ITAsc2NyZWVuWTohMCx0YXJnZXRUb3VjaGVzOiEwLHRvRWxlbWVudDohMCx0b3VjaGVzOiEwLHdoaWNoOiEwfSxTLmV2ZW50LmFkZFByb3ApLFMuZWFjaCh7Zm9jdXM6ImZvY3VzaW4iLGJsdXI6ImZvY3Vzb3V0In0sZnVuY3Rpb24oZSx0KXtTLmV2ZW50LnNwZWNpYWxbZV09e3NldHVwOmZ1bmN0aW9uKCl7cmV0dXJuIFNlKHRoaXMsZSxDZSksITF9LHRyaWdnZXI6ZnVuY3Rpb24oKXtyZXR1cm4gU2UodGhpcyxlKSwhMH0sX2RlZmF1bHQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sZGVsZWdhdGVUeXBlOnR9fSksUy5lYWNoKHttb3VzZWVudGVyOiJtb3VzZW92ZXIiLG1vdXNlbGVhdmU6Im1vdXNlb3V0Iixwb2ludGVyZW50ZXI6InBvaW50ZXJvdmVyIixwb2ludGVybGVhdmU6InBvaW50ZXJvdXQifSxmdW5jdGlvbihlLGkpe1MuZXZlbnQuc3BlY2lhbFtlXT17ZGVsZWdhdGVUeXBlOmksYmluZFR5cGU6aSxoYW5kbGU6ZnVuY3Rpb24oZSl7dmFyIHQsbj1lLnJlbGF0ZWRUYXJnZXQscj1lLmhhbmRsZU9iajtyZXR1cm4gbiYmKG49PT10aGlzfHxTLmNvbnRhaW5zKHRoaXMsbikpfHwoZS50eXBlPXIub3JpZ1R5cGUsdD1yLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGUudHlwZT1pKSx0fX19KSxTLmZuLmV4dGVuZCh7b246ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIEVlKHRoaXMsZSx0LG4scil9LG9uZTpmdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gRWUodGhpcyxlLHQsbixyLDEpfSxvZmY6ZnVuY3Rpb24oZSx0LG4pe3ZhciByLGk7aWYoZSYmZS5wcmV2ZW50RGVmYXVsdCYmZS5oYW5kbGVPYmopcmV0dXJuIHI9ZS5oYW5kbGVPYmosUyhlLmRlbGVnYXRlVGFyZ2V0KS5vZmYoci5uYW1lc3BhY2U/ci5vcmlnVHlwZSsiLiIrci5uYW1lc3BhY2U6ci5vcmlnVHlwZSxyLnNlbGVjdG9yLHIuaGFuZGxlciksdGhpcztpZigib2JqZWN0Ij09dHlwZW9mIGUpe2ZvcihpIGluIGUpdGhpcy5vZmYoaSx0LGVbaV0pO3JldHVybiB0aGlzfXJldHVybiExIT09dCYmImZ1bmN0aW9uIiE9dHlwZW9mIHR8fChuPXQsdD12b2lkIDApLCExPT09biYmKG49VGUpLHRoaXMuZWFjaChmdW5jdGlvbigpe1MuZXZlbnQucmVtb3ZlKHRoaXMsZSxuLHQpfSl9fSk7dmFyIGtlPS88c2NyaXB0fDxzdHlsZXw8bGluay9pLEFlPS9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQuKS9pLE5lPS9eXHMqPCEoPzpcW0NEQVRBXFt8LS0pfCg/OlxdXF18LS0pPlxzKiQvZztmdW5jdGlvbiBqZShlLHQpe3JldHVybiBBKGUsInRhYmxlIikmJkEoMTEhPT10Lm5vZGVUeXBlP3Q6dC5maXJzdENoaWxkLCJ0ciIpJiZTKGUpLmNoaWxkcmVuKCJ0Ym9keSIpWzBdfHxlfWZ1bmN0aW9uIERlKGUpe3JldHVybiBlLnR5cGU9KG51bGwhPT1lLmdldEF0dHJpYnV0ZSgidHlwZSIpKSsiLyIrZS50eXBlLGV9ZnVuY3Rpb24gcWUoZSl7cmV0dXJuInRydWUvIj09PShlLnR5cGV8fCIiKS5zbGljZSgwLDUpP2UudHlwZT1lLnR5cGUuc2xpY2UoNSk6ZS5yZW1vdmVBdHRyaWJ1dGUoInR5cGUiKSxlfWZ1bmN0aW9uIExlKGUsdCl7dmFyIG4scixpLG8sYSxzO2lmKDE9PT10Lm5vZGVUeXBlKXtpZihZLmhhc0RhdGEoZSkmJihzPVkuZ2V0KGUpLmV2ZW50cykpZm9yKGkgaW4gWS5yZW1vdmUodCwiaGFuZGxlIGV2ZW50cyIpLHMpZm9yKG49MCxyPXNbaV0ubGVuZ3RoO248cjtuKyspUy5ldmVudC5hZGQodCxpLHNbaV1bbl0pO1EuaGFzRGF0YShlKSYmKG89US5hY2Nlc3MoZSksYT1TLmV4dGVuZCh7fSxvKSxRLnNldCh0LGEpKX19ZnVuY3Rpb24gSGUobixyLGksbyl7cj1nKHIpO3ZhciBlLHQsYSxzLHUsbCxjPTAsZj1uLmxlbmd0aCxwPWYtMSxkPXJbMF0saD1tKGQpO2lmKGh8fDE8ZiYmInN0cmluZyI9PXR5cGVvZiBkJiYheS5jaGVja0Nsb25lJiZBZS50ZXN0KGQpKXJldHVybiBuLmVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9bi5lcShlKTtoJiYoclswXT1kLmNhbGwodGhpcyxlLHQuaHRtbCgpKSksSGUodCxyLGksbyl9KTtpZihmJiYodD0oZT14ZShyLG5bMF0ub3duZXJEb2N1bWVudCwhMSxuLG8pKS5maXJzdENoaWxkLDE9PT1lLmNoaWxkTm9kZXMubGVuZ3RoJiYoZT10KSx0fHxvKSl7Zm9yKHM9KGE9Uy5tYXAodmUoZSwic2NyaXB0IiksRGUpKS5sZW5ndGg7YzxmO2MrKyl1PWUsYyE9PXAmJih1PVMuY2xvbmUodSwhMCwhMCkscyYmUy5tZXJnZShhLHZlKHUsInNjcmlwdCIpKSksaS5jYWxsKG5bY10sdSxjKTtpZihzKWZvcihsPWFbYS5sZW5ndGgtMV0ub3duZXJEb2N1bWVudCxTLm1hcChhLHFlKSxjPTA7YzxzO2MrKyl1PWFbY10saGUudGVzdCh1LnR5cGV8fCIiKSYmIVkuYWNjZXNzKHUsImdsb2JhbEV2YWwiKSYmUy5jb250YWlucyhsLHUpJiYodS5zcmMmJiJtb2R1bGUiIT09KHUudHlwZXx8IiIpLnRvTG93ZXJDYXNlKCk/Uy5fZXZhbFVybCYmIXUubm9Nb2R1bGUmJlMuX2V2YWxVcmwodS5zcmMse25vbmNlOnUubm9uY2V8fHUuZ2V0QXR0cmlidXRlKCJub25jZSIpfSxsKTpiKHUudGV4dENvbnRlbnQucmVwbGFjZShOZSwiIiksdSxsKSl9cmV0dXJuIG59ZnVuY3Rpb24gT2UoZSx0LG4pe2Zvcih2YXIgcixpPXQ/Uy5maWx0ZXIodCxlKTplLG89MDtudWxsIT0ocj1pW29dKTtvKyspbnx8MSE9PXIubm9kZVR5cGV8fFMuY2xlYW5EYXRhKHZlKHIpKSxyLnBhcmVudE5vZGUmJihuJiZpZShyKSYmeWUodmUociwic2NyaXB0IikpLHIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChyKSk7cmV0dXJuIGV9Uy5leHRlbmQoe2h0bWxQcmVmaWx0ZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGNsb25lOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYSxzLHUsbCxjPWUuY2xvbmVOb2RlKCEwKSxmPWllKGUpO2lmKCEoeS5ub0Nsb25lQ2hlY2tlZHx8MSE9PWUubm9kZVR5cGUmJjExIT09ZS5ub2RlVHlwZXx8Uy5pc1hNTERvYyhlKSkpZm9yKGE9dmUoYykscj0wLGk9KG89dmUoZSkpLmxlbmd0aDtyPGk7cisrKXM9b1tyXSx1PWFbcl0sdm9pZCAwLCJpbnB1dCI9PT0obD11Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpJiZwZS50ZXN0KHMudHlwZSk/dS5jaGVja2VkPXMuY2hlY2tlZDoiaW5wdXQiIT09bCYmInRleHRhcmVhIiE9PWx8fCh1LmRlZmF1bHRWYWx1ZT1zLmRlZmF1bHRWYWx1ZSk7aWYodClpZihuKWZvcihvPW98fHZlKGUpLGE9YXx8dmUoYykscj0wLGk9by5sZW5ndGg7cjxpO3IrKylMZShvW3JdLGFbcl0pO2Vsc2UgTGUoZSxjKTtyZXR1cm4gMDwoYT12ZShjLCJzY3JpcHQiKSkubGVuZ3RoJiZ5ZShhLCFmJiZ2ZShlLCJzY3JpcHQiKSksY30sY2xlYW5EYXRhOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuLHIsaT1TLmV2ZW50LnNwZWNpYWwsbz0wO3ZvaWQgMCE9PShuPWVbb10pO28rKylpZihWKG4pKXtpZih0PW5bWS5leHBhbmRvXSl7aWYodC5ldmVudHMpZm9yKHIgaW4gdC5ldmVudHMpaVtyXT9TLmV2ZW50LnJlbW92ZShuLHIpOlMucmVtb3ZlRXZlbnQobixyLHQuaGFuZGxlKTtuW1kuZXhwYW5kb109dm9pZCAwfW5bUS5leHBhbmRvXSYmKG5bUS5leHBhbmRvXT12b2lkIDApfX19KSxTLmZuLmV4dGVuZCh7ZGV0YWNoOmZ1bmN0aW9uKGUpe3JldHVybiBPZSh0aGlzLGUsITApfSxyZW1vdmU6ZnVuY3Rpb24oZSl7cmV0dXJuIE9lKHRoaXMsZSl9LHRleHQ6ZnVuY3Rpb24oZSl7cmV0dXJuICQodGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZT9TLnRleHQodGhpcyk6dGhpcy5lbXB0eSgpLmVhY2goZnVuY3Rpb24oKXsxIT09dGhpcy5ub2RlVHlwZSYmMTEhPT10aGlzLm5vZGVUeXBlJiY5IT09dGhpcy5ub2RlVHlwZXx8KHRoaXMudGV4dENvbnRlbnQ9ZSl9KX0sbnVsbCxlLGFyZ3VtZW50cy5sZW5ndGgpfSxhcHBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gSGUodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oZSl7MSE9PXRoaXMubm9kZVR5cGUmJjExIT09dGhpcy5ub2RlVHlwZSYmOSE9PXRoaXMubm9kZVR5cGV8fGplKHRoaXMsZSkuYXBwZW5kQ2hpbGQoZSl9KX0scHJlcGVuZDpmdW5jdGlvbigpe3JldHVybiBIZSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihlKXtpZigxPT09dGhpcy5ub2RlVHlwZXx8MTE9PT10aGlzLm5vZGVUeXBlfHw5PT09dGhpcy5ub2RlVHlwZSl7dmFyIHQ9amUodGhpcyxlKTt0Lmluc2VydEJlZm9yZShlLHQuZmlyc3RDaGlsZCl9fSl9LGJlZm9yZTpmdW5jdGlvbigpe3JldHVybiBIZSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihlKXt0aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZSx0aGlzKX0pfSxhZnRlcjpmdW5jdGlvbigpe3JldHVybiBIZSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihlKXt0aGlzLnBhcmVudE5vZGUmJnRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZSx0aGlzLm5leHRTaWJsaW5nKX0pfSxlbXB0eTpmdW5jdGlvbigpe2Zvcih2YXIgZSx0PTA7bnVsbCE9KGU9dGhpc1t0XSk7dCsrKTE9PT1lLm5vZGVUeXBlJiYoUy5jbGVhbkRhdGEodmUoZSwhMSkpLGUudGV4dENvbnRlbnQ9IiIpO3JldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbihlLHQpe3JldHVybiBlPW51bGwhPWUmJmUsdD1udWxsPT10P2U6dCx0aGlzLm1hcChmdW5jdGlvbigpe3JldHVybiBTLmNsb25lKHRoaXMsZSx0KX0pfSxodG1sOmZ1bmN0aW9uKGUpe3JldHVybiAkKHRoaXMsZnVuY3Rpb24oZSl7dmFyIHQ9dGhpc1swXXx8e30sbj0wLHI9dGhpcy5sZW5ndGg7aWYodm9pZCAwPT09ZSYmMT09PXQubm9kZVR5cGUpcmV0dXJuIHQuaW5uZXJIVE1MO2lmKCJzdHJpbmciPT10eXBlb2YgZSYmIWtlLnRlc3QoZSkmJiFnZVsoZGUuZXhlYyhlKXx8WyIiLCIiXSlbMV0udG9Mb3dlckNhc2UoKV0pe2U9Uy5odG1sUHJlZmlsdGVyKGUpO3RyeXtmb3IoO248cjtuKyspMT09PSh0PXRoaXNbbl18fHt9KS5ub2RlVHlwZSYmKFMuY2xlYW5EYXRhKHZlKHQsITEpKSx0LmlubmVySFRNTD1lKTt0PTB9Y2F0Y2goZSl7fX10JiZ0aGlzLmVtcHR5KCkuYXBwZW5kKGUpfSxudWxsLGUsYXJndW1lbnRzLmxlbmd0aCl9LHJlcGxhY2VXaXRoOmZ1bmN0aW9uKCl7dmFyIG49W107cmV0dXJuIEhlKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMucGFyZW50Tm9kZTtTLmluQXJyYXkodGhpcyxuKTwwJiYoUy5jbGVhbkRhdGEodmUodGhpcykpLHQmJnQucmVwbGFjZUNoaWxkKGUsdGhpcykpfSxuKX19KSxTLmVhY2goe2FwcGVuZFRvOiJhcHBlbmQiLHByZXBlbmRUbzoicHJlcGVuZCIsaW5zZXJ0QmVmb3JlOiJiZWZvcmUiLGluc2VydEFmdGVyOiJhZnRlciIscmVwbGFjZUFsbDoicmVwbGFjZVdpdGgifSxmdW5jdGlvbihlLGEpe1MuZm5bZV09ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG49W10scj1TKGUpLGk9ci5sZW5ndGgtMSxvPTA7bzw9aTtvKyspdD1vPT09aT90aGlzOnRoaXMuY2xvbmUoITApLFMocltvXSlbYV0odCksdS5hcHBseShuLHQuZ2V0KCkpO3JldHVybiB0aGlzLnB1c2hTdGFjayhuKX19KTt2YXIgUGU9bmV3IFJlZ0V4cCgiXigiK2VlKyIpKD8hcHgpW2EteiVdKyQiLCJpIiksUmU9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O3JldHVybiB0JiZ0Lm9wZW5lcnx8KHQ9QyksdC5nZXRDb21wdXRlZFN0eWxlKGUpfSxNZT1mdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvPXt9O2ZvcihpIGluIHQpb1tpXT1lLnN0eWxlW2ldLGUuc3R5bGVbaV09dFtpXTtmb3IoaSBpbiByPW4uY2FsbChlKSx0KWUuc3R5bGVbaV09b1tpXTtyZXR1cm4gcn0sSWU9bmV3IFJlZ0V4cChuZS5qb2luKCJ8IiksImkiKTtmdW5jdGlvbiBXZShlLHQsbil7dmFyIHIsaSxvLGEscz1lLnN0eWxlO3JldHVybihuPW58fFJlKGUpKSYmKCIiIT09KGE9bi5nZXRQcm9wZXJ0eVZhbHVlKHQpfHxuW3RdKXx8aWUoZSl8fChhPVMuc3R5bGUoZSx0KSksIXkucGl4ZWxCb3hTdHlsZXMoKSYmUGUudGVzdChhKSYmSWUudGVzdCh0KSYmKHI9cy53aWR0aCxpPXMubWluV2lkdGgsbz1zLm1heFdpZHRoLHMubWluV2lkdGg9cy5tYXhXaWR0aD1zLndpZHRoPWEsYT1uLndpZHRoLHMud2lkdGg9cixzLm1pbldpZHRoPWkscy5tYXhXaWR0aD1vKSksdm9pZCAwIT09YT9hKyIiOmF9ZnVuY3Rpb24gRmUoZSx0KXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7aWYoIWUoKSlyZXR1cm4odGhpcy5nZXQ9dCkuYXBwbHkodGhpcyxhcmd1bWVudHMpO2RlbGV0ZSB0aGlzLmdldH19fSFmdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXtpZihsKXt1LnN0eWxlLmNzc1RleHQ9InBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7d2lkdGg6NjBweDttYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjAiLGwuc3R5bGUuY3NzVGV4dD0icG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6c2Nyb2xsO21hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7d2lkdGg6NjAlO3RvcDoxJSIscmUuYXBwZW5kQ2hpbGQodSkuYXBwZW5kQ2hpbGQobCk7dmFyIGU9Qy5nZXRDb21wdXRlZFN0eWxlKGwpO249IjElIiE9PWUudG9wLHM9MTI9PT10KGUubWFyZ2luTGVmdCksbC5zdHlsZS5yaWdodD0iNjAlIixvPTM2PT09dChlLnJpZ2h0KSxyPTM2PT09dChlLndpZHRoKSxsLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSIsaT0xMj09PXQobC5vZmZzZXRXaWR0aC8zKSxyZS5yZW1vdmVDaGlsZCh1KSxsPW51bGx9fWZ1bmN0aW9uIHQoZSl7cmV0dXJuIE1hdGgucm91bmQocGFyc2VGbG9hdChlKSl9dmFyIG4scixpLG8sYSxzLHU9RS5jcmVhdGVFbGVtZW50KCJkaXYiKSxsPUUuY3JlYXRlRWxlbWVudCgiZGl2Iik7bC5zdHlsZSYmKGwuc3R5bGUuYmFja2dyb3VuZENsaXA9ImNvbnRlbnQtYm94IixsLmNsb25lTm9kZSghMCkuc3R5bGUuYmFja2dyb3VuZENsaXA9IiIseS5jbGVhckNsb25lU3R5bGU9ImNvbnRlbnQtYm94Ij09PWwuc3R5bGUuYmFja2dyb3VuZENsaXAsUy5leHRlbmQoeSx7Ym94U2l6aW5nUmVsaWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gZSgpLHJ9LHBpeGVsQm94U3R5bGVzOmZ1bmN0aW9uKCl7cmV0dXJuIGUoKSxvfSxwaXhlbFBvc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGUoKSxufSxyZWxpYWJsZU1hcmdpbkxlZnQ6ZnVuY3Rpb24oKXtyZXR1cm4gZSgpLHN9LHNjcm9sbGJveFNpemU6ZnVuY3Rpb24oKXtyZXR1cm4gZSgpLGl9LHJlbGlhYmxlVHJEaW1lbnNpb25zOmZ1bmN0aW9uKCl7dmFyIGUsdCxuLHI7cmV0dXJuIG51bGw9PWEmJihlPUUuY3JlYXRlRWxlbWVudCgidGFibGUiKSx0PUUuY3JlYXRlRWxlbWVudCgidHIiKSxuPUUuY3JlYXRlRWxlbWVudCgiZGl2IiksZS5zdHlsZS5jc3NUZXh0PSJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O2JvcmRlci1jb2xsYXBzZTpzZXBhcmF0ZSIsdC5zdHlsZS5jc3NUZXh0PSJib3JkZXI6MXB4IHNvbGlkIix0LnN0eWxlLmhlaWdodD0iMXB4IixuLnN0eWxlLmhlaWdodD0iOXB4IixuLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixyZS5hcHBlbmRDaGlsZChlKS5hcHBlbmRDaGlsZCh0KS5hcHBlbmRDaGlsZChuKSxyPUMuZ2V0Q29tcHV0ZWRTdHlsZSh0KSxhPXBhcnNlSW50KHIuaGVpZ2h0LDEwKStwYXJzZUludChyLmJvcmRlclRvcFdpZHRoLDEwKStwYXJzZUludChyLmJvcmRlckJvdHRvbVdpZHRoLDEwKT09PXQub2Zmc2V0SGVpZ2h0LHJlLnJlbW92ZUNoaWxkKGUpKSxhfX0pKX0oKTt2YXIgQmU9WyJXZWJraXQiLCJNb3oiLCJtcyJdLCRlPUUuY3JlYXRlRWxlbWVudCgiZGl2Iikuc3R5bGUsX2U9e307ZnVuY3Rpb24gemUoZSl7dmFyIHQ9Uy5jc3NQcm9wc1tlXXx8X2VbZV07cmV0dXJuIHR8fChlIGluICRlP2U6X2VbZV09ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSksbj1CZS5sZW5ndGg7d2hpbGUobi0tKWlmKChlPUJlW25dK3QpaW4gJGUpcmV0dXJuIGV9KGUpfHxlKX12YXIgVWU9L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFhlPS9eLS0vLFZlPXtwb3NpdGlvbjoiYWJzb2x1dGUiLHZpc2liaWxpdHk6ImhpZGRlbiIsZGlzcGxheToiYmxvY2sifSxHZT17bGV0dGVyU3BhY2luZzoiMCIsZm9udFdlaWdodDoiNDAwIn07ZnVuY3Rpb24gWWUoZSx0LG4pe3ZhciByPXRlLmV4ZWModCk7cmV0dXJuIHI/TWF0aC5tYXgoMCxyWzJdLShufHwwKSkrKHJbM118fCJweCIpOnR9ZnVuY3Rpb24gUWUoZSx0LG4scixpLG8pe3ZhciBhPSJ3aWR0aCI9PT10PzE6MCxzPTAsdT0wO2lmKG49PT0ocj8iYm9yZGVyIjoiY29udGVudCIpKXJldHVybiAwO2Zvcig7YTw0O2ErPTIpIm1hcmdpbiI9PT1uJiYodSs9Uy5jc3MoZSxuK25lW2FdLCEwLGkpKSxyPygiY29udGVudCI9PT1uJiYodS09Uy5jc3MoZSwicGFkZGluZyIrbmVbYV0sITAsaSkpLCJtYXJnaW4iIT09biYmKHUtPVMuY3NzKGUsImJvcmRlciIrbmVbYV0rIldpZHRoIiwhMCxpKSkpOih1Kz1TLmNzcyhlLCJwYWRkaW5nIituZVthXSwhMCxpKSwicGFkZGluZyIhPT1uP3UrPVMuY3NzKGUsImJvcmRlciIrbmVbYV0rIldpZHRoIiwhMCxpKTpzKz1TLmNzcyhlLCJib3JkZXIiK25lW2FdKyJXaWR0aCIsITAsaSkpO3JldHVybiFyJiYwPD1vJiYodSs9TWF0aC5tYXgoMCxNYXRoLmNlaWwoZVsib2Zmc2V0Iit0WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKV0tby11LXMtLjUpKXx8MCksdX1mdW5jdGlvbiBKZShlLHQsbil7dmFyIHI9UmUoZSksaT0oIXkuYm94U2l6aW5nUmVsaWFibGUoKXx8bikmJiJib3JkZXItYm94Ij09PVMuY3NzKGUsImJveFNpemluZyIsITEsciksbz1pLGE9V2UoZSx0LHIpLHM9Im9mZnNldCIrdFswXS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSk7aWYoUGUudGVzdChhKSl7aWYoIW4pcmV0dXJuIGE7YT0iYXV0byJ9cmV0dXJuKCF5LmJveFNpemluZ1JlbGlhYmxlKCkmJml8fCF5LnJlbGlhYmxlVHJEaW1lbnNpb25zKCkmJkEoZSwidHIiKXx8ImF1dG8iPT09YXx8IXBhcnNlRmxvYXQoYSkmJiJpbmxpbmUiPT09Uy5jc3MoZSwiZGlzcGxheSIsITEscikpJiZlLmdldENsaWVudFJlY3RzKCkubGVuZ3RoJiYoaT0iYm9yZGVyLWJveCI9PT1TLmNzcyhlLCJib3hTaXppbmciLCExLHIpLChvPXMgaW4gZSkmJihhPWVbc10pKSwoYT1wYXJzZUZsb2F0KGEpfHwwKStRZShlLHQsbnx8KGk/ImJvcmRlciI6ImNvbnRlbnQiKSxvLHIsYSkrInB4In1mdW5jdGlvbiBLZShlLHQsbixyLGkpe3JldHVybiBuZXcgS2UucHJvdG90eXBlLmluaXQoZSx0LG4scixpKX1TLmV4dGVuZCh7Y3NzSG9va3M6e29wYWNpdHk6e2dldDpmdW5jdGlvbihlLHQpe2lmKHQpe3ZhciBuPVdlKGUsIm9wYWNpdHkiKTtyZXR1cm4iIj09PW4/IjEiOm59fX19LGNzc051bWJlcjp7YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsY29sdW1uQ291bnQ6ITAsZmlsbE9wYWNpdHk6ITAsZmxleEdyb3c6ITAsZmxleFNocmluazohMCxmb250V2VpZ2h0OiEwLGdyaWRBcmVhOiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTdGFydDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITB9LGNzc1Byb3BzOnt9LHN0eWxlOmZ1bmN0aW9uKGUsdCxuLHIpe2lmKGUmJjMhPT1lLm5vZGVUeXBlJiY4IT09ZS5ub2RlVHlwZSYmZS5zdHlsZSl7dmFyIGksbyxhLHM9WCh0KSx1PVhlLnRlc3QodCksbD1lLnN0eWxlO2lmKHV8fCh0PXplKHMpKSxhPVMuY3NzSG9va3NbdF18fFMuY3NzSG9va3Nbc10sdm9pZCAwPT09bilyZXR1cm4gYSYmImdldCJpbiBhJiZ2b2lkIDAhPT0oaT1hLmdldChlLCExLHIpKT9pOmxbdF07InN0cmluZyI9PT0obz10eXBlb2YgbikmJihpPXRlLmV4ZWMobikpJiZpWzFdJiYobj1zZShlLHQsaSksbz0ibnVtYmVyIiksbnVsbCE9biYmbj09biYmKCJudW1iZXIiIT09b3x8dXx8KG4rPWkmJmlbM118fChTLmNzc051bWJlcltzXT8iIjoicHgiKSkseS5jbGVhckNsb25lU3R5bGV8fCIiIT09bnx8MCE9PXQuaW5kZXhPZigiYmFja2dyb3VuZCIpfHwobFt0XT0iaW5oZXJpdCIpLGEmJiJzZXQiaW4gYSYmdm9pZCAwPT09KG49YS5zZXQoZSxuLHIpKXx8KHU/bC5zZXRQcm9wZXJ0eSh0LG4pOmxbdF09bikpfX0sY3NzOmZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBpLG8sYSxzPVgodCk7cmV0dXJuIFhlLnRlc3QodCl8fCh0PXplKHMpKSwoYT1TLmNzc0hvb2tzW3RdfHxTLmNzc0hvb2tzW3NdKSYmImdldCJpbiBhJiYoaT1hLmdldChlLCEwLG4pKSx2b2lkIDA9PT1pJiYoaT1XZShlLHQscikpLCJub3JtYWwiPT09aSYmdCBpbiBHZSYmKGk9R2VbdF0pLCIiPT09bnx8bj8obz1wYXJzZUZsb2F0KGkpLCEwPT09bnx8aXNGaW5pdGUobyk/b3x8MDppKTppfX0pLFMuZWFjaChbImhlaWdodCIsIndpZHRoIl0sZnVuY3Rpb24oZSx1KXtTLmNzc0hvb2tzW3VdPXtnZXQ6ZnVuY3Rpb24oZSx0LG4pe2lmKHQpcmV0dXJuIVVlLnRlc3QoUy5jc3MoZSwiZGlzcGxheSIpKXx8ZS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCYmZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aD9KZShlLHUsbik6TWUoZSxWZSxmdW5jdGlvbigpe3JldHVybiBKZShlLHUsbil9KX0sc2V0OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpPVJlKGUpLG89IXkuc2Nyb2xsYm94U2l6ZSgpJiYiYWJzb2x1dGUiPT09aS5wb3NpdGlvbixhPShvfHxuKSYmImJvcmRlci1ib3giPT09Uy5jc3MoZSwiYm94U2l6aW5nIiwhMSxpKSxzPW4/UWUoZSx1LG4sYSxpKTowO3JldHVybiBhJiZvJiYocy09TWF0aC5jZWlsKGVbIm9mZnNldCIrdVswXS50b1VwcGVyQ2FzZSgpK3Uuc2xpY2UoMSldLXBhcnNlRmxvYXQoaVt1XSktUWUoZSx1LCJib3JkZXIiLCExLGkpLS41KSkscyYmKHI9dGUuZXhlYyh0KSkmJiJweCIhPT0oclszXXx8InB4IikmJihlLnN0eWxlW3VdPXQsdD1TLmNzcyhlLHUpKSxZZSgwLHQscyl9fX0pLFMuY3NzSG9va3MubWFyZ2luTGVmdD1GZSh5LnJlbGlhYmxlTWFyZ2luTGVmdCxmdW5jdGlvbihlLHQpe2lmKHQpcmV0dXJuKHBhcnNlRmxvYXQoV2UoZSwibWFyZ2luTGVmdCIpKXx8ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0LU1lKGUse21hcmdpbkxlZnQ6MH0sZnVuY3Rpb24oKXtyZXR1cm4gZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0fSkpKyJweCJ9KSxTLmVhY2goe21hcmdpbjoiIixwYWRkaW5nOiIiLGJvcmRlcjoiV2lkdGgifSxmdW5jdGlvbihpLG8pe1MuY3NzSG9va3NbaStvXT17ZXhwYW5kOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLG49e30scj0ic3RyaW5nIj09dHlwZW9mIGU/ZS5zcGxpdCgiICIpOltlXTt0PDQ7dCsrKW5baStuZVt0XStvXT1yW3RdfHxyW3QtMl18fHJbMF07cmV0dXJuIG59fSwibWFyZ2luIiE9PWkmJihTLmNzc0hvb2tzW2krb10uc2V0PVllKX0pLFMuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gJCh0aGlzLGZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG89e30sYT0wO2lmKEFycmF5LmlzQXJyYXkodCkpe2ZvcihyPVJlKGUpLGk9dC5sZW5ndGg7YTxpO2ErKylvW3RbYV1dPVMuY3NzKGUsdFthXSwhMSxyKTtyZXR1cm4gb31yZXR1cm4gdm9pZCAwIT09bj9TLnN0eWxlKGUsdCxuKTpTLmNzcyhlLHQpfSxlLHQsMTxhcmd1bWVudHMubGVuZ3RoKX19KSwoKFMuVHdlZW49S2UpLnByb3RvdHlwZT17Y29uc3RydWN0b3I6S2UsaW5pdDpmdW5jdGlvbihlLHQsbixyLGksbyl7dGhpcy5lbGVtPWUsdGhpcy5wcm9wPW4sdGhpcy5lYXNpbmc9aXx8Uy5lYXNpbmcuX2RlZmF1bHQsdGhpcy5vcHRpb25zPXQsdGhpcy5zdGFydD10aGlzLm5vdz10aGlzLmN1cigpLHRoaXMuZW5kPXIsdGhpcy51bml0PW98fChTLmNzc051bWJlcltuXT8iIjoicHgiKX0sY3VyOmZ1bmN0aW9uKCl7dmFyIGU9S2UucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIGUmJmUuZ2V0P2UuZ2V0KHRoaXMpOktlLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyl9LHJ1bjpmdW5jdGlvbihlKXt2YXIgdCxuPUtlLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiB0aGlzLm9wdGlvbnMuZHVyYXRpb24/dGhpcy5wb3M9dD1TLmVhc2luZ1t0aGlzLmVhc2luZ10oZSx0aGlzLm9wdGlvbnMuZHVyYXRpb24qZSwwLDEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKTp0aGlzLnBvcz10PWUsdGhpcy5ub3c9KHRoaXMuZW5kLXRoaXMuc3RhcnQpKnQrdGhpcy5zdGFydCx0aGlzLm9wdGlvbnMuc3RlcCYmdGhpcy5vcHRpb25zLnN0ZXAuY2FsbCh0aGlzLmVsZW0sdGhpcy5ub3csdGhpcyksbiYmbi5zZXQ/bi5zZXQodGhpcyk6S2UucHJvcEhvb2tzLl9kZWZhdWx0LnNldCh0aGlzKSx0aGlzfX0pLmluaXQucHJvdG90eXBlPUtlLnByb3RvdHlwZSwoS2UucHJvcEhvb2tzPXtfZGVmYXVsdDp7Z2V0OmZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiAxIT09ZS5lbGVtLm5vZGVUeXBlfHxudWxsIT1lLmVsZW1bZS5wcm9wXSYmbnVsbD09ZS5lbGVtLnN0eWxlW2UucHJvcF0/ZS5lbGVtW2UucHJvcF06KHQ9Uy5jc3MoZS5lbGVtLGUucHJvcCwiIikpJiYiYXV0byIhPT10P3Q6MH0sc2V0OmZ1bmN0aW9uKGUpe1MuZnguc3RlcFtlLnByb3BdP1MuZnguc3RlcFtlLnByb3BdKGUpOjEhPT1lLmVsZW0ubm9kZVR5cGV8fCFTLmNzc0hvb2tzW2UucHJvcF0mJm51bGw9PWUuZWxlbS5zdHlsZVt6ZShlLnByb3ApXT9lLmVsZW1bZS5wcm9wXT1lLm5vdzpTLnN0eWxlKGUuZWxlbSxlLnByb3AsZS5ub3crZS51bml0KX19fSkuc2Nyb2xsVG9wPUtlLnByb3BIb29rcy5zY3JvbGxMZWZ0PXtzZXQ6ZnVuY3Rpb24oZSl7ZS5lbGVtLm5vZGVUeXBlJiZlLmVsZW0ucGFyZW50Tm9kZSYmKGUuZWxlbVtlLnByb3BdPWUubm93KX19LFMuZWFzaW5nPXtsaW5lYXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LHN3aW5nOmZ1bmN0aW9uKGUpe3JldHVybi41LU1hdGguY29zKGUqTWF0aC5QSSkvMn0sX2RlZmF1bHQ6InN3aW5nIn0sUy5meD1LZS5wcm90b3R5cGUuaW5pdCxTLmZ4LnN0ZXA9e307dmFyIFplLGV0LHR0LG50LHJ0PS9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLyxpdD0vcXVldWVIb29rcyQvO2Z1bmN0aW9uIG90KCl7ZXQmJighMT09PUUuaGlkZGVuJiZDLnJlcXVlc3RBbmltYXRpb25GcmFtZT9DLnJlcXVlc3RBbmltYXRpb25GcmFtZShvdCk6Qy5zZXRUaW1lb3V0KG90LFMuZnguaW50ZXJ2YWwpLFMuZngudGljaygpKX1mdW5jdGlvbiBhdCgpe3JldHVybiBDLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtaZT12b2lkIDB9KSxaZT1EYXRlLm5vdygpfWZ1bmN0aW9uIHN0KGUsdCl7dmFyIG4scj0wLGk9e2hlaWdodDplfTtmb3IodD10PzE6MDtyPDQ7cis9Mi10KWlbIm1hcmdpbiIrKG49bmVbcl0pXT1pWyJwYWRkaW5nIituXT1lO3JldHVybiB0JiYoaS5vcGFjaXR5PWkud2lkdGg9ZSksaX1mdW5jdGlvbiB1dChlLHQsbil7Zm9yKHZhciByLGk9KGx0LnR3ZWVuZXJzW3RdfHxbXSkuY29uY2F0KGx0LnR3ZWVuZXJzWyIqIl0pLG89MCxhPWkubGVuZ3RoO288YTtvKyspaWYocj1pW29dLmNhbGwobix0LGUpKXJldHVybiByfWZ1bmN0aW9uIGx0KG8sZSx0KXt2YXIgbixhLHI9MCxpPWx0LnByZWZpbHRlcnMubGVuZ3RoLHM9Uy5EZWZlcnJlZCgpLmFsd2F5cyhmdW5jdGlvbigpe2RlbGV0ZSB1LmVsZW19KSx1PWZ1bmN0aW9uKCl7aWYoYSlyZXR1cm4hMTtmb3IodmFyIGU9WmV8fGF0KCksdD1NYXRoLm1heCgwLGwuc3RhcnRUaW1lK2wuZHVyYXRpb24tZSksbj0xLSh0L2wuZHVyYXRpb258fDApLHI9MCxpPWwudHdlZW5zLmxlbmd0aDtyPGk7cisrKWwudHdlZW5zW3JdLnJ1bihuKTtyZXR1cm4gcy5ub3RpZnlXaXRoKG8sW2wsbix0XSksbjwxJiZpP3Q6KGl8fHMubm90aWZ5V2l0aChvLFtsLDEsMF0pLHMucmVzb2x2ZVdpdGgobyxbbF0pLCExKX0sbD1zLnByb21pc2Uoe2VsZW06byxwcm9wczpTLmV4dGVuZCh7fSxlKSxvcHRzOlMuZXh0ZW5kKCEwLHtzcGVjaWFsRWFzaW5nOnt9LGVhc2luZzpTLmVhc2luZy5fZGVmYXVsdH0sdCksb3JpZ2luYWxQcm9wZXJ0aWVzOmUsb3JpZ2luYWxPcHRpb25zOnQsc3RhcnRUaW1lOlplfHxhdCgpLGR1cmF0aW9uOnQuZHVyYXRpb24sdHdlZW5zOltdLGNyZWF0ZVR3ZWVuOmZ1bmN0aW9uKGUsdCl7dmFyIG49Uy5Ud2VlbihvLGwub3B0cyxlLHQsbC5vcHRzLnNwZWNpYWxFYXNpbmdbZV18fGwub3B0cy5lYXNpbmcpO3JldHVybiBsLnR3ZWVucy5wdXNoKG4pLG59LHN0b3A6ZnVuY3Rpb24oZSl7dmFyIHQ9MCxuPWU/bC50d2VlbnMubGVuZ3RoOjA7aWYoYSlyZXR1cm4gdGhpcztmb3IoYT0hMDt0PG47dCsrKWwudHdlZW5zW3RdLnJ1bigxKTtyZXR1cm4gZT8ocy5ub3RpZnlXaXRoKG8sW2wsMSwwXSkscy5yZXNvbHZlV2l0aChvLFtsLGVdKSk6cy5yZWplY3RXaXRoKG8sW2wsZV0pLHRoaXN9fSksYz1sLnByb3BzO2ZvcighZnVuY3Rpb24oZSx0KXt2YXIgbixyLGksbyxhO2ZvcihuIGluIGUpaWYoaT10W3I9WChuKV0sbz1lW25dLEFycmF5LmlzQXJyYXkobykmJihpPW9bMV0sbz1lW25dPW9bMF0pLG4hPT1yJiYoZVtyXT1vLGRlbGV0ZSBlW25dKSwoYT1TLmNzc0hvb2tzW3JdKSYmImV4cGFuZCJpbiBhKWZvcihuIGluIG89YS5leHBhbmQobyksZGVsZXRlIGVbcl0sbyluIGluIGV8fChlW25dPW9bbl0sdFtuXT1pKTtlbHNlIHRbcl09aX0oYyxsLm9wdHMuc3BlY2lhbEVhc2luZyk7cjxpO3IrKylpZihuPWx0LnByZWZpbHRlcnNbcl0uY2FsbChsLG8sYyxsLm9wdHMpKXJldHVybiBtKG4uc3RvcCkmJihTLl9xdWV1ZUhvb2tzKGwuZWxlbSxsLm9wdHMucXVldWUpLnN0b3A9bi5zdG9wLmJpbmQobikpLG47cmV0dXJuIFMubWFwKGMsdXQsbCksbShsLm9wdHMuc3RhcnQpJiZsLm9wdHMuc3RhcnQuY2FsbChvLGwpLGwucHJvZ3Jlc3MobC5vcHRzLnByb2dyZXNzKS5kb25lKGwub3B0cy5kb25lLGwub3B0cy5jb21wbGV0ZSkuZmFpbChsLm9wdHMuZmFpbCkuYWx3YXlzKGwub3B0cy5hbHdheXMpLFMuZngudGltZXIoUy5leHRlbmQodSx7ZWxlbTpvLGFuaW06bCxxdWV1ZTpsLm9wdHMucXVldWV9KSksbH1TLkFuaW1hdGlvbj1TLmV4dGVuZChsdCx7dHdlZW5lcnM6eyIqIjpbZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLmNyZWF0ZVR3ZWVuKGUsdCk7cmV0dXJuIHNlKG4uZWxlbSxlLHRlLmV4ZWModCksbiksbn1dfSx0d2VlbmVyOmZ1bmN0aW9uKGUsdCl7bShlKT8odD1lLGU9WyIqIl0pOmU9ZS5tYXRjaChQKTtmb3IodmFyIG4scj0wLGk9ZS5sZW5ndGg7cjxpO3IrKyluPWVbcl0sbHQudHdlZW5lcnNbbl09bHQudHdlZW5lcnNbbl18fFtdLGx0LnR3ZWVuZXJzW25dLnVuc2hpZnQodCl9LHByZWZpbHRlcnM6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYSxzLHUsbCxjLGY9IndpZHRoImluIHR8fCJoZWlnaHQiaW4gdCxwPXRoaXMsZD17fSxoPWUuc3R5bGUsZz1lLm5vZGVUeXBlJiZhZShlKSx2PVkuZ2V0KGUsImZ4c2hvdyIpO2ZvcihyIGluIG4ucXVldWV8fChudWxsPT0oYT1TLl9xdWV1ZUhvb2tzKGUsImZ4IikpLnVucXVldWVkJiYoYS51bnF1ZXVlZD0wLHM9YS5lbXB0eS5maXJlLGEuZW1wdHkuZmlyZT1mdW5jdGlvbigpe2EudW5xdWV1ZWR8fHMoKX0pLGEudW5xdWV1ZWQrKyxwLmFsd2F5cyhmdW5jdGlvbigpe3AuYWx3YXlzKGZ1bmN0aW9uKCl7YS51bnF1ZXVlZC0tLFMucXVldWUoZSwiZngiKS5sZW5ndGh8fGEuZW1wdHkuZmlyZSgpfSl9KSksdClpZihpPXRbcl0scnQudGVzdChpKSl7aWYoZGVsZXRlIHRbcl0sbz1vfHwidG9nZ2xlIj09PWksaT09PShnPyJoaWRlIjoic2hvdyIpKXtpZigic2hvdyIhPT1pfHwhdnx8dm9pZCAwPT09dltyXSljb250aW51ZTtnPSEwfWRbcl09diYmdltyXXx8Uy5zdHlsZShlLHIpfWlmKCh1PSFTLmlzRW1wdHlPYmplY3QodCkpfHwhUy5pc0VtcHR5T2JqZWN0KGQpKWZvcihyIGluIGYmJjE9PT1lLm5vZGVUeXBlJiYobi5vdmVyZmxvdz1baC5vdmVyZmxvdyxoLm92ZXJmbG93WCxoLm92ZXJmbG93WV0sbnVsbD09KGw9diYmdi5kaXNwbGF5KSYmKGw9WS5nZXQoZSwiZGlzcGxheSIpKSwibm9uZSI9PT0oYz1TLmNzcyhlLCJkaXNwbGF5IikpJiYobD9jPWw6KGxlKFtlXSwhMCksbD1lLnN0eWxlLmRpc3BsYXl8fGwsYz1TLmNzcyhlLCJkaXNwbGF5IiksbGUoW2VdKSkpLCgiaW5saW5lIj09PWN8fCJpbmxpbmUtYmxvY2siPT09YyYmbnVsbCE9bCkmJiJub25lIj09PVMuY3NzKGUsImZsb2F0IikmJih1fHwocC5kb25lKGZ1bmN0aW9uKCl7aC5kaXNwbGF5PWx9KSxudWxsPT1sJiYoYz1oLmRpc3BsYXksbD0ibm9uZSI9PT1jPyIiOmMpKSxoLmRpc3BsYXk9ImlubGluZS1ibG9jayIpKSxuLm92ZXJmbG93JiYoaC5vdmVyZmxvdz0iaGlkZGVuIixwLmFsd2F5cyhmdW5jdGlvbigpe2gub3ZlcmZsb3c9bi5vdmVyZmxvd1swXSxoLm92ZXJmbG93WD1uLm92ZXJmbG93WzFdLGgub3ZlcmZsb3dZPW4ub3ZlcmZsb3dbMl19KSksdT0hMSxkKXV8fCh2PyJoaWRkZW4iaW4gdiYmKGc9di5oaWRkZW4pOnY9WS5hY2Nlc3MoZSwiZnhzaG93Iix7ZGlzcGxheTpsfSksbyYmKHYuaGlkZGVuPSFnKSxnJiZsZShbZV0sITApLHAuZG9uZShmdW5jdGlvbigpe2ZvcihyIGluIGd8fGxlKFtlXSksWS5yZW1vdmUoZSwiZnhzaG93IiksZClTLnN0eWxlKGUscixkW3JdKX0pKSx1PXV0KGc/dltyXTowLHIscCksciBpbiB2fHwodltyXT11LnN0YXJ0LGcmJih1LmVuZD11LnN0YXJ0LHUuc3RhcnQ9MCkpfV0scHJlZmlsdGVyOmZ1bmN0aW9uKGUsdCl7dD9sdC5wcmVmaWx0ZXJzLnVuc2hpZnQoZSk6bHQucHJlZmlsdGVycy5wdXNoKGUpfX0pLFMuc3BlZWQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPWUmJiJvYmplY3QiPT10eXBlb2YgZT9TLmV4dGVuZCh7fSxlKTp7Y29tcGxldGU6bnx8IW4mJnR8fG0oZSkmJmUsZHVyYXRpb246ZSxlYXNpbmc6biYmdHx8dCYmIW0odCkmJnR9O3JldHVybiBTLmZ4Lm9mZj9yLmR1cmF0aW9uPTA6Im51bWJlciIhPXR5cGVvZiByLmR1cmF0aW9uJiYoci5kdXJhdGlvbiBpbiBTLmZ4LnNwZWVkcz9yLmR1cmF0aW9uPVMuZnguc3BlZWRzW3IuZHVyYXRpb25dOnIuZHVyYXRpb249Uy5meC5zcGVlZHMuX2RlZmF1bHQpLG51bGwhPXIucXVldWUmJiEwIT09ci5xdWV1ZXx8KHIucXVldWU9ImZ4Iiksci5vbGQ9ci5jb21wbGV0ZSxyLmNvbXBsZXRlPWZ1bmN0aW9uKCl7bShyLm9sZCkmJnIub2xkLmNhbGwodGhpcyksci5xdWV1ZSYmUy5kZXF1ZXVlKHRoaXMsci5xdWV1ZSl9LHJ9LFMuZm4uZXh0ZW5kKHtmYWRlVG86ZnVuY3Rpb24oZSx0LG4scil7cmV0dXJuIHRoaXMuZmlsdGVyKGFlKS5jc3MoIm9wYWNpdHkiLDApLnNob3coKS5lbmQoKS5hbmltYXRlKHtvcGFjaXR5OnR9LGUsbixyKX0sYW5pbWF0ZTpmdW5jdGlvbih0LGUsbixyKXt2YXIgaT1TLmlzRW1wdHlPYmplY3QodCksbz1TLnNwZWVkKGUsbixyKSxhPWZ1bmN0aW9uKCl7dmFyIGU9bHQodGhpcyxTLmV4dGVuZCh7fSx0KSxvKTsoaXx8WS5nZXQodGhpcywiZmluaXNoIikpJiZlLnN0b3AoITApfTtyZXR1cm4gYS5maW5pc2g9YSxpfHwhMT09PW8ucXVldWU/dGhpcy5lYWNoKGEpOnRoaXMucXVldWUoby5xdWV1ZSxhKX0sc3RvcDpmdW5jdGlvbihpLGUsbyl7dmFyIGE9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zdG9wO2RlbGV0ZSBlLnN0b3AsdChvKX07cmV0dXJuInN0cmluZyIhPXR5cGVvZiBpJiYobz1lLGU9aSxpPXZvaWQgMCksZSYmdGhpcy5xdWV1ZShpfHwiZngiLFtdKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT0hMCx0PW51bGwhPWkmJmkrInF1ZXVlSG9va3MiLG49Uy50aW1lcnMscj1ZLmdldCh0aGlzKTtpZih0KXJbdF0mJnJbdF0uc3RvcCYmYShyW3RdKTtlbHNlIGZvcih0IGluIHIpclt0XSYmclt0XS5zdG9wJiZpdC50ZXN0KHQpJiZhKHJbdF0pO2Zvcih0PW4ubGVuZ3RoO3QtLTspblt0XS5lbGVtIT09dGhpc3x8bnVsbCE9aSYmblt0XS5xdWV1ZSE9PWl8fChuW3RdLmFuaW0uc3RvcChvKSxlPSExLG4uc3BsaWNlKHQsMSkpOyFlJiZvfHxTLmRlcXVldWUodGhpcyxpKX0pfSxmaW5pc2g6ZnVuY3Rpb24oYSl7cmV0dXJuITEhPT1hJiYoYT1hfHwiZngiKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZSx0PVkuZ2V0KHRoaXMpLG49dFthKyJxdWV1ZSJdLHI9dFthKyJxdWV1ZUhvb2tzIl0saT1TLnRpbWVycyxvPW4/bi5sZW5ndGg6MDtmb3IodC5maW5pc2g9ITAsUy5xdWV1ZSh0aGlzLGEsW10pLHImJnIuc3RvcCYmci5zdG9wLmNhbGwodGhpcywhMCksZT1pLmxlbmd0aDtlLS07KWlbZV0uZWxlbT09PXRoaXMmJmlbZV0ucXVldWU9PT1hJiYoaVtlXS5hbmltLnN0b3AoITApLGkuc3BsaWNlKGUsMSkpO2ZvcihlPTA7ZTxvO2UrKyluW2VdJiZuW2VdLmZpbmlzaCYmbltlXS5maW5pc2guY2FsbCh0aGlzKTtkZWxldGUgdC5maW5pc2h9KX19KSxTLmVhY2goWyJ0b2dnbGUiLCJzaG93IiwiaGlkZSJdLGZ1bmN0aW9uKGUscil7dmFyIGk9Uy5mbltyXTtTLmZuW3JdPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbnVsbD09ZXx8ImJvb2xlYW4iPT10eXBlb2YgZT9pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0aGlzLmFuaW1hdGUoc3QociwhMCksZSx0LG4pfX0pLFMuZWFjaCh7c2xpZGVEb3duOnN0KCJzaG93Iiksc2xpZGVVcDpzdCgiaGlkZSIpLHNsaWRlVG9nZ2xlOnN0KCJ0b2dnbGUiKSxmYWRlSW46e29wYWNpdHk6InNob3cifSxmYWRlT3V0OntvcGFjaXR5OiJoaWRlIn0sZmFkZVRvZ2dsZTp7b3BhY2l0eToidG9nZ2xlIn19LGZ1bmN0aW9uKGUscil7Uy5mbltlXT1mdW5jdGlvbihlLHQsbil7cmV0dXJuIHRoaXMuYW5pbWF0ZShyLGUsdCxuKX19KSxTLnRpbWVycz1bXSxTLmZ4LnRpY2s9ZnVuY3Rpb24oKXt2YXIgZSx0PTAsbj1TLnRpbWVycztmb3IoWmU9RGF0ZS5ub3coKTt0PG4ubGVuZ3RoO3QrKykoZT1uW3RdKSgpfHxuW3RdIT09ZXx8bi5zcGxpY2UodC0tLDEpO24ubGVuZ3RofHxTLmZ4LnN0b3AoKSxaZT12b2lkIDB9LFMuZngudGltZXI9ZnVuY3Rpb24oZSl7Uy50aW1lcnMucHVzaChlKSxTLmZ4LnN0YXJ0KCl9LFMuZnguaW50ZXJ2YWw9MTMsUy5meC5zdGFydD1mdW5jdGlvbigpe2V0fHwoZXQ9ITAsb3QoKSl9LFMuZnguc3RvcD1mdW5jdGlvbigpe2V0PW51bGx9LFMuZnguc3BlZWRzPXtzbG93OjYwMCxmYXN0OjIwMCxfZGVmYXVsdDo0MDB9LFMuZm4uZGVsYXk9ZnVuY3Rpb24ocixlKXtyZXR1cm4gcj1TLmZ4JiZTLmZ4LnNwZWVkc1tyXXx8cixlPWV8fCJmeCIsdGhpcy5xdWV1ZShlLGZ1bmN0aW9uKGUsdCl7dmFyIG49Qy5zZXRUaW1lb3V0KGUscik7dC5zdG9wPWZ1bmN0aW9uKCl7Qy5jbGVhclRpbWVvdXQobil9fSl9LHR0PUUuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxudD1FLmNyZWF0ZUVsZW1lbnQoInNlbGVjdCIpLmFwcGVuZENoaWxkKEUuY3JlYXRlRWxlbWVudCgib3B0aW9uIikpLHR0LnR5cGU9ImNoZWNrYm94Iix5LmNoZWNrT249IiIhPT10dC52YWx1ZSx5Lm9wdFNlbGVjdGVkPW50LnNlbGVjdGVkLCh0dD1FLmNyZWF0ZUVsZW1lbnQoImlucHV0IikpLnZhbHVlPSJ0Iix0dC50eXBlPSJyYWRpbyIseS5yYWRpb1ZhbHVlPSJ0Ij09PXR0LnZhbHVlO3ZhciBjdCxmdD1TLmV4cHIuYXR0ckhhbmRsZTtTLmZuLmV4dGVuZCh7YXR0cjpmdW5jdGlvbihlLHQpe3JldHVybiAkKHRoaXMsUy5hdHRyLGUsdCwxPGFyZ3VtZW50cy5sZW5ndGgpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtTLnJlbW92ZUF0dHIodGhpcyxlKX0pfX0pLFMuZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG89ZS5ub2RlVHlwZTtpZigzIT09byYmOCE9PW8mJjIhPT1vKXJldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgZS5nZXRBdHRyaWJ1dGU/Uy5wcm9wKGUsdCxuKTooMT09PW8mJlMuaXNYTUxEb2MoZSl8fChpPVMuYXR0ckhvb2tzW3QudG9Mb3dlckNhc2UoKV18fChTLmV4cHIubWF0Y2guYm9vbC50ZXN0KHQpP2N0OnZvaWQgMCkpLHZvaWQgMCE9PW4/bnVsbD09PW4/dm9pZCBTLnJlbW92ZUF0dHIoZSx0KTppJiYic2V0ImluIGkmJnZvaWQgMCE9PShyPWkuc2V0KGUsbix0KSk/cjooZS5zZXRBdHRyaWJ1dGUodCxuKyIiKSxuKTppJiYiZ2V0ImluIGkmJm51bGwhPT0ocj1pLmdldChlLHQpKT9yOm51bGw9PShyPVMuZmluZC5hdHRyKGUsdCkpP3ZvaWQgMDpyKX0sYXR0ckhvb2tzOnt0eXBlOntzZXQ6ZnVuY3Rpb24oZSx0KXtpZigheS5yYWRpb1ZhbHVlJiYicmFkaW8iPT09dCYmQShlLCJpbnB1dCIpKXt2YXIgbj1lLnZhbHVlO3JldHVybiBlLnNldEF0dHJpYnV0ZSgidHlwZSIsdCksbiYmKGUudmFsdWU9biksdH19fX0scmVtb3ZlQXR0cjpmdW5jdGlvbihlLHQpe3ZhciBuLHI9MCxpPXQmJnQubWF0Y2goUCk7aWYoaSYmMT09PWUubm9kZVR5cGUpd2hpbGUobj1pW3IrK10pZS5yZW1vdmVBdHRyaWJ1dGUobil9fSksY3Q9e3NldDpmdW5jdGlvbihlLHQsbil7cmV0dXJuITE9PT10P1MucmVtb3ZlQXR0cihlLG4pOmUuc2V0QXR0cmlidXRlKG4sbiksbn19LFMuZWFjaChTLmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1x3Ky9nKSxmdW5jdGlvbihlLHQpe3ZhciBhPWZ0W3RdfHxTLmZpbmQuYXR0cjtmdFt0XT1mdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvPXQudG9Mb3dlckNhc2UoKTtyZXR1cm4gbnx8KGk9ZnRbb10sZnRbb109cixyPW51bGwhPWEoZSx0LG4pP286bnVsbCxmdFtvXT1pKSxyfX0pO3ZhciBwdD0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLGR0PS9eKD86YXxhcmVhKSQvaTtmdW5jdGlvbiBodChlKXtyZXR1cm4oZS5tYXRjaChQKXx8W10pLmpvaW4oIiAiKX1mdW5jdGlvbiBndChlKXtyZXR1cm4gZS5nZXRBdHRyaWJ1dGUmJmUuZ2V0QXR0cmlidXRlKCJjbGFzcyIpfHwiIn1mdW5jdGlvbiB2dChlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9lOiJzdHJpbmciPT10eXBlb2YgZSYmZS5tYXRjaChQKXx8W119Uy5mbi5leHRlbmQoe3Byb3A6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gJCh0aGlzLFMucHJvcCxlLHQsMTxhcmd1bWVudHMubGVuZ3RoKX0scmVtb3ZlUHJvcDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXNbUy5wcm9wRml4W2VdfHxlXX0pfX0pLFMuZXh0ZW5kKHtwcm9wOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG89ZS5ub2RlVHlwZTtpZigzIT09byYmOCE9PW8mJjIhPT1vKXJldHVybiAxPT09byYmUy5pc1hNTERvYyhlKXx8KHQ9Uy5wcm9wRml4W3RdfHx0LGk9Uy5wcm9wSG9va3NbdF0pLHZvaWQgMCE9PW4/aSYmInNldCJpbiBpJiZ2b2lkIDAhPT0ocj1pLnNldChlLG4sdCkpP3I6ZVt0XT1uOmkmJiJnZXQiaW4gaSYmbnVsbCE9PShyPWkuZ2V0KGUsdCkpP3I6ZVt0XX0scHJvcEhvb2tzOnt0YWJJbmRleDp7Z2V0OmZ1bmN0aW9uKGUpe3ZhciB0PVMuZmluZC5hdHRyKGUsInRhYmluZGV4Iik7cmV0dXJuIHQ/cGFyc2VJbnQodCwxMCk6cHQudGVzdChlLm5vZGVOYW1lKXx8ZHQudGVzdChlLm5vZGVOYW1lKSYmZS5ocmVmPzA6LTF9fX0scHJvcEZpeDp7ImZvciI6Imh0bWxGb3IiLCJjbGFzcyI6ImNsYXNzTmFtZSJ9fSkseS5vcHRTZWxlY3RlZHx8KFMucHJvcEhvb2tzLnNlbGVjdGVkPXtnZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5wYXJlbnROb2RlO3JldHVybiB0JiZ0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LG51bGx9LHNldDpmdW5jdGlvbihlKXt2YXIgdD1lLnBhcmVudE5vZGU7dCYmKHQuc2VsZWN0ZWRJbmRleCx0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4KX19KSxTLmVhY2goWyJ0YWJJbmRleCIsInJlYWRPbmx5IiwibWF4TGVuZ3RoIiwiY2VsbFNwYWNpbmciLCJjZWxsUGFkZGluZyIsInJvd1NwYW4iLCJjb2xTcGFuIiwidXNlTWFwIiwiZnJhbWVCb3JkZXIiLCJjb250ZW50RWRpdGFibGUiXSxmdW5jdGlvbigpe1MucHJvcEZpeFt0aGlzLnRvTG93ZXJDYXNlKCldPXRoaXN9KSxTLmZuLmV4dGVuZCh7YWRkQ2xhc3M6ZnVuY3Rpb24odCl7dmFyIGUsbixyLGksbyxhLHMsdT0wO2lmKG0odCkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihlKXtTKHRoaXMpLmFkZENsYXNzKHQuY2FsbCh0aGlzLGUsZ3QodGhpcykpKX0pO2lmKChlPXZ0KHQpKS5sZW5ndGgpd2hpbGUobj10aGlzW3UrK10paWYoaT1ndChuKSxyPTE9PT1uLm5vZGVUeXBlJiYiICIraHQoaSkrIiAiKXthPTA7d2hpbGUobz1lW2ErK10pci5pbmRleE9mKCIgIitvKyIgIik8MCYmKHIrPW8rIiAiKTtpIT09KHM9aHQocikpJiZuLnNldEF0dHJpYnV0ZSgiY2xhc3MiLHMpfXJldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvLGEscyx1PTA7aWYobSh0KSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGUpe1ModGhpcykucmVtb3ZlQ2xhc3ModC5jYWxsKHRoaXMsZSxndCh0aGlzKSkpfSk7aWYoIWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMuYXR0cigiY2xhc3MiLCIiKTtpZigoZT12dCh0KSkubGVuZ3RoKXdoaWxlKG49dGhpc1t1KytdKWlmKGk9Z3Qobikscj0xPT09bi5ub2RlVHlwZSYmIiAiK2h0KGkpKyIgIil7YT0wO3doaWxlKG89ZVthKytdKXdoaWxlKC0xPHIuaW5kZXhPZigiICIrbysiICIpKXI9ci5yZXBsYWNlKCIgIitvKyIgIiwiICIpO2khPT0ocz1odChyKSkmJm4uc2V0QXR0cmlidXRlKCJjbGFzcyIscyl9cmV0dXJuIHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGksdCl7dmFyIG89dHlwZW9mIGksYT0ic3RyaW5nIj09PW98fEFycmF5LmlzQXJyYXkoaSk7cmV0dXJuImJvb2xlYW4iPT10eXBlb2YgdCYmYT90P3RoaXMuYWRkQ2xhc3MoaSk6dGhpcy5yZW1vdmVDbGFzcyhpKTptKGkpP3RoaXMuZWFjaChmdW5jdGlvbihlKXtTKHRoaXMpLnRvZ2dsZUNsYXNzKGkuY2FsbCh0aGlzLGUsZ3QodGhpcyksdCksdCl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZSx0LG4scjtpZihhKXt0PTAsbj1TKHRoaXMpLHI9dnQoaSk7d2hpbGUoZT1yW3QrK10pbi5oYXNDbGFzcyhlKT9uLnJlbW92ZUNsYXNzKGUpOm4uYWRkQ2xhc3MoZSl9ZWxzZSB2b2lkIDAhPT1pJiYiYm9vbGVhbiIhPT1vfHwoKGU9Z3QodGhpcykpJiZZLnNldCh0aGlzLCJfX2NsYXNzTmFtZV9fIixlKSx0aGlzLnNldEF0dHJpYnV0ZSYmdGhpcy5zZXRBdHRyaWJ1dGUoImNsYXNzIixlfHwhMT09PWk/IiI6WS5nZXQodGhpcywiX19jbGFzc05hbWVfXyIpfHwiIikpfSl9LGhhc0NsYXNzOmZ1bmN0aW9uKGUpe3ZhciB0LG4scj0wO3Q9IiAiK2UrIiAiO3doaWxlKG49dGhpc1tyKytdKWlmKDE9PT1uLm5vZGVUeXBlJiYtMTwoIiAiK2h0KGd0KG4pKSsiICIpLmluZGV4T2YodCkpcmV0dXJuITA7cmV0dXJuITF9fSk7dmFyIHl0PS9cci9nO1MuZm4uZXh0ZW5kKHt2YWw6ZnVuY3Rpb24obil7dmFyIHIsZSxpLHQ9dGhpc1swXTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8oaT1tKG4pLHRoaXMuZWFjaChmdW5jdGlvbihlKXt2YXIgdDsxPT09dGhpcy5ub2RlVHlwZSYmKG51bGw9PSh0PWk/bi5jYWxsKHRoaXMsZSxTKHRoaXMpLnZhbCgpKTpuKT90PSIiOiJudW1iZXIiPT10eXBlb2YgdD90Kz0iIjpBcnJheS5pc0FycmF5KHQpJiYodD1TLm1hcCh0LGZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lPyIiOmUrIiJ9KSksKHI9Uy52YWxIb29rc1t0aGlzLnR5cGVdfHxTLnZhbEhvb2tzW3RoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0pJiYic2V0ImluIHImJnZvaWQgMCE9PXIuc2V0KHRoaXMsdCwidmFsdWUiKXx8KHRoaXMudmFsdWU9dCkpfSkpOnQ/KHI9Uy52YWxIb29rc1t0LnR5cGVdfHxTLnZhbEhvb2tzW3Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0pJiYiZ2V0ImluIHImJnZvaWQgMCE9PShlPXIuZ2V0KHQsInZhbHVlIikpP2U6InN0cmluZyI9PXR5cGVvZihlPXQudmFsdWUpP2UucmVwbGFjZSh5dCwiIik6bnVsbD09ZT8iIjplOnZvaWQgMH19KSxTLmV4dGVuZCh7dmFsSG9va3M6e29wdGlvbjp7Z2V0OmZ1bmN0aW9uKGUpe3ZhciB0PVMuZmluZC5hdHRyKGUsInZhbHVlIik7cmV0dXJuIG51bGwhPXQ/dDpodChTLnRleHQoZSkpfX0sc2VsZWN0OntnZXQ6ZnVuY3Rpb24oZSl7dmFyIHQsbixyLGk9ZS5vcHRpb25zLG89ZS5zZWxlY3RlZEluZGV4LGE9InNlbGVjdC1vbmUiPT09ZS50eXBlLHM9YT9udWxsOltdLHU9YT9vKzE6aS5sZW5ndGg7Zm9yKHI9bzwwP3U6YT9vOjA7cjx1O3IrKylpZigoKG49aVtyXSkuc2VsZWN0ZWR8fHI9PT1vKSYmIW4uZGlzYWJsZWQmJighbi5wYXJlbnROb2RlLmRpc2FibGVkfHwhQShuLnBhcmVudE5vZGUsIm9wdGdyb3VwIikpKXtpZih0PVMobikudmFsKCksYSlyZXR1cm4gdDtzLnB1c2godCl9cmV0dXJuIHN9LHNldDpmdW5jdGlvbihlLHQpe3ZhciBuLHIsaT1lLm9wdGlvbnMsbz1TLm1ha2VBcnJheSh0KSxhPWkubGVuZ3RoO3doaWxlKGEtLSkoKHI9aVthXSkuc2VsZWN0ZWQ9LTE8Uy5pbkFycmF5KFMudmFsSG9va3Mub3B0aW9uLmdldChyKSxvKSkmJihuPSEwKTtyZXR1cm4gbnx8KGUuc2VsZWN0ZWRJbmRleD0tMSksb319fX0pLFMuZWFjaChbInJhZGlvIiwiY2hlY2tib3giXSxmdW5jdGlvbigpe1MudmFsSG9va3NbdGhpc109e3NldDpmdW5jdGlvbihlLHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIGUuY2hlY2tlZD0tMTxTLmluQXJyYXkoUyhlKS52YWwoKSx0KX19LHkuY2hlY2tPbnx8KFMudmFsSG9va3NbdGhpc10uZ2V0PWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT09ZS5nZXRBdHRyaWJ1dGUoInZhbHVlIik/Im9uIjplLnZhbHVlfSl9KSx5LmZvY3VzaW49Im9uZm9jdXNpbiJpbiBDO3ZhciBtdD0vXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8seHQ9ZnVuY3Rpb24oZSl7ZS5zdG9wUHJvcGFnYXRpb24oKX07Uy5leHRlbmQoUy5ldmVudCx7dHJpZ2dlcjpmdW5jdGlvbihlLHQsbixyKXt2YXIgaSxvLGEscyx1LGwsYyxmLHA9W258fEVdLGQ9di5jYWxsKGUsInR5cGUiKT9lLnR5cGU6ZSxoPXYuY2FsbChlLCJuYW1lc3BhY2UiKT9lLm5hbWVzcGFjZS5zcGxpdCgiLiIpOltdO2lmKG89Zj1hPW49bnx8RSwzIT09bi5ub2RlVHlwZSYmOCE9PW4ubm9kZVR5cGUmJiFtdC50ZXN0KGQrUy5ldmVudC50cmlnZ2VyZWQpJiYoLTE8ZC5pbmRleE9mKCIuIikmJihkPShoPWQuc3BsaXQoIi4iKSkuc2hpZnQoKSxoLnNvcnQoKSksdT1kLmluZGV4T2YoIjoiKTwwJiYib24iK2QsKGU9ZVtTLmV4cGFuZG9dP2U6bmV3IFMuRXZlbnQoZCwib2JqZWN0Ij09dHlwZW9mIGUmJmUpKS5pc1RyaWdnZXI9cj8yOjMsZS5uYW1lc3BhY2U9aC5qb2luKCIuIiksZS5ybmFtZXNwYWNlPWUubmFtZXNwYWNlP25ldyBSZWdFeHAoIihefFxcLikiK2guam9pbigiXFwuKD86LipcXC58KSIpKyIoXFwufCQpIik6bnVsbCxlLnJlc3VsdD12b2lkIDAsZS50YXJnZXR8fChlLnRhcmdldD1uKSx0PW51bGw9PXQ/W2VdOlMubWFrZUFycmF5KHQsW2VdKSxjPVMuZXZlbnQuc3BlY2lhbFtkXXx8e30scnx8IWMudHJpZ2dlcnx8ITEhPT1jLnRyaWdnZXIuYXBwbHkobix0KSkpe2lmKCFyJiYhYy5ub0J1YmJsZSYmIXgobikpe2ZvcihzPWMuZGVsZWdhdGVUeXBlfHxkLG10LnRlc3QocytkKXx8KG89by5wYXJlbnROb2RlKTtvO289by5wYXJlbnROb2RlKXAucHVzaChvKSxhPW87YT09PShuLm93bmVyRG9jdW1lbnR8fEUpJiZwLnB1c2goYS5kZWZhdWx0Vmlld3x8YS5wYXJlbnRXaW5kb3d8fEMpfWk9MDt3aGlsZSgobz1wW2krK10pJiYhZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWY9byxlLnR5cGU9MTxpP3M6Yy5iaW5kVHlwZXx8ZCwobD0oWS5nZXQobywiZXZlbnRzIil8fE9iamVjdC5jcmVhdGUobnVsbCkpW2UudHlwZV0mJlkuZ2V0KG8sImhhbmRsZSIpKSYmbC5hcHBseShvLHQpLChsPXUmJm9bdV0pJiZsLmFwcGx5JiZWKG8pJiYoZS5yZXN1bHQ9bC5hcHBseShvLHQpLCExPT09ZS5yZXN1bHQmJmUucHJldmVudERlZmF1bHQoKSk7cmV0dXJuIGUudHlwZT1kLHJ8fGUuaXNEZWZhdWx0UHJldmVudGVkKCl8fGMuX2RlZmF1bHQmJiExIT09Yy5fZGVmYXVsdC5hcHBseShwLnBvcCgpLHQpfHwhVihuKXx8dSYmbShuW2RdKSYmIXgobikmJigoYT1uW3VdKSYmKG5bdV09bnVsbCksUy5ldmVudC50cmlnZ2VyZWQ9ZCxlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkmJmYuYWRkRXZlbnRMaXN0ZW5lcihkLHh0KSxuW2RdKCksZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpJiZmLnJlbW92ZUV2ZW50TGlzdGVuZXIoZCx4dCksUy5ldmVudC50cmlnZ2VyZWQ9dm9pZCAwLGEmJihuW3VdPWEpKSxlLnJlc3VsdH19LHNpbXVsYXRlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1TLmV4dGVuZChuZXcgUy5FdmVudCxuLHt0eXBlOmUsaXNTaW11bGF0ZWQ6ITB9KTtTLmV2ZW50LnRyaWdnZXIocixudWxsLHQpfX0pLFMuZm4uZXh0ZW5kKHt0cmlnZ2VyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe1MuZXZlbnQudHJpZ2dlcihlLHQsdGhpcyl9KX0sdHJpZ2dlckhhbmRsZXI6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzWzBdO2lmKG4pcmV0dXJuIFMuZXZlbnQudHJpZ2dlcihlLHQsbiwhMCl9fSkseS5mb2N1c2lufHxTLmVhY2goe2ZvY3VzOiJmb2N1c2luIixibHVyOiJmb2N1c291dCJ9LGZ1bmN0aW9uKG4scil7dmFyIGk9ZnVuY3Rpb24oZSl7Uy5ldmVudC5zaW11bGF0ZShyLGUudGFyZ2V0LFMuZXZlbnQuZml4KGUpKX07Uy5ldmVudC5zcGVjaWFsW3JdPXtzZXR1cDpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcy5kb2N1bWVudHx8dGhpcyx0PVkuYWNjZXNzKGUscik7dHx8ZS5hZGRFdmVudExpc3RlbmVyKG4saSwhMCksWS5hY2Nlc3MoZSxyLCh0fHwwKSsxKX0sdGVhcmRvd246ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm93bmVyRG9jdW1lbnR8fHRoaXMuZG9jdW1lbnR8fHRoaXMsdD1ZLmFjY2VzcyhlLHIpLTE7dD9ZLmFjY2VzcyhlLHIsdCk6KGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLGksITApLFkucmVtb3ZlKGUscikpfX19KTt2YXIgYnQ9Qy5sb2NhdGlvbix3dD17Z3VpZDpEYXRlLm5vdygpfSxUdD0vXD8vO1MucGFyc2VYTUw9ZnVuY3Rpb24oZSl7dmFyIHQsbjtpZighZXx8InN0cmluZyIhPXR5cGVvZiBlKXJldHVybiBudWxsO3RyeXt0PShuZXcgQy5ET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhlLCJ0ZXh0L3htbCIpfWNhdGNoKGUpe31yZXR1cm4gbj10JiZ0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJwYXJzZXJlcnJvciIpWzBdLHQmJiFufHxTLmVycm9yKCJJbnZhbGlkIFhNTDogIisobj9TLm1hcChuLmNoaWxkTm9kZXMsZnVuY3Rpb24oZSl7cmV0dXJuIGUudGV4dENvbnRlbnR9KS5qb2luKCJcbiIpOmUpKSx0fTt2YXIgQ3Q9L1xbXF0kLyxFdD0vXHI/XG4vZyxTdD0vXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksa3Q9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO2Z1bmN0aW9uIEF0KG4sZSxyLGkpe3ZhciB0O2lmKEFycmF5LmlzQXJyYXkoZSkpUy5lYWNoKGUsZnVuY3Rpb24oZSx0KXtyfHxDdC50ZXN0KG4pP2kobix0KTpBdChuKyJbIisoIm9iamVjdCI9PXR5cGVvZiB0JiZudWxsIT10P2U6IiIpKyJdIix0LHIsaSl9KTtlbHNlIGlmKHJ8fCJvYmplY3QiIT09dyhlKSlpKG4sZSk7ZWxzZSBmb3IodCBpbiBlKUF0KG4rIlsiK3QrIl0iLGVbdF0scixpKX1TLnBhcmFtPWZ1bmN0aW9uKGUsdCl7dmFyIG4scj1bXSxpPWZ1bmN0aW9uKGUsdCl7dmFyIG49bSh0KT90KCk6dDtyW3IubGVuZ3RoXT1lbmNvZGVVUklDb21wb25lbnQoZSkrIj0iK2VuY29kZVVSSUNvbXBvbmVudChudWxsPT1uPyIiOm4pfTtpZihudWxsPT1lKXJldHVybiIiO2lmKEFycmF5LmlzQXJyYXkoZSl8fGUuanF1ZXJ5JiYhUy5pc1BsYWluT2JqZWN0KGUpKVMuZWFjaChlLGZ1bmN0aW9uKCl7aSh0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KTtlbHNlIGZvcihuIGluIGUpQXQobixlW25dLHQsaSk7cmV0dXJuIHIuam9pbigiJiIpfSxTLmZuLmV4dGVuZCh7c2VyaWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIFMucGFyYW0odGhpcy5zZXJpYWxpemVBcnJheSgpKX0sc2VyaWFsaXplQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgZT1TLnByb3AodGhpcywiZWxlbWVudHMiKTtyZXR1cm4gZT9TLm1ha2VBcnJheShlKTp0aGlzfSkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy50eXBlO3JldHVybiB0aGlzLm5hbWUmJiFTKHRoaXMpLmlzKCI6ZGlzYWJsZWQiKSYma3QudGVzdCh0aGlzLm5vZGVOYW1lKSYmIVN0LnRlc3QoZSkmJih0aGlzLmNoZWNrZWR8fCFwZS50ZXN0KGUpKX0pLm1hcChmdW5jdGlvbihlLHQpe3ZhciBuPVModGhpcykudmFsKCk7cmV0dXJuIG51bGw9PW4/bnVsbDpBcnJheS5pc0FycmF5KG4pP1MubWFwKG4sZnVuY3Rpb24oZSl7cmV0dXJue25hbWU6dC5uYW1lLHZhbHVlOmUucmVwbGFjZShFdCwiXHJcbiIpfX0pOntuYW1lOnQubmFtZSx2YWx1ZTpuLnJlcGxhY2UoRXQsIlxyXG4iKX19KS5nZXQoKX19KTt2YXIgTnQ9LyUyMC9nLGp0PS8jLiokLyxEdD0vKFs/Jl0pXz1bXiZdKi8scXQ9L14oLio/KTpbIFx0XSooW15cclxuXSopJC9nbSxMdD0vXig/OkdFVHxIRUFEKSQvLEh0PS9eXC9cLy8sT3Q9e30sUHQ9e30sUnQ9IiovIi5jb25jYXQoIioiKSxNdD1FLmNyZWF0ZUVsZW1lbnQoImEiKTtmdW5jdGlvbiBJdChvKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXsic3RyaW5nIiE9dHlwZW9mIGUmJih0PWUsZT0iKiIpO3ZhciBuLHI9MCxpPWUudG9Mb3dlckNhc2UoKS5tYXRjaChQKXx8W107aWYobSh0KSl3aGlsZShuPWlbcisrXSkiKyI9PT1uWzBdPyhuPW4uc2xpY2UoMSl8fCIqIiwob1tuXT1vW25dfHxbXSkudW5zaGlmdCh0KSk6KG9bbl09b1tuXXx8W10pLnB1c2godCl9fWZ1bmN0aW9uIFd0KHQsaSxvLGEpe3ZhciBzPXt9LHU9dD09PVB0O2Z1bmN0aW9uIGwoZSl7dmFyIHI7cmV0dXJuIHNbZV09ITAsUy5lYWNoKHRbZV18fFtdLGZ1bmN0aW9uKGUsdCl7dmFyIG49dChpLG8sYSk7cmV0dXJuInN0cmluZyIhPXR5cGVvZiBufHx1fHxzW25dP3U/IShyPW4pOnZvaWQgMDooaS5kYXRhVHlwZXMudW5zaGlmdChuKSxsKG4pLCExKX0pLHJ9cmV0dXJuIGwoaS5kYXRhVHlwZXNbMF0pfHwhc1siKiJdJiZsKCIqIil9ZnVuY3Rpb24gRnQoZSx0KXt2YXIgbixyLGk9Uy5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnN8fHt9O2ZvcihuIGluIHQpdm9pZCAwIT09dFtuXSYmKChpW25dP2U6cnx8KHI9e30pKVtuXT10W25dKTtyZXR1cm4gciYmUy5leHRlbmQoITAsZSxyKSxlfU10LmhyZWY9YnQuaHJlZixTLmV4dGVuZCh7YWN0aXZlOjAsbGFzdE1vZGlmaWVkOnt9LGV0YWc6e30sYWpheFNldHRpbmdzOnt1cmw6YnQuaHJlZix0eXBlOiJHRVQiLGlzTG9jYWw6L14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8udGVzdChidC5wcm90b2NvbCksZ2xvYmFsOiEwLHByb2Nlc3NEYXRhOiEwLGFzeW5jOiEwLGNvbnRlbnRUeXBlOiJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgiLGFjY2VwdHM6eyIqIjpSdCx0ZXh0OiJ0ZXh0L3BsYWluIixodG1sOiJ0ZXh0L2h0bWwiLHhtbDoiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbCIsanNvbjoiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0In0sY29udGVudHM6e3htbDovXGJ4bWxcYi8saHRtbDovXGJodG1sLyxqc29uOi9cYmpzb25cYi99LHJlc3BvbnNlRmllbGRzOnt4bWw6InJlc3BvbnNlWE1MIix0ZXh0OiJyZXNwb25zZVRleHQiLGpzb246InJlc3BvbnNlSlNPTiJ9LGNvbnZlcnRlcnM6eyIqIHRleHQiOlN0cmluZywidGV4dCBodG1sIjohMCwidGV4dCBqc29uIjpKU09OLnBhcnNlLCJ0ZXh0IHhtbCI6Uy5wYXJzZVhNTH0sZmxhdE9wdGlvbnM6e3VybDohMCxjb250ZXh0OiEwfX0sYWpheFNldHVwOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ/RnQoRnQoZSxTLmFqYXhTZXR0aW5ncyksdCk6RnQoUy5hamF4U2V0dGluZ3MsZSl9LGFqYXhQcmVmaWx0ZXI6SXQoT3QpLGFqYXhUcmFuc3BvcnQ6SXQoUHQpLGFqYXg6ZnVuY3Rpb24oZSx0KXsib2JqZWN0Ij09dHlwZW9mIGUmJih0PWUsZT12b2lkIDApLHQ9dHx8e307dmFyIGMsZixwLG4sZCxyLGgsZyxpLG8sdj1TLmFqYXhTZXR1cCh7fSx0KSx5PXYuY29udGV4dHx8dixtPXYuY29udGV4dCYmKHkubm9kZVR5cGV8fHkuanF1ZXJ5KT9TKHkpOlMuZXZlbnQseD1TLkRlZmVycmVkKCksYj1TLkNhbGxiYWNrcygib25jZSBtZW1vcnkiKSx3PXYuc3RhdHVzQ29kZXx8e30sYT17fSxzPXt9LHU9ImNhbmNlbGVkIixUPXtyZWFkeVN0YXRlOjAsZ2V0UmVzcG9uc2VIZWFkZXI6ZnVuY3Rpb24oZSl7dmFyIHQ7aWYoaCl7aWYoIW4pe249e307d2hpbGUodD1xdC5leGVjKHApKW5bdFsxXS50b0xvd2VyQ2FzZSgpKyIgIl09KG5bdFsxXS50b0xvd2VyQ2FzZSgpKyIgIl18fFtdKS5jb25jYXQodFsyXSl9dD1uW2UudG9Mb3dlckNhc2UoKSsiICJdfXJldHVybiBudWxsPT10P251bGw6dC5qb2luKCIsICIpfSxnZXRBbGxSZXNwb25zZUhlYWRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gaD9wOm51bGx9LHNldFJlcXVlc3RIZWFkZXI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbnVsbD09aCYmKGU9c1tlLnRvTG93ZXJDYXNlKCldPXNbZS50b0xvd2VyQ2FzZSgpXXx8ZSxhW2VdPXQpLHRoaXN9LG92ZXJyaWRlTWltZVR5cGU6ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWgmJih2Lm1pbWVUeXBlPWUpLHRoaXN9LHN0YXR1c0NvZGU6ZnVuY3Rpb24oZSl7dmFyIHQ7aWYoZSlpZihoKVQuYWx3YXlzKGVbVC5zdGF0dXNdKTtlbHNlIGZvcih0IGluIGUpd1t0XT1bd1t0XSxlW3RdXTtyZXR1cm4gdGhpc30sYWJvcnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZXx8dTtyZXR1cm4gYyYmYy5hYm9ydCh0KSxsKDAsdCksdGhpc319O2lmKHgucHJvbWlzZShUKSx2LnVybD0oKGV8fHYudXJsfHxidC5ocmVmKSsiIikucmVwbGFjZShIdCxidC5wcm90b2NvbCsiLy8iKSx2LnR5cGU9dC5tZXRob2R8fHQudHlwZXx8di5tZXRob2R8fHYudHlwZSx2LmRhdGFUeXBlcz0odi5kYXRhVHlwZXx8IioiKS50b0xvd2VyQ2FzZSgpLm1hdGNoKFApfHxbIiJdLG51bGw9PXYuY3Jvc3NEb21haW4pe3I9RS5jcmVhdGVFbGVtZW50KCJhIik7dHJ5e3IuaHJlZj12LnVybCxyLmhyZWY9ci5ocmVmLHYuY3Jvc3NEb21haW49TXQucHJvdG9jb2wrIi8vIitNdC5ob3N0IT1yLnByb3RvY29sKyIvLyIrci5ob3N0fWNhdGNoKGUpe3YuY3Jvc3NEb21haW49ITB9fWlmKHYuZGF0YSYmdi5wcm9jZXNzRGF0YSYmInN0cmluZyIhPXR5cGVvZiB2LmRhdGEmJih2LmRhdGE9Uy5wYXJhbSh2LmRhdGEsdi50cmFkaXRpb25hbCkpLFd0KE90LHYsdCxUKSxoKXJldHVybiBUO2ZvcihpIGluKGc9Uy5ldmVudCYmdi5nbG9iYWwpJiYwPT1TLmFjdGl2ZSsrJiZTLmV2ZW50LnRyaWdnZXIoImFqYXhTdGFydCIpLHYudHlwZT12LnR5cGUudG9VcHBlckNhc2UoKSx2Lmhhc0NvbnRlbnQ9IUx0LnRlc3Qodi50eXBlKSxmPXYudXJsLnJlcGxhY2UoanQsIiIpLHYuaGFzQ29udGVudD92LmRhdGEmJnYucHJvY2Vzc0RhdGEmJjA9PT0odi5jb250ZW50VHlwZXx8IiIpLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpJiYodi5kYXRhPXYuZGF0YS5yZXBsYWNlKE50LCIrIikpOihvPXYudXJsLnNsaWNlKGYubGVuZ3RoKSx2LmRhdGEmJih2LnByb2Nlc3NEYXRhfHwic3RyaW5nIj09dHlwZW9mIHYuZGF0YSkmJihmKz0oVHQudGVzdChmKT8iJiI6Ij8iKSt2LmRhdGEsZGVsZXRlIHYuZGF0YSksITE9PT12LmNhY2hlJiYoZj1mLnJlcGxhY2UoRHQsIiQxIiksbz0oVHQudGVzdChmKT8iJiI6Ij8iKSsiXz0iK3d0Lmd1aWQrKytvKSx2LnVybD1mK28pLHYuaWZNb2RpZmllZCYmKFMubGFzdE1vZGlmaWVkW2ZdJiZULnNldFJlcXVlc3RIZWFkZXIoIklmLU1vZGlmaWVkLVNpbmNlIixTLmxhc3RNb2RpZmllZFtmXSksUy5ldGFnW2ZdJiZULnNldFJlcXVlc3RIZWFkZXIoIklmLU5vbmUtTWF0Y2giLFMuZXRhZ1tmXSkpLCh2LmRhdGEmJnYuaGFzQ29udGVudCYmITEhPT12LmNvbnRlbnRUeXBlfHx0LmNvbnRlbnRUeXBlKSYmVC5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLHYuY29udGVudFR5cGUpLFQuc2V0UmVxdWVzdEhlYWRlcigiQWNjZXB0Iix2LmRhdGFUeXBlc1swXSYmdi5hY2NlcHRzW3YuZGF0YVR5cGVzWzBdXT92LmFjY2VwdHNbdi5kYXRhVHlwZXNbMF1dKygiKiIhPT12LmRhdGFUeXBlc1swXT8iLCAiK1J0KyI7IHE9MC4wMSI6IiIpOnYuYWNjZXB0c1siKiJdKSx2LmhlYWRlcnMpVC5zZXRSZXF1ZXN0SGVhZGVyKGksdi5oZWFkZXJzW2ldKTtpZih2LmJlZm9yZVNlbmQmJighMT09PXYuYmVmb3JlU2VuZC5jYWxsKHksVCx2KXx8aCkpcmV0dXJuIFQuYWJvcnQoKTtpZih1PSJhYm9ydCIsYi5hZGQodi5jb21wbGV0ZSksVC5kb25lKHYuc3VjY2VzcyksVC5mYWlsKHYuZXJyb3IpLGM9V3QoUHQsdix0LFQpKXtpZihULnJlYWR5U3RhdGU9MSxnJiZtLnRyaWdnZXIoImFqYXhTZW5kIixbVCx2XSksaClyZXR1cm4gVDt2LmFzeW5jJiYwPHYudGltZW91dCYmKGQ9Qy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7VC5hYm9ydCgidGltZW91dCIpfSx2LnRpbWVvdXQpKTt0cnl7aD0hMSxjLnNlbmQoYSxsKX1jYXRjaChlKXtpZihoKXRocm93IGU7bCgtMSxlKX19ZWxzZSBsKC0xLCJObyBUcmFuc3BvcnQiKTtmdW5jdGlvbiBsKGUsdCxuLHIpe3ZhciBpLG8sYSxzLHUsbD10O2h8fChoPSEwLGQmJkMuY2xlYXJUaW1lb3V0KGQpLGM9dm9pZCAwLHA9cnx8IiIsVC5yZWFkeVN0YXRlPTA8ZT80OjAsaT0yMDA8PWUmJmU8MzAwfHwzMDQ9PT1lLG4mJihzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYSxzPWUuY29udGVudHMsdT1lLmRhdGFUeXBlczt3aGlsZSgiKiI9PT11WzBdKXUuc2hpZnQoKSx2b2lkIDA9PT1yJiYocj1lLm1pbWVUeXBlfHx0LmdldFJlc3BvbnNlSGVhZGVyKCJDb250ZW50LVR5cGUiKSk7aWYocilmb3IoaSBpbiBzKWlmKHNbaV0mJnNbaV0udGVzdChyKSl7dS51bnNoaWZ0KGkpO2JyZWFrfWlmKHVbMF1pbiBuKW89dVswXTtlbHNle2ZvcihpIGluIG4pe2lmKCF1WzBdfHxlLmNvbnZlcnRlcnNbaSsiICIrdVswXV0pe289aTticmVha31hfHwoYT1pKX1vPW98fGF9aWYobylyZXR1cm4gbyE9PXVbMF0mJnUudW5zaGlmdChvKSxuW29dfSh2LFQsbikpLCFpJiYtMTxTLmluQXJyYXkoInNjcmlwdCIsdi5kYXRhVHlwZXMpJiZTLmluQXJyYXkoImpzb24iLHYuZGF0YVR5cGVzKTwwJiYodi5jb252ZXJ0ZXJzWyJ0ZXh0IHNjcmlwdCJdPWZ1bmN0aW9uKCl7fSkscz1mdW5jdGlvbihlLHQsbixyKXt2YXIgaSxvLGEscyx1LGw9e30sYz1lLmRhdGFUeXBlcy5zbGljZSgpO2lmKGNbMV0pZm9yKGEgaW4gZS5jb252ZXJ0ZXJzKWxbYS50b0xvd2VyQ2FzZSgpXT1lLmNvbnZlcnRlcnNbYV07bz1jLnNoaWZ0KCk7d2hpbGUobylpZihlLnJlc3BvbnNlRmllbGRzW29dJiYobltlLnJlc3BvbnNlRmllbGRzW29dXT10KSwhdSYmciYmZS5kYXRhRmlsdGVyJiYodD1lLmRhdGFGaWx0ZXIodCxlLmRhdGFUeXBlKSksdT1vLG89Yy5zaGlmdCgpKWlmKCIqIj09PW8pbz11O2Vsc2UgaWYoIioiIT09dSYmdSE9PW8pe2lmKCEoYT1sW3UrIiAiK29dfHxsWyIqICIrb10pKWZvcihpIGluIGwpaWYoKHM9aS5zcGxpdCgiICIpKVsxXT09PW8mJihhPWxbdSsiICIrc1swXV18fGxbIiogIitzWzBdXSkpeyEwPT09YT9hPWxbaV06ITAhPT1sW2ldJiYobz1zWzBdLGMudW5zaGlmdChzWzFdKSk7YnJlYWt9aWYoITAhPT1hKWlmKGEmJmVbInRocm93cyJdKXQ9YSh0KTtlbHNlIHRyeXt0PWEodCl9Y2F0Y2goZSl7cmV0dXJue3N0YXRlOiJwYXJzZXJlcnJvciIsZXJyb3I6YT9lOiJObyBjb252ZXJzaW9uIGZyb20gIit1KyIgdG8gIitvfX19cmV0dXJue3N0YXRlOiJzdWNjZXNzIixkYXRhOnR9fSh2LHMsVCxpKSxpPyh2LmlmTW9kaWZpZWQmJigodT1ULmdldFJlc3BvbnNlSGVhZGVyKCJMYXN0LU1vZGlmaWVkIikpJiYoUy5sYXN0TW9kaWZpZWRbZl09dSksKHU9VC5nZXRSZXNwb25zZUhlYWRlcigiZXRhZyIpKSYmKFMuZXRhZ1tmXT11KSksMjA0PT09ZXx8IkhFQUQiPT09di50eXBlP2w9Im5vY29udGVudCI6MzA0PT09ZT9sPSJub3Rtb2RpZmllZCI6KGw9cy5zdGF0ZSxvPXMuZGF0YSxpPSEoYT1zLmVycm9yKSkpOihhPWwsIWUmJmx8fChsPSJlcnJvciIsZTwwJiYoZT0wKSkpLFQuc3RhdHVzPWUsVC5zdGF0dXNUZXh0PSh0fHxsKSsiIixpP3gucmVzb2x2ZVdpdGgoeSxbbyxsLFRdKTp4LnJlamVjdFdpdGgoeSxbVCxsLGFdKSxULnN0YXR1c0NvZGUodyksdz12b2lkIDAsZyYmbS50cmlnZ2VyKGk/ImFqYXhTdWNjZXNzIjoiYWpheEVycm9yIixbVCx2LGk/bzphXSksYi5maXJlV2l0aCh5LFtULGxdKSxnJiYobS50cmlnZ2VyKCJhamF4Q29tcGxldGUiLFtULHZdKSwtLVMuYWN0aXZlfHxTLmV2ZW50LnRyaWdnZXIoImFqYXhTdG9wIikpKX1yZXR1cm4gVH0sZ2V0SlNPTjpmdW5jdGlvbihlLHQsbil7cmV0dXJuIFMuZ2V0KGUsdCxuLCJqc29uIil9LGdldFNjcmlwdDpmdW5jdGlvbihlLHQpe3JldHVybiBTLmdldChlLHZvaWQgMCx0LCJzY3JpcHQiKX19KSxTLmVhY2goWyJnZXQiLCJwb3N0Il0sZnVuY3Rpb24oZSxpKXtTW2ldPWZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBtKHQpJiYocj1yfHxuLG49dCx0PXZvaWQgMCksUy5hamF4KFMuZXh0ZW5kKHt1cmw6ZSx0eXBlOmksZGF0YVR5cGU6cixkYXRhOnQsc3VjY2VzczpufSxTLmlzUGxhaW5PYmplY3QoZSkmJmUpKX19KSxTLmFqYXhQcmVmaWx0ZXIoZnVuY3Rpb24oZSl7dmFyIHQ7Zm9yKHQgaW4gZS5oZWFkZXJzKSJjb250ZW50LXR5cGUiPT09dC50b0xvd2VyQ2FzZSgpJiYoZS5jb250ZW50VHlwZT1lLmhlYWRlcnNbdF18fCIiKX0pLFMuX2V2YWxVcmw9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBTLmFqYXgoe3VybDplLHR5cGU6IkdFVCIsZGF0YVR5cGU6InNjcmlwdCIsY2FjaGU6ITAsYXN5bmM6ITEsZ2xvYmFsOiExLGNvbnZlcnRlcnM6eyJ0ZXh0IHNjcmlwdCI6ZnVuY3Rpb24oKXt9fSxkYXRhRmlsdGVyOmZ1bmN0aW9uKGUpe1MuZ2xvYmFsRXZhbChlLHQsbil9fSl9LFMuZm4uZXh0ZW5kKHt3cmFwQWxsOmZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiB0aGlzWzBdJiYobShlKSYmKGU9ZS5jYWxsKHRoaXNbMF0pKSx0PVMoZSx0aGlzWzBdLm93bmVyRG9jdW1lbnQpLmVxKDApLmNsb25lKCEwKSx0aGlzWzBdLnBhcmVudE5vZGUmJnQuaW5zZXJ0QmVmb3JlKHRoaXNbMF0pLHQubWFwKGZ1bmN0aW9uKCl7dmFyIGU9dGhpczt3aGlsZShlLmZpcnN0RWxlbWVudENoaWxkKWU9ZS5maXJzdEVsZW1lbnRDaGlsZDtyZXR1cm4gZX0pLmFwcGVuZCh0aGlzKSksdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKG4pe3JldHVybiBtKG4pP3RoaXMuZWFjaChmdW5jdGlvbihlKXtTKHRoaXMpLndyYXBJbm5lcihuLmNhbGwodGhpcyxlKSl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1TKHRoaXMpLHQ9ZS5jb250ZW50cygpO3QubGVuZ3RoP3Qud3JhcEFsbChuKTplLmFwcGVuZChuKX0pfSx3cmFwOmZ1bmN0aW9uKHQpe3ZhciBuPW0odCk7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihlKXtTKHRoaXMpLndyYXBBbGwobj90LmNhbGwodGhpcyxlKTp0KX0pfSx1bndyYXA6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMucGFyZW50KGUpLm5vdCgiYm9keSIpLmVhY2goZnVuY3Rpb24oKXtTKHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KSx0aGlzfX0pLFMuZXhwci5wc2V1ZG9zLmhpZGRlbj1mdW5jdGlvbihlKXtyZXR1cm4hUy5leHByLnBzZXVkb3MudmlzaWJsZShlKX0sUy5leHByLnBzZXVkb3MudmlzaWJsZT1mdW5jdGlvbihlKXtyZXR1cm4hIShlLm9mZnNldFdpZHRofHxlLm9mZnNldEhlaWdodHx8ZS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCl9LFMuYWpheFNldHRpbmdzLnhocj1mdW5jdGlvbigpe3RyeXtyZXR1cm4gbmV3IEMuWE1MSHR0cFJlcXVlc3R9Y2F0Y2goZSl7fX07dmFyIEJ0PXswOjIwMCwxMjIzOjIwNH0sJHQ9Uy5hamF4U2V0dGluZ3MueGhyKCk7eS5jb3JzPSEhJHQmJiJ3aXRoQ3JlZGVudGlhbHMiaW4gJHQseS5hamF4PSR0PSEhJHQsUy5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKGkpe3ZhciBvLGE7aWYoeS5jb3JzfHwkdCYmIWkuY3Jvc3NEb21haW4pcmV0dXJue3NlbmQ6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPWkueGhyKCk7aWYoci5vcGVuKGkudHlwZSxpLnVybCxpLmFzeW5jLGkudXNlcm5hbWUsaS5wYXNzd29yZCksaS54aHJGaWVsZHMpZm9yKG4gaW4gaS54aHJGaWVsZHMpcltuXT1pLnhockZpZWxkc1tuXTtmb3IobiBpbiBpLm1pbWVUeXBlJiZyLm92ZXJyaWRlTWltZVR5cGUmJnIub3ZlcnJpZGVNaW1lVHlwZShpLm1pbWVUeXBlKSxpLmNyb3NzRG9tYWlufHxlWyJYLVJlcXVlc3RlZC1XaXRoIl18fChlWyJYLVJlcXVlc3RlZC1XaXRoIl09IlhNTEh0dHBSZXF1ZXN0IiksZSlyLnNldFJlcXVlc3RIZWFkZXIobixlW25dKTtvPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe28mJihvPWE9ci5vbmxvYWQ9ci5vbmVycm9yPXIub25hYm9ydD1yLm9udGltZW91dD1yLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsLCJhYm9ydCI9PT1lP3IuYWJvcnQoKToiZXJyb3IiPT09ZT8ibnVtYmVyIiE9dHlwZW9mIHIuc3RhdHVzP3QoMCwiZXJyb3IiKTp0KHIuc3RhdHVzLHIuc3RhdHVzVGV4dCk6dChCdFtyLnN0YXR1c118fHIuc3RhdHVzLHIuc3RhdHVzVGV4dCwidGV4dCIhPT0oci5yZXNwb25zZVR5cGV8fCJ0ZXh0Iil8fCJzdHJpbmciIT10eXBlb2Ygci5yZXNwb25zZVRleHQ/e2JpbmFyeTpyLnJlc3BvbnNlfTp7dGV4dDpyLnJlc3BvbnNlVGV4dH0sci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkpfX0sci5vbmxvYWQ9bygpLGE9ci5vbmVycm9yPXIub250aW1lb3V0PW8oImVycm9yIiksdm9pZCAwIT09ci5vbmFib3J0P3Iub25hYm9ydD1hOnIub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7ND09PXIucmVhZHlTdGF0ZSYmQy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7byYmYSgpfSl9LG89bygiYWJvcnQiKTt0cnl7ci5zZW5kKGkuaGFzQ29udGVudCYmaS5kYXRhfHxudWxsKX1jYXRjaChlKXtpZihvKXRocm93IGV9fSxhYm9ydDpmdW5jdGlvbigpe28mJm8oKX19fSksUy5hamF4UHJlZmlsdGVyKGZ1bmN0aW9uKGUpe2UuY3Jvc3NEb21haW4mJihlLmNvbnRlbnRzLnNjcmlwdD0hMSl9KSxTLmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OiJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdCJ9LGNvbnRlbnRzOntzY3JpcHQ6L1xiKD86amF2YXxlY21hKXNjcmlwdFxiL30sY29udmVydGVyczp7InRleHQgc2NyaXB0IjpmdW5jdGlvbihlKXtyZXR1cm4gUy5nbG9iYWxFdmFsKGUpLGV9fX0pLFMuYWpheFByZWZpbHRlcigic2NyaXB0IixmdW5jdGlvbihlKXt2b2lkIDA9PT1lLmNhY2hlJiYoZS5jYWNoZT0hMSksZS5jcm9zc0RvbWFpbiYmKGUudHlwZT0iR0VUIil9KSxTLmFqYXhUcmFuc3BvcnQoInNjcmlwdCIsZnVuY3Rpb24obil7dmFyIHIsaTtpZihuLmNyb3NzRG9tYWlufHxuLnNjcmlwdEF0dHJzKXJldHVybntzZW5kOmZ1bmN0aW9uKGUsdCl7cj1TKCI8c2NyaXB0PiIpLmF0dHIobi5zY3JpcHRBdHRyc3x8e30pLnByb3Aoe2NoYXJzZXQ6bi5zY3JpcHRDaGFyc2V0LHNyYzpuLnVybH0pLm9uKCJsb2FkIGVycm9yIixpPWZ1bmN0aW9uKGUpe3IucmVtb3ZlKCksaT1udWxsLGUmJnQoImVycm9yIj09PWUudHlwZT80MDQ6MjAwLGUudHlwZSl9KSxFLmhlYWQuYXBwZW5kQ2hpbGQoclswXSl9LGFib3J0OmZ1bmN0aW9uKCl7aSYmaSgpfX19KTt2YXIgX3QsenQ9W10sVXQ9Lyg9KVw/KD89JnwkKXxcP1w/LztTLmFqYXhTZXR1cCh7anNvbnA6ImNhbGxiYWNrIixqc29ucENhbGxiYWNrOmZ1bmN0aW9uKCl7dmFyIGU9enQucG9wKCl8fFMuZXhwYW5kbysiXyIrd3QuZ3VpZCsrO3JldHVybiB0aGlzW2VdPSEwLGV9fSksUy5hamF4UHJlZmlsdGVyKCJqc29uIGpzb25wIixmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGE9ITEhPT1lLmpzb25wJiYoVXQudGVzdChlLnVybCk/InVybCI6InN0cmluZyI9PXR5cGVvZiBlLmRhdGEmJjA9PT0oZS5jb250ZW50VHlwZXx8IiIpLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpJiZVdC50ZXN0KGUuZGF0YSkmJiJkYXRhIik7aWYoYXx8Impzb25wIj09PWUuZGF0YVR5cGVzWzBdKXJldHVybiByPWUuanNvbnBDYWxsYmFjaz1tKGUuanNvbnBDYWxsYmFjayk/ZS5qc29ucENhbGxiYWNrKCk6ZS5qc29ucENhbGxiYWNrLGE/ZVthXT1lW2FdLnJlcGxhY2UoVXQsIiQxIityKTohMSE9PWUuanNvbnAmJihlLnVybCs9KFR0LnRlc3QoZS51cmwpPyImIjoiPyIpK2UuanNvbnArIj0iK3IpLGUuY29udmVydGVyc1sic2NyaXB0IGpzb24iXT1mdW5jdGlvbigpe3JldHVybiBvfHxTLmVycm9yKHIrIiB3YXMgbm90IGNhbGxlZCIpLG9bMF19LGUuZGF0YVR5cGVzWzBdPSJqc29uIixpPUNbcl0sQ1tyXT1mdW5jdGlvbigpe289YXJndW1lbnRzfSxuLmFsd2F5cyhmdW5jdGlvbigpe3ZvaWQgMD09PWk/UyhDKS5yZW1vdmVQcm9wKHIpOkNbcl09aSxlW3JdJiYoZS5qc29ucENhbGxiYWNrPXQuanNvbnBDYWxsYmFjayx6dC5wdXNoKHIpKSxvJiZtKGkpJiZpKG9bMF0pLG89aT12b2lkIDB9KSwic2NyaXB0In0pLHkuY3JlYXRlSFRNTERvY3VtZW50PSgoX3Q9RS5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIiIpLmJvZHkpLmlubmVySFRNTD0iPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT4iLDI9PT1fdC5jaGlsZE5vZGVzLmxlbmd0aCksUy5wYXJzZUhUTUw9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiJzdHJpbmciIT10eXBlb2YgZT9bXTooImJvb2xlYW4iPT10eXBlb2YgdCYmKG49dCx0PSExKSx0fHwoeS5jcmVhdGVIVE1MRG9jdW1lbnQ/KChyPSh0PUUuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCIiKSkuY3JlYXRlRWxlbWVudCgiYmFzZSIpKS5ocmVmPUUubG9jYXRpb24uaHJlZix0LmhlYWQuYXBwZW5kQ2hpbGQocikpOnQ9RSksbz0hbiYmW10sKGk9Ti5leGVjKGUpKT9bdC5jcmVhdGVFbGVtZW50KGlbMV0pXTooaT14ZShbZV0sdCxvKSxvJiZvLmxlbmd0aCYmUyhvKS5yZW1vdmUoKSxTLm1lcmdlKFtdLGkuY2hpbGROb2RlcykpKTt2YXIgcixpLG99LFMuZm4ubG9hZD1mdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGE9dGhpcyxzPWUuaW5kZXhPZigiICIpO3JldHVybi0xPHMmJihyPWh0KGUuc2xpY2UocykpLGU9ZS5zbGljZSgwLHMpKSxtKHQpPyhuPXQsdD12b2lkIDApOnQmJiJvYmplY3QiPT10eXBlb2YgdCYmKGk9IlBPU1QiKSwwPGEubGVuZ3RoJiZTLmFqYXgoe3VybDplLHR5cGU6aXx8IkdFVCIsZGF0YVR5cGU6Imh0bWwiLGRhdGE6dH0pLmRvbmUoZnVuY3Rpb24oZSl7bz1hcmd1bWVudHMsYS5odG1sKHI/UygiPGRpdj4iKS5hcHBlbmQoUy5wYXJzZUhUTUwoZSkpLmZpbmQocik6ZSl9KS5hbHdheXMobiYmZnVuY3Rpb24oZSx0KXthLmVhY2goZnVuY3Rpb24oKXtuLmFwcGx5KHRoaXMsb3x8W2UucmVzcG9uc2VUZXh0LHQsZV0pfSl9KSx0aGlzfSxTLmV4cHIucHNldWRvcy5hbmltYXRlZD1mdW5jdGlvbih0KXtyZXR1cm4gUy5ncmVwKFMudGltZXJzLGZ1bmN0aW9uKGUpe3JldHVybiB0PT09ZS5lbGVtfSkubGVuZ3RofSxTLm9mZnNldD17c2V0T2Zmc2V0OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYSxzLHUsbD1TLmNzcyhlLCJwb3NpdGlvbiIpLGM9UyhlKSxmPXt9OyJzdGF0aWMiPT09bCYmKGUuc3R5bGUucG9zaXRpb249InJlbGF0aXZlIikscz1jLm9mZnNldCgpLG89Uy5jc3MoZSwidG9wIiksdT1TLmNzcyhlLCJsZWZ0IiksKCJhYnNvbHV0ZSI9PT1sfHwiZml4ZWQiPT09bCkmJi0xPChvK3UpLmluZGV4T2YoImF1dG8iKT8oYT0ocj1jLnBvc2l0aW9uKCkpLnRvcCxpPXIubGVmdCk6KGE9cGFyc2VGbG9hdChvKXx8MCxpPXBhcnNlRmxvYXQodSl8fDApLG0odCkmJih0PXQuY2FsbChlLG4sUy5leHRlbmQoe30scykpKSxudWxsIT10LnRvcCYmKGYudG9wPXQudG9wLXMudG9wK2EpLG51bGwhPXQubGVmdCYmKGYubGVmdD10LmxlZnQtcy5sZWZ0K2kpLCJ1c2luZyJpbiB0P3QudXNpbmcuY2FsbChlLGYpOmMuY3NzKGYpfX0sUy5mbi5leHRlbmQoe29mZnNldDpmdW5jdGlvbih0KXtpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiB2b2lkIDA9PT10P3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKGUpe1Mub2Zmc2V0LnNldE9mZnNldCh0aGlzLHQsZSl9KTt2YXIgZSxuLHI9dGhpc1swXTtyZXR1cm4gcj9yLmdldENsaWVudFJlY3RzKCkubGVuZ3RoPyhlPXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksbj1yLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcse3RvcDplLnRvcCtuLnBhZ2VZT2Zmc2V0LGxlZnQ6ZS5sZWZ0K24ucGFnZVhPZmZzZXR9KTp7dG9wOjAsbGVmdDowfTp2b2lkIDB9LHBvc2l0aW9uOmZ1bmN0aW9uKCl7aWYodGhpc1swXSl7dmFyIGUsdCxuLHI9dGhpc1swXSxpPXt0b3A6MCxsZWZ0OjB9O2lmKCJmaXhlZCI9PT1TLmNzcyhyLCJwb3NpdGlvbiIpKXQ9ci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtlbHNle3Q9dGhpcy5vZmZzZXQoKSxuPXIub3duZXJEb2N1bWVudCxlPXIub2Zmc2V0UGFyZW50fHxuLmRvY3VtZW50RWxlbWVudDt3aGlsZShlJiYoZT09PW4uYm9keXx8ZT09PW4uZG9jdW1lbnRFbGVtZW50KSYmInN0YXRpYyI9PT1TLmNzcyhlLCJwb3NpdGlvbiIpKWU9ZS5wYXJlbnROb2RlO2UmJmUhPT1yJiYxPT09ZS5ub2RlVHlwZSYmKChpPVMoZSkub2Zmc2V0KCkpLnRvcCs9Uy5jc3MoZSwiYm9yZGVyVG9wV2lkdGgiLCEwKSxpLmxlZnQrPVMuY3NzKGUsImJvcmRlckxlZnRXaWR0aCIsITApKX1yZXR1cm57dG9wOnQudG9wLWkudG9wLVMuY3NzKHIsIm1hcmdpblRvcCIsITApLGxlZnQ6dC5sZWZ0LWkubGVmdC1TLmNzcyhyLCJtYXJnaW5MZWZ0IiwhMCl9fX0sb2Zmc2V0UGFyZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vZmZzZXRQYXJlbnQ7d2hpbGUoZSYmInN0YXRpYyI9PT1TLmNzcyhlLCJwb3NpdGlvbiIpKWU9ZS5vZmZzZXRQYXJlbnQ7cmV0dXJuIGV8fHJlfSl9fSksUy5lYWNoKHtzY3JvbGxMZWZ0OiJwYWdlWE9mZnNldCIsc2Nyb2xsVG9wOiJwYWdlWU9mZnNldCJ9LGZ1bmN0aW9uKHQsaSl7dmFyIG89InBhZ2VZT2Zmc2V0Ij09PWk7Uy5mblt0XT1mdW5jdGlvbihlKXtyZXR1cm4gJCh0aGlzLGZ1bmN0aW9uKGUsdCxuKXt2YXIgcjtpZih4KGUpP3I9ZTo5PT09ZS5ub2RlVHlwZSYmKHI9ZS5kZWZhdWx0Vmlldyksdm9pZCAwPT09bilyZXR1cm4gcj9yW2ldOmVbdF07cj9yLnNjcm9sbFRvKG8/ci5wYWdlWE9mZnNldDpuLG8/bjpyLnBhZ2VZT2Zmc2V0KTplW3RdPW59LHQsZSxhcmd1bWVudHMubGVuZ3RoKX19KSxTLmVhY2goWyJ0b3AiLCJsZWZ0Il0sZnVuY3Rpb24oZSxuKXtTLmNzc0hvb2tzW25dPUZlKHkucGl4ZWxQb3NpdGlvbixmdW5jdGlvbihlLHQpe2lmKHQpcmV0dXJuIHQ9V2UoZSxuKSxQZS50ZXN0KHQpP1MoZSkucG9zaXRpb24oKVtuXSsicHgiOnR9KX0pLFMuZWFjaCh7SGVpZ2h0OiJoZWlnaHQiLFdpZHRoOiJ3aWR0aCJ9LGZ1bmN0aW9uKGEscyl7Uy5lYWNoKHtwYWRkaW5nOiJpbm5lciIrYSxjb250ZW50OnMsIiI6Im91dGVyIithfSxmdW5jdGlvbihyLG8pe1MuZm5bb109ZnVuY3Rpb24oZSx0KXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoJiYocnx8ImJvb2xlYW4iIT10eXBlb2YgZSksaT1yfHwoITA9PT1lfHwhMD09PXQ/Im1hcmdpbiI6ImJvcmRlciIpO3JldHVybiAkKHRoaXMsZnVuY3Rpb24oZSx0LG4pe3ZhciByO3JldHVybiB4KGUpPzA9PT1vLmluZGV4T2YoIm91dGVyIik/ZVsiaW5uZXIiK2FdOmUuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyJjbGllbnQiK2FdOjk9PT1lLm5vZGVUeXBlPyhyPWUuZG9jdW1lbnRFbGVtZW50LE1hdGgubWF4KGUuYm9keVsic2Nyb2xsIithXSxyWyJzY3JvbGwiK2FdLGUuYm9keVsib2Zmc2V0IithXSxyWyJvZmZzZXQiK2FdLHJbImNsaWVudCIrYV0pKTp2b2lkIDA9PT1uP1MuY3NzKGUsdCxpKTpTLnN0eWxlKGUsdCxuLGkpfSxzLG4/ZTp2b2lkIDAsbil9fSl9KSxTLmVhY2goWyJhamF4U3RhcnQiLCJhamF4U3RvcCIsImFqYXhDb21wbGV0ZSIsImFqYXhFcnJvciIsImFqYXhTdWNjZXNzIiwiYWpheFNlbmQiXSxmdW5jdGlvbihlLHQpe1MuZm5bdF09ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMub24odCxlKX19KSxTLmZuLmV4dGVuZCh7YmluZDpmdW5jdGlvbihlLHQsbil7cmV0dXJuIHRoaXMub24oZSxudWxsLHQsbil9LHVuYmluZDpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLm9mZihlLG51bGwsdCl9LGRlbGVnYXRlOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiB0aGlzLm9uKHQsZSxuLHIpfSx1bmRlbGVnYXRlOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gMT09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5vZmYoZSwiKioiKTp0aGlzLm9mZih0LGV8fCIqKiIsbil9LGhvdmVyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMubW91c2VlbnRlcihlKS5tb3VzZWxlYXZlKHR8fGUpfX0pLFMuZWFjaCgiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBjb250ZXh0bWVudSIuc3BsaXQoIiAiKSxmdW5jdGlvbihlLG4pe1MuZm5bbl09ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMDxhcmd1bWVudHMubGVuZ3RoP3RoaXMub24obixudWxsLGUsdCk6dGhpcy50cmlnZ2VyKG4pfX0pO3ZhciBYdD0vXltcc1x1RkVGRlx4QTBdK3xbXHNcdUZFRkZceEEwXSskL2c7Uy5wcm94eT1mdW5jdGlvbihlLHQpe3ZhciBuLHIsaTtpZigic3RyaW5nIj09dHlwZW9mIHQmJihuPWVbdF0sdD1lLGU9biksbShlKSlyZXR1cm4gcj1zLmNhbGwoYXJndW1lbnRzLDIpLChpPWZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodHx8dGhpcyxyLmNvbmNhdChzLmNhbGwoYXJndW1lbnRzKSkpfSkuZ3VpZD1lLmd1aWQ9ZS5ndWlkfHxTLmd1aWQrKyxpfSxTLmhvbGRSZWFkeT1mdW5jdGlvbihlKXtlP1MucmVhZHlXYWl0Kys6Uy5yZWFkeSghMCl9LFMuaXNBcnJheT1BcnJheS5pc0FycmF5LFMucGFyc2VKU09OPUpTT04ucGFyc2UsUy5ub2RlTmFtZT1BLFMuaXNGdW5jdGlvbj1tLFMuaXNXaW5kb3c9eCxTLmNhbWVsQ2FzZT1YLFMudHlwZT13LFMubm93PURhdGUubm93LFMuaXNOdW1lcmljPWZ1bmN0aW9uKGUpe3ZhciB0PVMudHlwZShlKTtyZXR1cm4oIm51bWJlciI9PT10fHwic3RyaW5nIj09PXQpJiYhaXNOYU4oZS1wYXJzZUZsb2F0KGUpKX0sUy50cmltPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lPyIiOihlKyIiKS5yZXBsYWNlKFh0LCIiKX0sImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZCYmZGVmaW5lKCJqcXVlcnkiLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIFN9KTt2YXIgVnQ9Qy5qUXVlcnksR3Q9Qy4kO3JldHVybiBTLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIEMuJD09PVMmJihDLiQ9R3QpLGUmJkMualF1ZXJ5PT09UyYmKEMualF1ZXJ5PVZ0KSxTfSwidW5kZWZpbmVkIj09dHlwZW9mIGUmJihDLmpRdWVyeT1DLiQ9UyksU30pOwo="},{"meta":{"name":"crypto-js.min.js","url":"https://cdn.jsdelivr.net/npm/crypto-js@4.1.1/crypto-js.min.js","ts":1657118213729,"mimetype":"text/javascript"},"source":"LyoqCiAqIE1pbmlmaWVkIGJ5IGpzRGVsaXZyIHVzaW5nIFRlcnNlciB2NS43LjEuCiAqIE9yaWdpbmFsIGZpbGU6IC9ucG0vY3J5cHRvLWpzQDQuMS4xL2NyeXB0by1qcy5qcwogKgogKiBEbyBOT1QgdXNlIFNSSSB3aXRoIGR5bmFtaWNhbGx5IGdlbmVyYXRlZCBmaWxlcyEgTW9yZSBpbmZvcm1hdGlvbjogaHR0cHM6Ly93d3cuanNkZWxpdnIuY29tL3VzaW5nLXNyaS13aXRoLWR5bmFtaWMtZmlsZXMKICovCiFmdW5jdGlvbih0LGUpeyJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1leHBvcnRzPWUoKToiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSxlKTp0LkNyeXB0b0pTPWUoKX0odGhpcywoZnVuY3Rpb24oKXt2YXIgdCxlLHIsaSxuLG8scyxhLGM9Y3x8ZnVuY3Rpb24odCxlKXt2YXIgcjtpZigidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LmNyeXB0byYmKHI9d2luZG93LmNyeXB0byksInVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLmNyeXB0byYmKHI9c2VsZi5jcnlwdG8pLCJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsVGhpcyYmZ2xvYmFsVGhpcy5jcnlwdG8mJihyPWdsb2JhbFRoaXMuY3J5cHRvKSwhciYmInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5tc0NyeXB0byYmKHI9d2luZG93Lm1zQ3J5cHRvKSwhciYmInVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWwmJmdsb2JhbC5jcnlwdG8mJihyPWdsb2JhbC5jcnlwdG8pLCFyJiYiZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSl0cnl7cj1yZXF1aXJlKCJjcnlwdG8iKX1jYXRjaCh0KXt9dmFyIGk9ZnVuY3Rpb24oKXtpZihyKXtpZigiZnVuY3Rpb24iPT10eXBlb2Ygci5nZXRSYW5kb21WYWx1ZXMpdHJ5e3JldHVybiByLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDMyQXJyYXkoMSkpWzBdfWNhdGNoKHQpe31pZigiZnVuY3Rpb24iPT10eXBlb2Ygci5yYW5kb21CeXRlcyl0cnl7cmV0dXJuIHIucmFuZG9tQnl0ZXMoNCkucmVhZEludDMyTEUoKX1jYXRjaCh0KXt9fXRocm93IG5ldyBFcnJvcigiTmF0aXZlIGNyeXB0byBtb2R1bGUgY291bGQgbm90IGJlIHVzZWQgdG8gZ2V0IHNlY3VyZSByYW5kb20gbnVtYmVyLiIpfSxuPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe31yZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHI7cmV0dXJuIHQucHJvdG90eXBlPWUscj1uZXcgdCx0LnByb3RvdHlwZT1udWxsLHJ9fSgpLG89e30scz1vLmxpYj17fSxhPXMuQmFzZT17ZXh0ZW5kOmZ1bmN0aW9uKHQpe3ZhciBlPW4odGhpcyk7cmV0dXJuIHQmJmUubWl4SW4odCksZS5oYXNPd25Qcm9wZXJ0eSgiaW5pdCIpJiZ0aGlzLmluaXQhPT1lLmluaXR8fChlLmluaXQ9ZnVuY3Rpb24oKXtlLiRzdXBlci5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLGUuaW5pdC5wcm90b3R5cGU9ZSxlLiRzdXBlcj10aGlzLGV9LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZXh0ZW5kKCk7cmV0dXJuIHQuaW5pdC5hcHBseSh0LGFyZ3VtZW50cyksdH0saW5pdDpmdW5jdGlvbigpe30sbWl4SW46ZnVuY3Rpb24odCl7Zm9yKHZhciBlIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShlKSYmKHRoaXNbZV09dFtlXSk7dC5oYXNPd25Qcm9wZXJ0eSgidG9TdHJpbmciKSYmKHRoaXMudG9TdHJpbmc9dC50b1N0cmluZyl9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5pdC5wcm90b3R5cGUuZXh0ZW5kKHRoaXMpfX0sYz1zLldvcmRBcnJheT1hLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LGUpe3Q9dGhpcy53b3Jkcz10fHxbXSx0aGlzLnNpZ0J5dGVzPW51bGwhPWU/ZTo0KnQubGVuZ3RofSx0b1N0cmluZzpmdW5jdGlvbih0KXtyZXR1cm4odHx8bCkuc3RyaW5naWZ5KHRoaXMpfSxjb25jYXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy53b3JkcyxyPXQud29yZHMsaT10aGlzLnNpZ0J5dGVzLG49dC5zaWdCeXRlcztpZih0aGlzLmNsYW1wKCksaSU0KWZvcih2YXIgbz0wO288bjtvKyspe3ZhciBzPXJbbz4+PjJdPj4+MjQtbyU0KjgmMjU1O2VbaStvPj4+Ml18PXM8PDI0LShpK28pJTQqOH1lbHNlIGZvcih2YXIgYT0wO2E8bjthKz00KWVbaSthPj4+Ml09clthPj4+Ml07cmV0dXJuIHRoaXMuc2lnQnl0ZXMrPW4sdGhpc30sY2xhbXA6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLndvcmRzLHI9dGhpcy5zaWdCeXRlcztlW3I+Pj4yXSY9NDI5NDk2NzI5NTw8MzItciU0KjgsZS5sZW5ndGg9dC5jZWlsKHIvNCl9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQ9YS5jbG9uZS5jYWxsKHRoaXMpO3JldHVybiB0LndvcmRzPXRoaXMud29yZHMuc2xpY2UoMCksdH0scmFuZG9tOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxyPTA7cjx0O3IrPTQpZS5wdXNoKGkoKSk7cmV0dXJuIG5ldyBjLmluaXQoZSx0KX19KSxoPW8uZW5jPXt9LGw9aC5IZXg9e3N0cmluZ2lmeTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC53b3JkcyxyPXQuc2lnQnl0ZXMsaT1bXSxuPTA7bjxyO24rKyl7dmFyIG89ZVtuPj4+Ml0+Pj4yNC1uJTQqOCYyNTU7aS5wdXNoKChvPj4+NCkudG9TdHJpbmcoMTYpKSxpLnB1c2goKDE1Jm8pLnRvU3RyaW5nKDE2KSl9cmV0dXJuIGkuam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10Lmxlbmd0aCxyPVtdLGk9MDtpPGU7aSs9MilyW2k+Pj4zXXw9cGFyc2VJbnQodC5zdWJzdHIoaSwyKSwxNik8PDI0LWklOCo0O3JldHVybiBuZXcgYy5pbml0KHIsZS8yKX19LGY9aC5MYXRpbjE9e3N0cmluZ2lmeTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC53b3JkcyxyPXQuc2lnQnl0ZXMsaT1bXSxuPTA7bjxyO24rKyl7dmFyIG89ZVtuPj4+Ml0+Pj4yNC1uJTQqOCYyNTU7aS5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUobykpfXJldHVybiBpLmpvaW4oIiIpfSxwYXJzZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9dC5sZW5ndGgscj1bXSxpPTA7aTxlO2krKylyW2k+Pj4yXXw9KDI1NSZ0LmNoYXJDb2RlQXQoaSkpPDwyNC1pJTQqODtyZXR1cm4gbmV3IGMuaW5pdChyLGUpfX0sdT1oLlV0Zjg9e3N0cmluZ2lmeTpmdW5jdGlvbih0KXt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoZi5zdHJpbmdpZnkodCkpKX1jYXRjaCh0KXt0aHJvdyBuZXcgRXJyb3IoIk1hbGZvcm1lZCBVVEYtOCBkYXRhIil9fSxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gZi5wYXJzZSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQodCkpKX19LGQ9cy5CdWZmZXJlZEJsb2NrQWxnb3JpdGhtPWEuZXh0ZW5kKHtyZXNldDpmdW5jdGlvbigpe3RoaXMuX2RhdGE9bmV3IGMuaW5pdCx0aGlzLl9uRGF0YUJ5dGVzPTB9LF9hcHBlbmQ6ZnVuY3Rpb24odCl7InN0cmluZyI9PXR5cGVvZiB0JiYodD11LnBhcnNlKHQpKSx0aGlzLl9kYXRhLmNvbmNhdCh0KSx0aGlzLl9uRGF0YUJ5dGVzKz10LnNpZ0J5dGVzfSxfcHJvY2VzczpmdW5jdGlvbihlKXt2YXIgcixpPXRoaXMuX2RhdGEsbj1pLndvcmRzLG89aS5zaWdCeXRlcyxzPXRoaXMuYmxvY2tTaXplLGE9by8oNCpzKSxoPShhPWU/dC5jZWlsKGEpOnQubWF4KCgwfGEpLXRoaXMuX21pbkJ1ZmZlclNpemUsMCkpKnMsbD10Lm1pbig0Kmgsbyk7aWYoaCl7Zm9yKHZhciBmPTA7ZjxoO2YrPXMpdGhpcy5fZG9Qcm9jZXNzQmxvY2sobixmKTtyPW4uc3BsaWNlKDAsaCksaS5zaWdCeXRlcy09bH1yZXR1cm4gbmV3IGMuaW5pdChyLGwpfSxjbG9uZTpmdW5jdGlvbigpe3ZhciB0PWEuY2xvbmUuY2FsbCh0aGlzKTtyZXR1cm4gdC5fZGF0YT10aGlzLl9kYXRhLmNsb25lKCksdH0sX21pbkJ1ZmZlclNpemU6MH0pLHA9KHMuSGFzaGVyPWQuZXh0ZW5kKHtjZmc6YS5leHRlbmQoKSxpbml0OmZ1bmN0aW9uKHQpe3RoaXMuY2ZnPXRoaXMuY2ZnLmV4dGVuZCh0KSx0aGlzLnJlc2V0KCl9LHJlc2V0OmZ1bmN0aW9uKCl7ZC5yZXNldC5jYWxsKHRoaXMpLHRoaXMuX2RvUmVzZXQoKX0sdXBkYXRlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9hcHBlbmQodCksdGhpcy5fcHJvY2VzcygpLHRoaXN9LGZpbmFsaXplOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0aGlzLl9hcHBlbmQodCksdGhpcy5fZG9GaW5hbGl6ZSgpfSxibG9ja1NpemU6MTYsX2NyZWF0ZUhlbHBlcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxyKXtyZXR1cm4gbmV3IHQuaW5pdChyKS5maW5hbGl6ZShlKX19LF9jcmVhdGVIbWFjSGVscGVyOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlLHIpe3JldHVybiBuZXcgcC5ITUFDLmluaXQodCxyKS5maW5hbGl6ZShlKX19fSksby5hbGdvPXt9KTtyZXR1cm4gb30oTWF0aCk7cmV0dXJuIGU9KHQ9YykubGliLHI9ZS5CYXNlLGk9ZS5Xb3JkQXJyYXksKG49dC54NjQ9e30pLldvcmQ9ci5leHRlbmQoe2luaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLmhpZ2g9dCx0aGlzLmxvdz1lfX0pLG4uV29yZEFycmF5PXIuZXh0ZW5kKHtpbml0OmZ1bmN0aW9uKHQsZSl7dD10aGlzLndvcmRzPXR8fFtdLHRoaXMuc2lnQnl0ZXM9bnVsbCE9ZT9lOjgqdC5sZW5ndGh9LHRvWDMyOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMud29yZHMsZT10Lmxlbmd0aCxyPVtdLG49MDtuPGU7bisrKXt2YXIgbz10W25dO3IucHVzaChvLmhpZ2gpLHIucHVzaChvLmxvdyl9cmV0dXJuIGkuY3JlYXRlKHIsdGhpcy5zaWdCeXRlcyl9LGNsb25lOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXIuY2xvbmUuY2FsbCh0aGlzKSxlPXQud29yZHM9dGhpcy53b3Jkcy5zbGljZSgwKSxpPWUubGVuZ3RoLG49MDtuPGk7bisrKWVbbl09ZVtuXS5jbG9uZSgpO3JldHVybiB0fX0pLGZ1bmN0aW9uKCl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIEFycmF5QnVmZmVyKXt2YXIgdD1jLmxpYi5Xb3JkQXJyYXksZT10LmluaXQ7KHQuaW5pdD1mdW5jdGlvbih0KXtpZih0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXImJih0PW5ldyBVaW50OEFycmF5KHQpKSwodCBpbnN0YW5jZW9mIEludDhBcnJheXx8InVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OENsYW1wZWRBcnJheSYmdCBpbnN0YW5jZW9mIFVpbnQ4Q2xhbXBlZEFycmF5fHx0IGluc3RhbmNlb2YgSW50MTZBcnJheXx8dCBpbnN0YW5jZW9mIFVpbnQxNkFycmF5fHx0IGluc3RhbmNlb2YgSW50MzJBcnJheXx8dCBpbnN0YW5jZW9mIFVpbnQzMkFycmF5fHx0IGluc3RhbmNlb2YgRmxvYXQzMkFycmF5fHx0IGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5KSYmKHQ9bmV3IFVpbnQ4QXJyYXkodC5idWZmZXIsdC5ieXRlT2Zmc2V0LHQuYnl0ZUxlbmd0aCkpLHQgaW5zdGFuY2VvZiBVaW50OEFycmF5KXtmb3IodmFyIHI9dC5ieXRlTGVuZ3RoLGk9W10sbj0wO248cjtuKyspaVtuPj4+Ml18PXRbbl08PDI0LW4lNCo4O2UuY2FsbCh0aGlzLGkscil9ZWxzZSBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLnByb3RvdHlwZT10fX0oKSxmdW5jdGlvbigpe3ZhciB0PWMsZT10LmxpYi5Xb3JkQXJyYXkscj10LmVuYztyLlV0ZjE2PXIuVXRmMTZCRT17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LndvcmRzLHI9dC5zaWdCeXRlcyxpPVtdLG49MDtuPHI7bis9Mil7dmFyIG89ZVtuPj4+Ml0+Pj4xNi1uJTQqOCY2NTUzNTtpLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShvKSl9cmV0dXJuIGkuam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10Lmxlbmd0aCxpPVtdLG49MDtuPHI7bisrKWlbbj4+PjFdfD10LmNoYXJDb2RlQXQobik8PDE2LW4lMioxNjtyZXR1cm4gZS5jcmVhdGUoaSwyKnIpfX07ZnVuY3Rpb24gaSh0KXtyZXR1cm4gdDw8OCY0Mjc4MjU1MzYwfHQ+Pj44JjE2NzExOTM1fXIuVXRmMTZMRT17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LndvcmRzLHI9dC5zaWdCeXRlcyxuPVtdLG89MDtvPHI7bys9Mil7dmFyIHM9aShlW28+Pj4yXT4+PjE2LW8lNCo4JjY1NTM1KTtuLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShzKSl9cmV0dXJuIG4uam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10Lmxlbmd0aCxuPVtdLG89MDtvPHI7bysrKW5bbz4+PjFdfD1pKHQuY2hhckNvZGVBdChvKTw8MTYtbyUyKjE2KTtyZXR1cm4gZS5jcmVhdGUobiwyKnIpfX19KCksZnVuY3Rpb24oKXt2YXIgdD1jLGU9dC5saWIuV29yZEFycmF5O3QuZW5jLkJhc2U2ND17c3RyaW5naWZ5OmZ1bmN0aW9uKHQpe3ZhciBlPXQud29yZHMscj10LnNpZ0J5dGVzLGk9dGhpcy5fbWFwO3QuY2xhbXAoKTtmb3IodmFyIG49W10sbz0wO288cjtvKz0zKWZvcih2YXIgcz0oZVtvPj4+Ml0+Pj4yNC1vJTQqOCYyNTUpPDwxNnwoZVtvKzE+Pj4yXT4+PjI0LShvKzEpJTQqOCYyNTUpPDw4fGVbbysyPj4+Ml0+Pj4yNC0obysyKSU0KjgmMjU1LGE9MDthPDQmJm8rLjc1KmE8cjthKyspbi5wdXNoKGkuY2hhckF0KHM+Pj42KigzLWEpJjYzKSk7dmFyIGM9aS5jaGFyQXQoNjQpO2lmKGMpZm9yKDtuLmxlbmd0aCU0OyluLnB1c2goYyk7cmV0dXJuIG4uam9pbigiIil9LHBhcnNlOmZ1bmN0aW9uKHQpe3ZhciByPXQubGVuZ3RoLGk9dGhpcy5fbWFwLG49dGhpcy5fcmV2ZXJzZU1hcDtpZighbil7bj10aGlzLl9yZXZlcnNlTWFwPVtdO2Zvcih2YXIgbz0wO288aS5sZW5ndGg7bysrKW5baS5jaGFyQ29kZUF0KG8pXT1vfXZhciBzPWkuY2hhckF0KDY0KTtpZihzKXt2YXIgYT10LmluZGV4T2Yocyk7LTEhPT1hJiYocj1hKX1yZXR1cm4gZnVuY3Rpb24odCxyLGkpe2Zvcih2YXIgbj1bXSxvPTAscz0wO3M8cjtzKyspaWYocyU0KXt2YXIgYT1pW3QuY2hhckNvZGVBdChzLTEpXTw8cyU0KjJ8aVt0LmNoYXJDb2RlQXQocyldPj4+Ni1zJTQqMjtuW28+Pj4yXXw9YTw8MjQtbyU0KjgsbysrfXJldHVybiBlLmNyZWF0ZShuLG8pfSh0LHIsbil9LF9tYXA6IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89In19KCksZnVuY3Rpb24oKXt2YXIgdD1jLGU9dC5saWIuV29yZEFycmF5O3QuZW5jLkJhc2U2NHVybD17c3RyaW5naWZ5OmZ1bmN0aW9uKHQsZT0hMCl7dmFyIHI9dC53b3JkcyxpPXQuc2lnQnl0ZXMsbj1lP3RoaXMuX3NhZmVfbWFwOnRoaXMuX21hcDt0LmNsYW1wKCk7Zm9yKHZhciBvPVtdLHM9MDtzPGk7cys9Mylmb3IodmFyIGE9KHJbcz4+PjJdPj4+MjQtcyU0KjgmMjU1KTw8MTZ8KHJbcysxPj4+Ml0+Pj4yNC0ocysxKSU0KjgmMjU1KTw8OHxyW3MrMj4+PjJdPj4+MjQtKHMrMiklNCo4JjI1NSxjPTA7Yzw0JiZzKy43NSpjPGk7YysrKW8ucHVzaChuLmNoYXJBdChhPj4+NiooMy1jKSY2MykpO3ZhciBoPW4uY2hhckF0KDY0KTtpZihoKWZvcig7by5sZW5ndGglNDspby5wdXNoKGgpO3JldHVybiBvLmpvaW4oIiIpfSxwYXJzZTpmdW5jdGlvbih0LHI9ITApe3ZhciBpPXQubGVuZ3RoLG49cj90aGlzLl9zYWZlX21hcDp0aGlzLl9tYXAsbz10aGlzLl9yZXZlcnNlTWFwO2lmKCFvKXtvPXRoaXMuX3JldmVyc2VNYXA9W107Zm9yKHZhciBzPTA7czxuLmxlbmd0aDtzKyspb1tuLmNoYXJDb2RlQXQocyldPXN9dmFyIGE9bi5jaGFyQXQoNjQpO2lmKGEpe3ZhciBjPXQuaW5kZXhPZihhKTstMSE9PWMmJihpPWMpfXJldHVybiBmdW5jdGlvbih0LHIsaSl7Zm9yKHZhciBuPVtdLG89MCxzPTA7czxyO3MrKylpZihzJTQpe3ZhciBhPWlbdC5jaGFyQ29kZUF0KHMtMSldPDxzJTQqMnxpW3QuY2hhckNvZGVBdChzKV0+Pj42LXMlNCoyO25bbz4+PjJdfD1hPDwyNC1vJTQqOCxvKyt9cmV0dXJuIGUuY3JlYXRlKG4sbyl9KHQsaSxvKX0sX21hcDoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0iLF9zYWZlX21hcDoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXyJ9fSgpLGZ1bmN0aW9uKHQpe3ZhciBlPWMscj1lLmxpYixpPXIuV29yZEFycmF5LG49ci5IYXNoZXIsbz1lLmFsZ28scz1bXTshZnVuY3Rpb24oKXtmb3IodmFyIGU9MDtlPDY0O2UrKylzW2VdPTQyOTQ5NjcyOTYqdC5hYnModC5zaW4oZSsxKSl8MH0oKTt2YXIgYT1vLk1ENT1uLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXt0aGlzLl9oYXNoPW5ldyBpLmluaXQoWzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OF0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9MDtyPDE2O3IrKyl7dmFyIGk9ZStyLG49dFtpXTt0W2ldPTE2NzExOTM1JihuPDw4fG4+Pj4yNCl8NDI3ODI1NTM2MCYobjw8MjR8bj4+PjgpfXZhciBvPXRoaXMuX2hhc2gud29yZHMsYT10W2UrMF0sYz10W2UrMV0sZD10W2UrMl0scD10W2UrM10sXz10W2UrNF0sdj10W2UrNV0seT10W2UrNl0sZz10W2UrN10sQj10W2UrOF0sdz10W2UrOV0saz10W2UrMTBdLG09dFtlKzExXSxTPXRbZSsxMl0seD10W2UrMTNdLGI9dFtlKzE0XSxBPXRbZSsxNV0sSD1vWzBdLHo9b1sxXSxDPW9bMl0sRD1vWzNdO0g9aChILHosQyxELGEsNyxzWzBdKSxEPWgoRCxILHosQyxjLDEyLHNbMV0pLEM9aChDLEQsSCx6LGQsMTcsc1syXSksej1oKHosQyxELEgscCwyMixzWzNdKSxIPWgoSCx6LEMsRCxfLDcsc1s0XSksRD1oKEQsSCx6LEMsdiwxMixzWzVdKSxDPWgoQyxELEgseix5LDE3LHNbNl0pLHo9aCh6LEMsRCxILGcsMjIsc1s3XSksSD1oKEgseixDLEQsQiw3LHNbOF0pLEQ9aChELEgseixDLHcsMTIsc1s5XSksQz1oKEMsRCxILHosaywxNyxzWzEwXSksej1oKHosQyxELEgsbSwyMixzWzExXSksSD1oKEgseixDLEQsUyw3LHNbMTJdKSxEPWgoRCxILHosQyx4LDEyLHNbMTNdKSxDPWgoQyxELEgseixiLDE3LHNbMTRdKSxIPWwoSCx6PWgoeixDLEQsSCxBLDIyLHNbMTVdKSxDLEQsYyw1LHNbMTZdKSxEPWwoRCxILHosQyx5LDksc1sxN10pLEM9bChDLEQsSCx6LG0sMTQsc1sxOF0pLHo9bCh6LEMsRCxILGEsMjAsc1sxOV0pLEg9bChILHosQyxELHYsNSxzWzIwXSksRD1sKEQsSCx6LEMsayw5LHNbMjFdKSxDPWwoQyxELEgseixBLDE0LHNbMjJdKSx6PWwoeixDLEQsSCxfLDIwLHNbMjNdKSxIPWwoSCx6LEMsRCx3LDUsc1syNF0pLEQ9bChELEgseixDLGIsOSxzWzI1XSksQz1sKEMsRCxILHoscCwxNCxzWzI2XSksej1sKHosQyxELEgsQiwyMCxzWzI3XSksSD1sKEgseixDLEQseCw1LHNbMjhdKSxEPWwoRCxILHosQyxkLDksc1syOV0pLEM9bChDLEQsSCx6LGcsMTQsc1szMF0pLEg9ZihILHo9bCh6LEMsRCxILFMsMjAsc1szMV0pLEMsRCx2LDQsc1szMl0pLEQ9ZihELEgseixDLEIsMTEsc1szM10pLEM9ZihDLEQsSCx6LG0sMTYsc1szNF0pLHo9Zih6LEMsRCxILGIsMjMsc1szNV0pLEg9ZihILHosQyxELGMsNCxzWzM2XSksRD1mKEQsSCx6LEMsXywxMSxzWzM3XSksQz1mKEMsRCxILHosZywxNixzWzM4XSksej1mKHosQyxELEgsaywyMyxzWzM5XSksSD1mKEgseixDLEQseCw0LHNbNDBdKSxEPWYoRCxILHosQyxhLDExLHNbNDFdKSxDPWYoQyxELEgseixwLDE2LHNbNDJdKSx6PWYoeixDLEQsSCx5LDIzLHNbNDNdKSxIPWYoSCx6LEMsRCx3LDQsc1s0NF0pLEQ9ZihELEgseixDLFMsMTEsc1s0NV0pLEM9ZihDLEQsSCx6LEEsMTYsc1s0Nl0pLEg9dShILHo9Zih6LEMsRCxILGQsMjMsc1s0N10pLEMsRCxhLDYsc1s0OF0pLEQ9dShELEgseixDLGcsMTAsc1s0OV0pLEM9dShDLEQsSCx6LGIsMTUsc1s1MF0pLHo9dSh6LEMsRCxILHYsMjEsc1s1MV0pLEg9dShILHosQyxELFMsNixzWzUyXSksRD11KEQsSCx6LEMscCwxMCxzWzUzXSksQz11KEMsRCxILHosaywxNSxzWzU0XSksej11KHosQyxELEgsYywyMSxzWzU1XSksSD11KEgseixDLEQsQiw2LHNbNTZdKSxEPXUoRCxILHosQyxBLDEwLHNbNTddKSxDPXUoQyxELEgseix5LDE1LHNbNThdKSx6PXUoeixDLEQsSCx4LDIxLHNbNTldKSxIPXUoSCx6LEMsRCxfLDYsc1s2MF0pLEQ9dShELEgseixDLG0sMTAsc1s2MV0pLEM9dShDLEQsSCx6LGQsMTUsc1s2Ml0pLHo9dSh6LEMsRCxILHcsMjEsc1s2M10pLG9bMF09b1swXStIfDAsb1sxXT1vWzFdK3p8MCxvWzJdPW9bMl0rQ3wwLG9bM109b1szXStEfDB9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fZGF0YSxyPWUud29yZHMsaT04KnRoaXMuX25EYXRhQnl0ZXMsbj04KmUuc2lnQnl0ZXM7cltuPj4+NV18PTEyODw8MjQtbiUzMjt2YXIgbz10LmZsb29yKGkvNDI5NDk2NzI5Nikscz1pO3JbMTUrKG4rNjQ+Pj45PDw0KV09MTY3MTE5MzUmKG88PDh8bz4+PjI0KXw0Mjc4MjU1MzYwJihvPDwyNHxvPj4+OCksclsxNCsobis2ND4+Pjk8PDQpXT0xNjcxMTkzNSYoczw8OHxzPj4+MjQpfDQyNzgyNTUzNjAmKHM8PDI0fHM+Pj44KSxlLnNpZ0J5dGVzPTQqKHIubGVuZ3RoKzEpLHRoaXMuX3Byb2Nlc3MoKTtmb3IodmFyIGE9dGhpcy5faGFzaCxjPWEud29yZHMsaD0wO2g8NDtoKyspe3ZhciBsPWNbaF07Y1toXT0xNjcxMTkzNSYobDw8OHxsPj4+MjQpfDQyNzgyNTUzNjAmKGw8PDI0fGw+Pj44KX1yZXR1cm4gYX0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1uLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpLHR9fSk7ZnVuY3Rpb24gaCh0LGUscixpLG4sbyxzKXt2YXIgYT10KyhlJnJ8fmUmaSkrbitzO3JldHVybihhPDxvfGE+Pj4zMi1vKStlfWZ1bmN0aW9uIGwodCxlLHIsaSxuLG8scyl7dmFyIGE9dCsoZSZpfHImfmkpK24rcztyZXR1cm4oYTw8b3xhPj4+MzItbykrZX1mdW5jdGlvbiBmKHQsZSxyLGksbixvLHMpe3ZhciBhPXQrKGVecl5pKStuK3M7cmV0dXJuKGE8PG98YT4+PjMyLW8pK2V9ZnVuY3Rpb24gdSh0LGUscixpLG4sbyxzKXt2YXIgYT10KyhyXihlfH5pKSkrbitzO3JldHVybihhPDxvfGE+Pj4zMi1vKStlfWUuTUQ1PW4uX2NyZWF0ZUhlbHBlcihhKSxlLkhtYWNNRDU9bi5fY3JlYXRlSG1hY0hlbHBlcihhKX0oTWF0aCksZnVuY3Rpb24oKXt2YXIgdD1jLGU9dC5saWIscj1lLldvcmRBcnJheSxpPWUuSGFzaGVyLG49dC5hbGdvLG89W10scz1uLlNIQTE9aS5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5faGFzaD1uZXcgci5pbml0KFsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9dGhpcy5faGFzaC53b3JkcyxpPXJbMF0sbj1yWzFdLHM9clsyXSxhPXJbM10sYz1yWzRdLGg9MDtoPDgwO2grKyl7aWYoaDwxNilvW2hdPTB8dFtlK2hdO2Vsc2V7dmFyIGw9b1toLTNdXm9baC04XV5vW2gtMTRdXm9baC0xNl07b1toXT1sPDwxfGw+Pj4zMX12YXIgZj0oaTw8NXxpPj4+MjcpK2Mrb1toXTtmKz1oPDIwPzE1MTg1MDAyNDkrKG4mc3x+biZhKTpoPDQwPzE4NTk3NzUzOTMrKG5ec15hKTpoPDYwPyhuJnN8biZhfHMmYSktMTg5NDAwNzU4ODoobl5zXmEpLTg5OTQ5NzUxNCxjPWEsYT1zLHM9bjw8MzB8bj4+PjIsbj1pLGk9Zn1yWzBdPXJbMF0raXwwLHJbMV09clsxXStufDAsclsyXT1yWzJdK3N8MCxyWzNdPXJbM10rYXwwLHJbNF09cls0XStjfDB9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZGF0YSxlPXQud29yZHMscj04KnRoaXMuX25EYXRhQnl0ZXMsaT04KnQuc2lnQnl0ZXM7cmV0dXJuIGVbaT4+PjVdfD0xMjg8PDI0LWklMzIsZVsxNCsoaSs2ND4+Pjk8PDQpXT1NYXRoLmZsb29yKHIvNDI5NDk2NzI5NiksZVsxNSsoaSs2ND4+Pjk8PDQpXT1yLHQuc2lnQnl0ZXM9NCplLmxlbmd0aCx0aGlzLl9wcm9jZXNzKCksdGhpcy5faGFzaH0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgdD1pLmNsb25lLmNhbGwodGhpcyk7cmV0dXJuIHQuX2hhc2g9dGhpcy5faGFzaC5jbG9uZSgpLHR9fSk7dC5TSEExPWkuX2NyZWF0ZUhlbHBlcihzKSx0LkhtYWNTSEExPWkuX2NyZWF0ZUhtYWNIZWxwZXIocyl9KCksZnVuY3Rpb24odCl7dmFyIGU9YyxyPWUubGliLGk9ci5Xb3JkQXJyYXksbj1yLkhhc2hlcixvPWUuYWxnbyxzPVtdLGE9W107IWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXtmb3IodmFyIHI9dC5zcXJ0KGUpLGk9MjtpPD1yO2krKylpZighKGUlaSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gcih0KXtyZXR1cm4gNDI5NDk2NzI5NioodC0oMHx0KSl8MH1mb3IodmFyIGk9MixuPTA7bjw2NDspZShpKSYmKG48OCYmKHNbbl09cih0LnBvdyhpLC41KSkpLGFbbl09cih0LnBvdyhpLDEvMykpLG4rKyksaSsrfSgpO3ZhciBoPVtdLGw9by5TSEEyNTY9bi5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5faGFzaD1uZXcgaS5pbml0KHMuc2xpY2UoMCkpfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9dGhpcy5faGFzaC53b3JkcyxpPXJbMF0sbj1yWzFdLG89clsyXSxzPXJbM10sYz1yWzRdLGw9cls1XSxmPXJbNl0sdT1yWzddLGQ9MDtkPDY0O2QrKyl7aWYoZDwxNiloW2RdPTB8dFtlK2RdO2Vsc2V7dmFyIHA9aFtkLTE1XSxfPShwPDwyNXxwPj4+NyleKHA8PDE0fHA+Pj4xOClecD4+PjMsdj1oW2QtMl0seT0odjw8MTV8dj4+PjE3KV4odjw8MTN8dj4+PjE5KV52Pj4+MTA7aFtkXT1fK2hbZC03XSt5K2hbZC0xNl19dmFyIGc9aSZuXmkmb15uJm8sQj0oaTw8MzB8aT4+PjIpXihpPDwxOXxpPj4+MTMpXihpPDwxMHxpPj4+MjIpLHc9dSsoKGM8PDI2fGM+Pj42KV4oYzw8MjF8Yz4+PjExKV4oYzw8N3xjPj4+MjUpKSsoYyZsXn5jJmYpK2FbZF0raFtkXTt1PWYsZj1sLGw9YyxjPXMrd3wwLHM9byxvPW4sbj1pLGk9dysoQitnKXwwfXJbMF09clswXStpfDAsclsxXT1yWzFdK258MCxyWzJdPXJbMl0rb3wwLHJbM109clszXStzfDAscls0XT1yWzRdK2N8MCxyWzVdPXJbNV0rbHwwLHJbNl09cls2XStmfDAscls3XT1yWzddK3V8MH0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9kYXRhLHI9ZS53b3JkcyxpPTgqdGhpcy5fbkRhdGFCeXRlcyxuPTgqZS5zaWdCeXRlcztyZXR1cm4gcltuPj4+NV18PTEyODw8MjQtbiUzMixyWzE0KyhuKzY0Pj4+OTw8NCldPXQuZmxvb3IoaS80Mjk0OTY3Mjk2KSxyWzE1KyhuKzY0Pj4+OTw8NCldPWksZS5zaWdCeXRlcz00KnIubGVuZ3RoLHRoaXMuX3Byb2Nlc3MoKSx0aGlzLl9oYXNofSxjbG9uZTpmdW5jdGlvbigpe3ZhciB0PW4uY2xvbmUuY2FsbCh0aGlzKTtyZXR1cm4gdC5faGFzaD10aGlzLl9oYXNoLmNsb25lKCksdH19KTtlLlNIQTI1Nj1uLl9jcmVhdGVIZWxwZXIobCksZS5IbWFjU0hBMjU2PW4uX2NyZWF0ZUhtYWNIZWxwZXIobCl9KE1hdGgpLGZ1bmN0aW9uKCl7dmFyIHQ9YyxlPXQubGliLldvcmRBcnJheSxyPXQuYWxnbyxpPXIuU0hBMjU2LG49ci5TSEEyMjQ9aS5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dGhpcy5faGFzaD1uZXcgZS5pbml0KFszMjM4MzcxMDMyLDkxNDE1MDY2Myw4MTI3MDI5OTksNDE0NDkxMjY5Nyw0MjkwNzc1ODU3LDE3NTA2MDMwMjUsMTY5NDA3NjgzOSwzMjA0MDc1NDI4XSl9LF9kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9aS5fZG9GaW5hbGl6ZS5jYWxsKHRoaXMpO3JldHVybiB0LnNpZ0J5dGVzLT00LHR9fSk7dC5TSEEyMjQ9aS5fY3JlYXRlSGVscGVyKG4pLHQuSG1hY1NIQTIyND1pLl9jcmVhdGVIbWFjSGVscGVyKG4pfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9YyxlPXQubGliLkhhc2hlcixyPXQueDY0LGk9ci5Xb3JkLG49ci5Xb3JkQXJyYXksbz10LmFsZ287ZnVuY3Rpb24gcygpe3JldHVybiBpLmNyZWF0ZS5hcHBseShpLGFyZ3VtZW50cyl9dmFyIGE9W3MoMTExNjM1MjQwOCwzNjA5NzY3NDU4KSxzKDE4OTk0NDc0NDEsNjAyODkxNzI1KSxzKDMwNDkzMjM0NzEsMzk2NDQ4NDM5OSkscygzOTIxMDA5NTczLDIxNzMyOTU1NDgpLHMoOTYxOTg3MTYzLDQwODE2Mjg0NzIpLHMoMTUwODk3MDk5MywzMDUzODM0MjY1KSxzKDI0NTM2MzU3NDgsMjkzNzY3MTU3OSkscygyODcwNzYzMjIxLDM2NjQ2MDk1NjApLHMoMzYyNDM4MTA4MCwyNzM0ODgzMzk0KSxzKDMxMDU5ODQwMSwxMTY0OTk2NTQyKSxzKDYwNzIyNTI3OCwxMzIzNjEwNzY0KSxzKDE0MjY4ODE5ODcsMzU5MDMwNDk5NCkscygxOTI1MDc4Mzg4LDQwNjgxODIzODMpLHMoMjE2MjA3ODIwNiw5OTEzMzYxMTMpLHMoMjYxNDg4ODEwMyw2MzM4MDMzMTcpLHMoMzI0ODIyMjU4MCwzNDc5Nzc0ODY4KSxzKDM4MzUzOTA0MDEsMjY2NjYxMzQ1OCkscyg0MDIyMjI0Nzc0LDk0NDcxMTEzOSkscygyNjQzNDcwNzgsMjM0MTI2Mjc3Mykscyg2MDQ4MDc2MjgsMjAwNzgwMDkzMykscyg3NzAyNTU5ODMsMTQ5NTk5MDkwMSkscygxMjQ5MTUwMTIyLDE4NTY0MzEyMzUpLHMoMTU1NTA4MTY5MiwzMTc1MjE4MTMyKSxzKDE5OTYwNjQ5ODYsMjE5ODk1MDgzNykscygyNTU0MjIwODgyLDM5OTk3MTkzMzkpLHMoMjgyMTgzNDM0OSw3NjY3ODQwMTYpLHMoMjk1Mjk5NjgwOCwyNTY2NTk0ODc5KSxzKDMyMTAzMTM2NzEsMzIwMzMzNzk1NikscygzMzM2NTcxODkxLDEwMzQ0NTcwMjYpLHMoMzU4NDUyODcxMSwyNDY2OTQ4OTAxKSxzKDExMzkyNjk5MywzNzU4MzI2MzgzKSxzKDMzODI0MTg5NSwxNjg3MTc5MzYpLHMoNjY2MzA3MjA1LDExODgxNzk5NjQpLHMoNzczNTI5OTEyLDE1NDYwNDU3MzQpLHMoMTI5NDc1NzM3MiwxNTIyODA1NDg1KSxzKDEzOTYxODIyOTEsMjY0MzgzMzgyMykscygxNjk1MTgzNzAwLDIzNDM1MjczOTApLHMoMTk4NjY2MTA1MSwxMDE0NDc3NDgwKSxzKDIxNzcwMjYzNTAsMTIwNjc1OTE0MikscygyNDU2OTU2MDM3LDM0NDA3NzYyNykscygyNzMwNDg1OTIxLDEyOTA4NjM0NjApLHMoMjgyMDMwMjQxMSwzMTU4NDU0MjczKSxzKDMyNTk3MzA4MDAsMzUwNTk1MjY1NykscygzMzQ1NzY0NzcxLDEwNjIxNzAwOCkscygzNTE2MDY1ODE3LDM2MDYwMDgzNDQpLHMoMzYwMDM1MjgwNCwxNDMyNzI1Nzc2KSxzKDQwOTQ1NzE5MDksMTQ2NzAzMTU5NCkscygyNzU0MjMzNDQsODUxMTY5NzIwKSxzKDQzMDIyNzczNCwzMTAwODIzNzUyKSxzKDUwNjk0ODYxNiwxMzYzMjU4MTk1KSxzKDY1OTA2MDU1NiwzNzUwNjg1NTkzKSxzKDg4Mzk5Nzg3NywzNzg1MDUwMjgwKSxzKDk1ODEzOTU3MSwzMzE4MzA3NDI3KSxzKDEzMjI4MjIyMTgsMzgxMjcyMzQwMykscygxNTM3MDAyMDYzLDIwMDMwMzQ5OTUpLHMoMTc0Nzg3Mzc3OSwzNjAyMDM2ODk5KSxzKDE5NTU1NjIyMjIsMTU3NTk5MDAxMikscygyMDI0MTA0ODE1LDExMjU1OTI5MjgpLHMoMjIyNzczMDQ1MiwyNzE2OTA0MzA2KSxzKDIzNjE4NTI0MjQsNDQyNzc2MDQ0KSxzKDI0Mjg0MzY0NzQsNTkzNjk4MzQ0KSxzKDI3NTY3MzQxODcsMzczMzExMDI0OSkscygzMjA0MDMxNDc5LDI5OTkzNTE1NzMpLHMoMzMyOTMyNTI5OCwzODE1OTIwNDI3KSxzKDMzOTE1Njk2MTQsMzkyODM4MzkwMCkscygzNTE1MjY3MjcxLDU2NjI4MDcxMSkscygzOTQwMTg3NjA2LDM0NTQwNjk1MzQpLHMoNDExODYzMDI3MSw0MDAwMjM5OTkyKSxzKDExNjQxODQ3NCwxOTE0MTM4NTU0KSxzKDE3NDI5MjQyMSwyNzMxMDU1MjcwKSxzKDI4OTM4MDM1NiwzMjAzOTkzMDA2KSxzKDQ2MDM5MzI2OSwzMjA2MjAzMTUpLHMoNjg1NDcxNzMzLDU4NzQ5NjgzNikscyg4NTIxNDI5NzEsMTA4Njc5Mjg1MSkscygxMDE3MDM2Mjk4LDM2NTU0MzEwMCkscygxMTI2MDAwNTgwLDI2MTgyOTc2NzYpLHMoMTI4ODAzMzQ3MCwzNDA5ODU1MTU4KSxzKDE1MDE1MDU5NDgsNDIzNDUwOTg2NikscygxNjA3MTY3OTE1LDk4NzE2NzQ2OCkscygxODE2NDAyMzE2LDEyNDYxODk1OTEpXSxoPVtdOyFmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8ODA7dCsrKWhbdF09cygpfSgpO3ZhciBsPW8uU0hBNTEyPWUuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IG4uaW5pdChbbmV3IGkuaW5pdCgxNzc5MDMzNzAzLDQwODkyMzU3MjApLG5ldyBpLmluaXQoMzE0NDEzNDI3NywyMjI3ODczNTk1KSxuZXcgaS5pbml0KDEwMTM5MDQyNDIsNDI3MTE3NTcyMyksbmV3IGkuaW5pdCgyNzczNDgwNzYyLDE1OTU3NTAxMjkpLG5ldyBpLmluaXQoMTM1OTg5MzExOSwyOTE3NTY1MTM3KSxuZXcgaS5pbml0KDI2MDA4MjI5MjQsNzI1NTExMTk5KSxuZXcgaS5pbml0KDUyODczNDYzNSw0MjE1Mzg5NTQ3KSxuZXcgaS5pbml0KDE1NDE0NTkyMjUsMzI3MDMzMjA5KV0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9dGhpcy5faGFzaC53b3JkcyxpPXJbMF0sbj1yWzFdLG89clsyXSxzPXJbM10sYz1yWzRdLGw9cls1XSxmPXJbNl0sdT1yWzddLGQ9aS5oaWdoLHA9aS5sb3csXz1uLmhpZ2gsdj1uLmxvdyx5PW8uaGlnaCxnPW8ubG93LEI9cy5oaWdoLHc9cy5sb3csaz1jLmhpZ2gsbT1jLmxvdyxTPWwuaGlnaCx4PWwubG93LGI9Zi5oaWdoLEE9Zi5sb3csSD11LmhpZ2gsej11LmxvdyxDPWQsRD1wLEU9XyxSPXYsTT15LEY9ZyxQPUIsVz13LE89ayxJPW0sVT1TLEs9eCxYPWIsTD1BLGo9SCxUPXosTj0wO048ODA7TisrKXt2YXIgcSxaLFY9aFtOXTtpZihOPDE2KVo9Vi5oaWdoPTB8dFtlKzIqTl0scT1WLmxvdz0wfHRbZSsyKk4rMV07ZWxzZXt2YXIgRz1oW04tMTVdLEo9Ry5oaWdoLFE9Ry5sb3csWT0oSj4+PjF8UTw8MzEpXihKPj4+OHxRPDwyNCleSj4+PjcsJD0oUT4+PjF8Sjw8MzEpXihRPj4+OHxKPDwyNCleKFE+Pj43fEo8PDI1KSx0dD1oW04tMl0sZXQ9dHQuaGlnaCxydD10dC5sb3csaXQ9KGV0Pj4+MTl8cnQ8PDEzKV4oZXQ8PDN8cnQ+Pj4yOSleZXQ+Pj42LG50PShydD4+PjE5fGV0PDwxMyleKHJ0PDwzfGV0Pj4+MjkpXihydD4+PjZ8ZXQ8PDI2KSxvdD1oW04tN10sc3Q9b3QuaGlnaCxhdD1vdC5sb3csY3Q9aFtOLTE2XSxodD1jdC5oaWdoLGx0PWN0LmxvdztaPShaPShaPVkrc3QrKChxPSQrYXQpPj4+MDwkPj4+MD8xOjApKStpdCsoKHErPW50KT4+PjA8bnQ+Pj4wPzE6MCkpK2h0KygocSs9bHQpPj4+MDxsdD4+PjA/MTowKSxWLmhpZ2g9WixWLmxvdz1xfXZhciBmdCx1dD1PJlVefk8mWCxkdD1JJktefkkmTCxwdD1DJkVeQyZNXkUmTSxfdD1EJlJeRCZGXlImRix2dD0oQz4+PjI4fEQ8PDQpXihDPDwzMHxEPj4+MileKEM8PDI1fEQ+Pj43KSx5dD0oRD4+PjI4fEM8PDQpXihEPDwzMHxDPj4+MileKEQ8PDI1fEM+Pj43KSxndD0oTz4+PjE0fEk8PDE4KV4oTz4+PjE4fEk8PDE0KV4oTzw8MjN8ST4+PjkpLEJ0PShJPj4+MTR8Tzw8MTgpXihJPj4+MTh8Tzw8MTQpXihJPDwyM3xPPj4+OSksd3Q9YVtOXSxrdD13dC5oaWdoLG10PXd0LmxvdyxTdD1qK2d0KygoZnQ9VCtCdCk+Pj4wPFQ+Pj4wPzE6MCkseHQ9eXQrX3Q7aj1YLFQ9TCxYPVUsTD1LLFU9TyxLPUksTz1QKyhTdD0oU3Q9KFN0PVN0K3V0KygoZnQ9ZnQrZHQpPj4+MDxkdD4+PjA/MTowKSkra3QrKChmdD1mdCttdCk+Pj4wPG10Pj4+MD8xOjApKStaKygoZnQ9ZnQrcSk+Pj4wPHE+Pj4wPzE6MCkpKygoST1XK2Z0fDApPj4+MDxXPj4+MD8xOjApfDAsUD1NLFc9RixNPUUsRj1SLEU9QyxSPUQsQz1TdCsodnQrcHQrKHh0Pj4+MDx5dD4+PjA/MTowKSkrKChEPWZ0K3h0fDApPj4+MDxmdD4+PjA/MTowKXwwfXA9aS5sb3c9cCtELGkuaGlnaD1kK0MrKHA+Pj4wPEQ+Pj4wPzE6MCksdj1uLmxvdz12K1Isbi5oaWdoPV8rRSsodj4+PjA8Uj4+PjA/MTowKSxnPW8ubG93PWcrRixvLmhpZ2g9eStNKyhnPj4+MDxGPj4+MD8xOjApLHc9cy5sb3c9dytXLHMuaGlnaD1CK1ArKHc+Pj4wPFc+Pj4wPzE6MCksbT1jLmxvdz1tK0ksYy5oaWdoPWsrTysobT4+PjA8ST4+PjA/MTowKSx4PWwubG93PXgrSyxsLmhpZ2g9UytVKyh4Pj4+MDxLPj4+MD8xOjApLEE9Zi5sb3c9QStMLGYuaGlnaD1iK1grKEE+Pj4wPEw+Pj4wPzE6MCksej11Lmxvdz16K1QsdS5oaWdoPUgraisoej4+PjA8VD4+PjA/MTowKX0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kYXRhLGU9dC53b3JkcyxyPTgqdGhpcy5fbkRhdGFCeXRlcyxpPTgqdC5zaWdCeXRlcztyZXR1cm4gZVtpPj4+NV18PTEyODw8MjQtaSUzMixlWzMwKyhpKzEyOD4+PjEwPDw1KV09TWF0aC5mbG9vcihyLzQyOTQ5NjcyOTYpLGVbMzErKGkrMTI4Pj4+MTA8PDUpXT1yLHQuc2lnQnl0ZXM9NCplLmxlbmd0aCx0aGlzLl9wcm9jZXNzKCksdGhpcy5faGFzaC50b1gzMigpfSxjbG9uZTpmdW5jdGlvbigpe3ZhciB0PWUuY2xvbmUuY2FsbCh0aGlzKTtyZXR1cm4gdC5faGFzaD10aGlzLl9oYXNoLmNsb25lKCksdH0sYmxvY2tTaXplOjMyfSk7dC5TSEE1MTI9ZS5fY3JlYXRlSGVscGVyKGwpLHQuSG1hY1NIQTUxMj1lLl9jcmVhdGVIbWFjSGVscGVyKGwpfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9YyxlPXQueDY0LHI9ZS5Xb3JkLGk9ZS5Xb3JkQXJyYXksbj10LmFsZ28sbz1uLlNIQTUxMixzPW4uU0hBMzg0PW8uZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3RoaXMuX2hhc2g9bmV3IGkuaW5pdChbbmV3IHIuaW5pdCgzNDE4MDcwMzY1LDMyMzgzNzEwMzIpLG5ldyByLmluaXQoMTY1NDI3MDI1MCw5MTQxNTA2NjMpLG5ldyByLmluaXQoMjQzODUyOTM3MCw4MTI3MDI5OTkpLG5ldyByLmluaXQoMzU1NDYyMzYwLDQxNDQ5MTI2OTcpLG5ldyByLmluaXQoMTczMTQwNTQxNSw0MjkwNzc1ODU3KSxuZXcgci5pbml0KDIzOTQxODAyMzEsMTc1MDYwMzAyNSksbmV3IHIuaW5pdCgzNjc1MDA4NTI1LDE2OTQwNzY4MzkpLG5ldyByLmluaXQoMTIwMzA2MjgxMywzMjA0MDc1NDI4KV0pfSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciB0PW8uX2RvRmluYWxpemUuY2FsbCh0aGlzKTtyZXR1cm4gdC5zaWdCeXRlcy09MTYsdH19KTt0LlNIQTM4ND1vLl9jcmVhdGVIZWxwZXIocyksdC5IbWFjU0hBMzg0PW8uX2NyZWF0ZUhtYWNIZWxwZXIocyl9KCksZnVuY3Rpb24odCl7dmFyIGU9YyxyPWUubGliLGk9ci5Xb3JkQXJyYXksbj1yLkhhc2hlcixvPWUueDY0LldvcmQscz1lLmFsZ28sYT1bXSxoPVtdLGw9W107IWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTEsZT0wLHI9MDtyPDI0O3IrKyl7YVt0KzUqZV09KHIrMSkqKHIrMikvMiU2NDt2YXIgaT0oMip0KzMqZSklNTt0PWUlNSxlPWl9Zm9yKHQ9MDt0PDU7dCsrKWZvcihlPTA7ZTw1O2UrKyloW3QrNSplXT1lKygyKnQrMyplKSU1KjU7Zm9yKHZhciBuPTEscz0wO3M8MjQ7cysrKXtmb3IodmFyIGM9MCxmPTAsdT0wO3U8Nzt1Kyspe2lmKDEmbil7dmFyIGQ9KDE8PHUpLTE7ZDwzMj9mXj0xPDxkOmNePTE8PGQtMzJ9MTI4Jm4/bj1uPDwxXjExMzpuPDw9MX1sW3NdPW8uY3JlYXRlKGMsZil9fSgpO3ZhciBmPVtdOyFmdW5jdGlvbigpe2Zvcih2YXIgdD0wO3Q8MjU7dCsrKWZbdF09by5jcmVhdGUoKX0oKTt2YXIgdT1zLlNIQTM9bi5leHRlbmQoe2NmZzpuLmNmZy5leHRlbmQoe291dHB1dExlbmd0aDo1MTJ9KSxfZG9SZXNldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9zdGF0ZT1bXSxlPTA7ZTwyNTtlKyspdFtlXT1uZXcgby5pbml0O3RoaXMuYmxvY2tTaXplPSgxNjAwLTIqdGhpcy5jZmcub3V0cHV0TGVuZ3RoKS8zMn0sX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPXRoaXMuX3N0YXRlLGk9dGhpcy5ibG9ja1NpemUvMixuPTA7bjxpO24rKyl7dmFyIG89dFtlKzIqbl0scz10W2UrMipuKzFdO289MTY3MTE5MzUmKG88PDh8bz4+PjI0KXw0Mjc4MjU1MzYwJihvPDwyNHxvPj4+OCkscz0xNjcxMTkzNSYoczw8OHxzPj4+MjQpfDQyNzgyNTUzNjAmKHM8PDI0fHM+Pj44KSwoej1yW25dKS5oaWdoXj1zLHoubG93Xj1vfWZvcih2YXIgYz0wO2M8MjQ7YysrKXtmb3IodmFyIHU9MDt1PDU7dSsrKXtmb3IodmFyIGQ9MCxwPTAsXz0wO188NTtfKyspe2RePSh6PXJbdSs1Kl9dKS5oaWdoLHBePXoubG93fXZhciB2PWZbdV07di5oaWdoPWQsdi5sb3c9cH1mb3IodT0wO3U8NTt1Kyspe3ZhciB5PWZbKHUrNCklNV0sZz1mWyh1KzEpJTVdLEI9Zy5oaWdoLHc9Zy5sb3c7Zm9yKGQ9eS5oaWdoXihCPDwxfHc+Pj4zMSkscD15Lmxvd14odzw8MXxCPj4+MzEpLF89MDtfPDU7XysrKXsoej1yW3UrNSpfXSkuaGlnaF49ZCx6Lmxvd149cH19Zm9yKHZhciBrPTE7azwyNTtrKyspe3ZhciBtPSh6PXJba10pLmhpZ2gsUz16Lmxvdyx4PWFba107eDwzMj8oZD1tPDx4fFM+Pj4zMi14LHA9Uzw8eHxtPj4+MzIteCk6KGQ9Uzw8eC0zMnxtPj4+NjQteCxwPW08PHgtMzJ8Uz4+PjY0LXgpO3ZhciBiPWZbaFtrXV07Yi5oaWdoPWQsYi5sb3c9cH12YXIgQT1mWzBdLEg9clswXTtBLmhpZ2g9SC5oaWdoLEEubG93PUgubG93O2Zvcih1PTA7dTw1O3UrKylmb3IoXz0wO188NTtfKyspe3ZhciB6PXJbaz11KzUqX10sQz1mW2tdLEQ9ZlsodSsxKSU1KzUqX10sRT1mWyh1KzIpJTUrNSpfXTt6LmhpZ2g9Qy5oaWdoXn5ELmhpZ2gmRS5oaWdoLHoubG93PUMubG93Xn5ELmxvdyZFLmxvd316PXJbMF07dmFyIFI9bFtjXTt6LmhpZ2hePVIuaGlnaCx6Lmxvd149Ui5sb3d9fSxfZG9GaW5hbGl6ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuX2RhdGEscj1lLndvcmRzLG49KHRoaXMuX25EYXRhQnl0ZXMsOCplLnNpZ0J5dGVzKSxvPTMyKnRoaXMuYmxvY2tTaXplO3Jbbj4+PjVdfD0xPDwyNC1uJTMyLHJbKHQuY2VpbCgobisxKS9vKSpvPj4+NSktMV18PTEyOCxlLnNpZ0J5dGVzPTQqci5sZW5ndGgsdGhpcy5fcHJvY2VzcygpO2Zvcih2YXIgcz10aGlzLl9zdGF0ZSxhPXRoaXMuY2ZnLm91dHB1dExlbmd0aC84LGM9YS84LGg9W10sbD0wO2w8YztsKyspe3ZhciBmPXNbbF0sdT1mLmhpZ2gsZD1mLmxvdzt1PTE2NzExOTM1Jih1PDw4fHU+Pj4yNCl8NDI3ODI1NTM2MCYodTw8MjR8dT4+PjgpLGQ9MTY3MTE5MzUmKGQ8PDh8ZD4+PjI0KXw0Mjc4MjU1MzYwJihkPDwyNHxkPj4+OCksaC5wdXNoKGQpLGgucHVzaCh1KX1yZXR1cm4gbmV3IGkuaW5pdChoLGEpfSxjbG9uZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1uLmNsb25lLmNhbGwodGhpcyksZT10Ll9zdGF0ZT10aGlzLl9zdGF0ZS5zbGljZSgwKSxyPTA7cjwyNTtyKyspZVtyXT1lW3JdLmNsb25lKCk7cmV0dXJuIHR9fSk7ZS5TSEEzPW4uX2NyZWF0ZUhlbHBlcih1KSxlLkhtYWNTSEEzPW4uX2NyZWF0ZUhtYWNIZWxwZXIodSl9KE1hdGgpLAovKiogQHByZXNlcnZlCgkoYykgMjAxMiBieSBDw6lkcmljIE1lc25pbC4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KCglSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQgbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6CgoJICAgIC0gUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLgoJICAgIC0gUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLgoKCVRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCgkqLwpmdW5jdGlvbih0KXt2YXIgZT1jLHI9ZS5saWIsaT1yLldvcmRBcnJheSxuPXIuSGFzaGVyLG89ZS5hbGdvLHM9aS5jcmVhdGUoWzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsNyw0LDEzLDEsMTAsNiwxNSwzLDEyLDAsOSw1LDIsMTQsMTEsOCwzLDEwLDE0LDQsOSwxNSw4LDEsMiw3LDAsNiwxMywxMSw1LDEyLDEsOSwxMSwxMCwwLDgsMTIsNCwxMywzLDcsMTUsMTQsNSw2LDIsNCwwLDUsOSw3LDEyLDIsMTAsMTQsMSwzLDgsMTEsNiwxNSwxM10pLGE9aS5jcmVhdGUoWzUsMTQsNywwLDksMiwxMSw0LDEzLDYsMTUsOCwxLDEwLDMsMTIsNiwxMSwzLDcsMCwxMyw1LDEwLDE0LDE1LDgsMTIsNCw5LDEsMiwxNSw1LDEsMyw3LDE0LDYsOSwxMSw4LDEyLDIsMTAsMCw0LDEzLDgsNiw0LDEsMywxMSwxNSwwLDUsMTIsMiwxMyw5LDcsMTAsMTQsMTIsMTUsMTAsNCwxLDUsOCw3LDYsMiwxMywxNCwwLDMsOSwxMV0pLGg9aS5jcmVhdGUoWzExLDE0LDE1LDEyLDUsOCw3LDksMTEsMTMsMTQsMTUsNiw3LDksOCw3LDYsOCwxMywxMSw5LDcsMTUsNywxMiwxNSw5LDExLDcsMTMsMTIsMTEsMTMsNiw3LDE0LDksMTMsMTUsMTQsOCwxMyw2LDUsMTIsNyw1LDExLDEyLDE0LDE1LDE0LDE1LDksOCw5LDE0LDUsNiw4LDYsNSwxMiw5LDE1LDUsMTEsNiw4LDEzLDEyLDUsMTIsMTMsMTQsMTEsOCw1LDZdKSxsPWkuY3JlYXRlKFs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXSksZj1pLmNyZWF0ZShbMCwxNTE4NTAwMjQ5LDE4NTk3NzUzOTMsMjQwMDk1OTcwOCwyODQwODUzODM4XSksdT1pLmNyZWF0ZShbMTM1MjgyOTkyNiwxNTQ4NjAzNjg0LDE4MzYwNzI2OTEsMjA1Mzk5NDIxNywwXSksZD1vLlJJUEVNRDE2MD1uLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXt0aGlzLl9oYXNoPWkuY3JlYXRlKFsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF0pfSxfZG9Qcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9MDtyPDE2O3IrKyl7dmFyIGk9ZStyLG49dFtpXTt0W2ldPTE2NzExOTM1JihuPDw4fG4+Pj4yNCl8NDI3ODI1NTM2MCYobjw8MjR8bj4+PjgpfXZhciBvLGMsZCx3LGssbSxTLHgsYixBLEgsej10aGlzLl9oYXNoLndvcmRzLEM9Zi53b3JkcyxEPXUud29yZHMsRT1zLndvcmRzLFI9YS53b3JkcyxNPWgud29yZHMsRj1sLndvcmRzO209bz16WzBdLFM9Yz16WzFdLHg9ZD16WzJdLGI9dz16WzNdLEE9az16WzRdO2ZvcihyPTA7cjw4MDtyKz0xKUg9byt0W2UrRVtyXV18MCxIKz1yPDE2P3AoYyxkLHcpK0NbMF06cjwzMj9fKGMsZCx3KStDWzFdOnI8NDg/dihjLGQsdykrQ1syXTpyPDY0P3koYyxkLHcpK0NbM106ZyhjLGQsdykrQ1s0XSxIPShIPUIoSHw9MCxNW3JdKSkra3wwLG89ayxrPXcsdz1CKGQsMTApLGQ9YyxjPUgsSD1tK3RbZStSW3JdXXwwLEgrPXI8MTY/ZyhTLHgsYikrRFswXTpyPDMyP3koUyx4LGIpK0RbMV06cjw0OD92KFMseCxiKStEWzJdOnI8NjQ/XyhTLHgsYikrRFszXTpwKFMseCxiKStEWzRdLEg9KEg9QihIfD0wLEZbcl0pKStBfDAsbT1BLEE9YixiPUIoeCwxMCkseD1TLFM9SDtIPXpbMV0rZCtifDAselsxXT16WzJdK3crQXwwLHpbMl09elszXStrK218MCx6WzNdPXpbNF0rbytTfDAsels0XT16WzBdK2MreHwwLHpbMF09SH0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kYXRhLGU9dC53b3JkcyxyPTgqdGhpcy5fbkRhdGFCeXRlcyxpPTgqdC5zaWdCeXRlcztlW2k+Pj41XXw9MTI4PDwyNC1pJTMyLGVbMTQrKGkrNjQ+Pj45PDw0KV09MTY3MTE5MzUmKHI8PDh8cj4+PjI0KXw0Mjc4MjU1MzYwJihyPDwyNHxyPj4+OCksdC5zaWdCeXRlcz00KihlLmxlbmd0aCsxKSx0aGlzLl9wcm9jZXNzKCk7Zm9yKHZhciBuPXRoaXMuX2hhc2gsbz1uLndvcmRzLHM9MDtzPDU7cysrKXt2YXIgYT1vW3NdO29bc109MTY3MTE5MzUmKGE8PDh8YT4+PjI0KXw0Mjc4MjU1MzYwJihhPDwyNHxhPj4+OCl9cmV0dXJuIG59LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQ9bi5jbG9uZS5jYWxsKHRoaXMpO3JldHVybiB0Ll9oYXNoPXRoaXMuX2hhc2guY2xvbmUoKSx0fX0pO2Z1bmN0aW9uIHAodCxlLHIpe3JldHVybiB0XmVecn1mdW5jdGlvbiBfKHQsZSxyKXtyZXR1cm4gdCZlfH50JnJ9ZnVuY3Rpb24gdih0LGUscil7cmV0dXJuKHR8fmUpXnJ9ZnVuY3Rpb24geSh0LGUscil7cmV0dXJuIHQmcnxlJn5yfWZ1bmN0aW9uIGcodCxlLHIpe3JldHVybiB0XihlfH5yKX1mdW5jdGlvbiBCKHQsZSl7cmV0dXJuIHQ8PGV8dD4+PjMyLWV9ZS5SSVBFTUQxNjA9bi5fY3JlYXRlSGVscGVyKGQpLGUuSG1hY1JJUEVNRDE2MD1uLl9jcmVhdGVIbWFjSGVscGVyKGQpfShNYXRoKSxmdW5jdGlvbigpe3ZhciB0PWMsZT10LmxpYi5CYXNlLHI9dC5lbmMuVXRmODt0LmFsZ28uSE1BQz1lLmV4dGVuZCh7aW5pdDpmdW5jdGlvbih0LGUpe3Q9dGhpcy5faGFzaGVyPW5ldyB0LmluaXQsInN0cmluZyI9PXR5cGVvZiBlJiYoZT1yLnBhcnNlKGUpKTt2YXIgaT10LmJsb2NrU2l6ZSxuPTQqaTtlLnNpZ0J5dGVzPm4mJihlPXQuZmluYWxpemUoZSkpLGUuY2xhbXAoKTtmb3IodmFyIG89dGhpcy5fb0tleT1lLmNsb25lKCkscz10aGlzLl9pS2V5PWUuY2xvbmUoKSxhPW8ud29yZHMsYz1zLndvcmRzLGg9MDtoPGk7aCsrKWFbaF1ePTE1NDk1NTY4MjgsY1toXV49OTA5NTIyNDg2O28uc2lnQnl0ZXM9cy5zaWdCeXRlcz1uLHRoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9oYXNoZXI7dC5yZXNldCgpLHQudXBkYXRlKHRoaXMuX2lLZXkpfSx1cGRhdGU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2hhc2hlci51cGRhdGUodCksdGhpc30sZmluYWxpemU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5faGFzaGVyLHI9ZS5maW5hbGl6ZSh0KTtyZXR1cm4gZS5yZXNldCgpLGUuZmluYWxpemUodGhpcy5fb0tleS5jbG9uZSgpLmNvbmNhdChyKSl9fSl9KCksZnVuY3Rpb24oKXt2YXIgdD1jLGU9dC5saWIscj1lLkJhc2UsaT1lLldvcmRBcnJheSxuPXQuYWxnbyxvPW4uU0hBMSxzPW4uSE1BQyxhPW4uUEJLREYyPXIuZXh0ZW5kKHtjZmc6ci5leHRlbmQoe2tleVNpemU6NCxoYXNoZXI6byxpdGVyYXRpb25zOjF9KSxpbml0OmZ1bmN0aW9uKHQpe3RoaXMuY2ZnPXRoaXMuY2ZnLmV4dGVuZCh0KX0sY29tcHV0ZTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgcj10aGlzLmNmZyxuPXMuY3JlYXRlKHIuaGFzaGVyLHQpLG89aS5jcmVhdGUoKSxhPWkuY3JlYXRlKFsxXSksYz1vLndvcmRzLGg9YS53b3JkcyxsPXIua2V5U2l6ZSxmPXIuaXRlcmF0aW9ucztjLmxlbmd0aDxsOyl7dmFyIHU9bi51cGRhdGUoZSkuZmluYWxpemUoYSk7bi5yZXNldCgpO2Zvcih2YXIgZD11LndvcmRzLHA9ZC5sZW5ndGgsXz11LHY9MTt2PGY7disrKXtfPW4uZmluYWxpemUoXyksbi5yZXNldCgpO2Zvcih2YXIgeT1fLndvcmRzLGc9MDtnPHA7ZysrKWRbZ11ePXlbZ119by5jb25jYXQodSksaFswXSsrfXJldHVybiBvLnNpZ0J5dGVzPTQqbCxvfX0pO3QuUEJLREYyPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gYS5jcmVhdGUocikuY29tcHV0ZSh0LGUpfX0oKSxmdW5jdGlvbigpe3ZhciB0PWMsZT10LmxpYixyPWUuQmFzZSxpPWUuV29yZEFycmF5LG49dC5hbGdvLG89bi5NRDUscz1uLkV2cEtERj1yLmV4dGVuZCh7Y2ZnOnIuZXh0ZW5kKHtrZXlTaXplOjQsaGFzaGVyOm8saXRlcmF0aW9uczoxfSksaW5pdDpmdW5jdGlvbih0KXt0aGlzLmNmZz10aGlzLmNmZy5leHRlbmQodCl9LGNvbXB1dGU6ZnVuY3Rpb24odCxlKXtmb3IodmFyIHIsbj10aGlzLmNmZyxvPW4uaGFzaGVyLmNyZWF0ZSgpLHM9aS5jcmVhdGUoKSxhPXMud29yZHMsYz1uLmtleVNpemUsaD1uLml0ZXJhdGlvbnM7YS5sZW5ndGg8Yzspe3ImJm8udXBkYXRlKHIpLHI9by51cGRhdGUodCkuZmluYWxpemUoZSksby5yZXNldCgpO2Zvcih2YXIgbD0xO2w8aDtsKyspcj1vLmZpbmFsaXplKHIpLG8ucmVzZXQoKTtzLmNvbmNhdChyKX1yZXR1cm4gcy5zaWdCeXRlcz00KmMsc319KTt0LkV2cEtERj1mdW5jdGlvbih0LGUscil7cmV0dXJuIHMuY3JlYXRlKHIpLmNvbXB1dGUodCxlKX19KCksYy5saWIuQ2lwaGVyfHxmdW5jdGlvbih0KXt2YXIgZT1jLHI9ZS5saWIsaT1yLkJhc2Usbj1yLldvcmRBcnJheSxvPXIuQnVmZmVyZWRCbG9ja0FsZ29yaXRobSxzPWUuZW5jLGE9KHMuVXRmOCxzLkJhc2U2NCksaD1lLmFsZ28uRXZwS0RGLGw9ci5DaXBoZXI9by5leHRlbmQoe2NmZzppLmV4dGVuZCgpLGNyZWF0ZUVuY3J5cHRvcjpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmNyZWF0ZSh0aGlzLl9FTkNfWEZPUk1fTU9ERSx0LGUpfSxjcmVhdGVEZWNyeXB0b3I6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5jcmVhdGUodGhpcy5fREVDX1hGT1JNX01PREUsdCxlKX0saW5pdDpmdW5jdGlvbih0LGUscil7dGhpcy5jZmc9dGhpcy5jZmcuZXh0ZW5kKHIpLHRoaXMuX3hmb3JtTW9kZT10LHRoaXMuX2tleT1lLHRoaXMucmVzZXQoKX0scmVzZXQ6ZnVuY3Rpb24oKXtvLnJlc2V0LmNhbGwodGhpcyksdGhpcy5fZG9SZXNldCgpfSxwcm9jZXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9hcHBlbmQodCksdGhpcy5fcHJvY2VzcygpfSxmaW5hbGl6ZTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmdGhpcy5fYXBwZW5kKHQpLHRoaXMuX2RvRmluYWxpemUoKX0sa2V5U2l6ZTo0LGl2U2l6ZTo0LF9FTkNfWEZPUk1fTU9ERToxLF9ERUNfWEZPUk1fTU9ERToyLF9jcmVhdGVIZWxwZXI6ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD9COnl9cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybntlbmNyeXB0OmZ1bmN0aW9uKHIsaSxuKXtyZXR1cm4gdChpKS5lbmNyeXB0KGUscixpLG4pfSxkZWNyeXB0OmZ1bmN0aW9uKHIsaSxuKXtyZXR1cm4gdChpKS5kZWNyeXB0KGUscixpLG4pfX19fSgpfSksZj0oci5TdHJlYW1DaXBoZXI9bC5leHRlbmQoe19kb0ZpbmFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2Nlc3MoITApfSxibG9ja1NpemU6MX0pLGUubW9kZT17fSksdT1yLkJsb2NrQ2lwaGVyTW9kZT1pLmV4dGVuZCh7Y3JlYXRlRW5jcnlwdG9yOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuRW5jcnlwdG9yLmNyZWF0ZSh0LGUpfSxjcmVhdGVEZWNyeXB0b3I6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5EZWNyeXB0b3IuY3JlYXRlKHQsZSl9LGluaXQ6ZnVuY3Rpb24odCxlKXt0aGlzLl9jaXBoZXI9dCx0aGlzLl9pdj1lfX0pLGQ9Zi5DQkM9ZnVuY3Rpb24oKXt2YXIgdD11LmV4dGVuZCgpO2Z1bmN0aW9uIGUodCxlLHIpe3ZhciBpLG49dGhpcy5faXY7bj8oaT1uLHRoaXMuX2l2PXVuZGVmaW5lZCk6aT10aGlzLl9wcmV2QmxvY2s7Zm9yKHZhciBvPTA7bzxyO28rKyl0W2Urb11ePWlbb119cmV0dXJuIHQuRW5jcnlwdG9yPXQuZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxyKXt2YXIgaT10aGlzLl9jaXBoZXIsbj1pLmJsb2NrU2l6ZTtlLmNhbGwodGhpcyx0LHIsbiksaS5lbmNyeXB0QmxvY2sodCxyKSx0aGlzLl9wcmV2QmxvY2s9dC5zbGljZShyLHIrbil9fSksdC5EZWNyeXB0b3I9dC5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe3ZhciBpPXRoaXMuX2NpcGhlcixuPWkuYmxvY2tTaXplLG89dC5zbGljZShyLHIrbik7aS5kZWNyeXB0QmxvY2sodCxyKSxlLmNhbGwodGhpcyx0LHIsbiksdGhpcy5fcHJldkJsb2NrPW99fSksdH0oKSxwPShlLnBhZD17fSkuUGtjczc9e3BhZDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgcj00KmUsaT1yLXQuc2lnQnl0ZXMlcixvPWk8PDI0fGk8PDE2fGk8PDh8aSxzPVtdLGE9MDthPGk7YSs9NClzLnB1c2gobyk7dmFyIGM9bi5jcmVhdGUocyxpKTt0LmNvbmNhdChjKX0sdW5wYWQ6ZnVuY3Rpb24odCl7dmFyIGU9MjU1JnQud29yZHNbdC5zaWdCeXRlcy0xPj4+Ml07dC5zaWdCeXRlcy09ZX19LF89KHIuQmxvY2tDaXBoZXI9bC5leHRlbmQoe2NmZzpsLmNmZy5leHRlbmQoe21vZGU6ZCxwYWRkaW5nOnB9KSxyZXNldDpmdW5jdGlvbigpe3ZhciB0O2wucmVzZXQuY2FsbCh0aGlzKTt2YXIgZT10aGlzLmNmZyxyPWUuaXYsaT1lLm1vZGU7dGhpcy5feGZvcm1Nb2RlPT10aGlzLl9FTkNfWEZPUk1fTU9ERT90PWkuY3JlYXRlRW5jcnlwdG9yOih0PWkuY3JlYXRlRGVjcnlwdG9yLHRoaXMuX21pbkJ1ZmZlclNpemU9MSksdGhpcy5fbW9kZSYmdGhpcy5fbW9kZS5fX2NyZWF0b3I9PXQ/dGhpcy5fbW9kZS5pbml0KHRoaXMsciYmci53b3Jkcyk6KHRoaXMuX21vZGU9dC5jYWxsKGksdGhpcyxyJiZyLndvcmRzKSx0aGlzLl9tb2RlLl9fY3JlYXRvcj10KX0sX2RvUHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQsZSl7dGhpcy5fbW9kZS5wcm9jZXNzQmxvY2sodCxlKX0sX2RvRmluYWxpemU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuY2ZnLnBhZGRpbmc7cmV0dXJuIHRoaXMuX3hmb3JtTW9kZT09dGhpcy5fRU5DX1hGT1JNX01PREU/KGUucGFkKHRoaXMuX2RhdGEsdGhpcy5ibG9ja1NpemUpLHQ9dGhpcy5fcHJvY2VzcyghMCkpOih0PXRoaXMuX3Byb2Nlc3MoITApLGUudW5wYWQodCkpLHR9LGJsb2NrU2l6ZTo0fSksci5DaXBoZXJQYXJhbXM9aS5leHRlbmQoe2luaXQ6ZnVuY3Rpb24odCl7dGhpcy5taXhJbih0KX0sdG9TdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuKHR8fHRoaXMuZm9ybWF0dGVyKS5zdHJpbmdpZnkodGhpcyl9fSkpLHY9KGUuZm9ybWF0PXt9KS5PcGVuU1NMPXtzdHJpbmdpZnk6ZnVuY3Rpb24odCl7dmFyIGU9dC5jaXBoZXJ0ZXh0LHI9dC5zYWx0O3JldHVybihyP24uY3JlYXRlKFsxMzk4ODkzNjg0LDE3MDEwNzY4MzFdKS5jb25jYXQocikuY29uY2F0KGUpOmUpLnRvU3RyaW5nKGEpfSxwYXJzZTpmdW5jdGlvbih0KXt2YXIgZSxyPWEucGFyc2UodCksaT1yLndvcmRzO3JldHVybiAxMzk4ODkzNjg0PT1pWzBdJiYxNzAxMDc2ODMxPT1pWzFdJiYoZT1uLmNyZWF0ZShpLnNsaWNlKDIsNCkpLGkuc3BsaWNlKDAsNCksci5zaWdCeXRlcy09MTYpLF8uY3JlYXRlKHtjaXBoZXJ0ZXh0OnIsc2FsdDplfSl9fSx5PXIuU2VyaWFsaXphYmxlQ2lwaGVyPWkuZXh0ZW5kKHtjZmc6aS5leHRlbmQoe2Zvcm1hdDp2fSksZW5jcnlwdDpmdW5jdGlvbih0LGUscixpKXtpPXRoaXMuY2ZnLmV4dGVuZChpKTt2YXIgbj10LmNyZWF0ZUVuY3J5cHRvcihyLGkpLG89bi5maW5hbGl6ZShlKSxzPW4uY2ZnO3JldHVybiBfLmNyZWF0ZSh7Y2lwaGVydGV4dDpvLGtleTpyLGl2OnMuaXYsYWxnb3JpdGhtOnQsbW9kZTpzLm1vZGUscGFkZGluZzpzLnBhZGRpbmcsYmxvY2tTaXplOnQuYmxvY2tTaXplLGZvcm1hdHRlcjppLmZvcm1hdH0pfSxkZWNyeXB0OmZ1bmN0aW9uKHQsZSxyLGkpe3JldHVybiBpPXRoaXMuY2ZnLmV4dGVuZChpKSxlPXRoaXMuX3BhcnNlKGUsaS5mb3JtYXQpLHQuY3JlYXRlRGVjcnlwdG9yKHIsaSkuZmluYWxpemUoZS5jaXBoZXJ0ZXh0KX0sX3BhcnNlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P2UucGFyc2UodCx0aGlzKTp0fX0pLGc9KGUua2RmPXt9KS5PcGVuU1NMPXtleGVjdXRlOmZ1bmN0aW9uKHQsZSxyLGkpe2l8fChpPW4ucmFuZG9tKDgpKTt2YXIgbz1oLmNyZWF0ZSh7a2V5U2l6ZTplK3J9KS5jb21wdXRlKHQsaSkscz1uLmNyZWF0ZShvLndvcmRzLnNsaWNlKGUpLDQqcik7cmV0dXJuIG8uc2lnQnl0ZXM9NCplLF8uY3JlYXRlKHtrZXk6byxpdjpzLHNhbHQ6aX0pfX0sQj1yLlBhc3N3b3JkQmFzZWRDaXBoZXI9eS5leHRlbmQoe2NmZzp5LmNmZy5leHRlbmQoe2tkZjpnfSksZW5jcnlwdDpmdW5jdGlvbih0LGUscixpKXt2YXIgbj0oaT10aGlzLmNmZy5leHRlbmQoaSkpLmtkZi5leGVjdXRlKHIsdC5rZXlTaXplLHQuaXZTaXplKTtpLml2PW4uaXY7dmFyIG89eS5lbmNyeXB0LmNhbGwodGhpcyx0LGUsbi5rZXksaSk7cmV0dXJuIG8ubWl4SW4obiksb30sZGVjcnlwdDpmdW5jdGlvbih0LGUscixpKXtpPXRoaXMuY2ZnLmV4dGVuZChpKSxlPXRoaXMuX3BhcnNlKGUsaS5mb3JtYXQpO3ZhciBuPWkua2RmLmV4ZWN1dGUocix0LmtleVNpemUsdC5pdlNpemUsZS5zYWx0KTtyZXR1cm4gaS5pdj1uLml2LHkuZGVjcnlwdC5jYWxsKHRoaXMsdCxlLG4ua2V5LGkpfX0pfSgpLGMubW9kZS5DRkI9ZnVuY3Rpb24oKXt2YXIgdD1jLmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCk7ZnVuY3Rpb24gZSh0LGUscixpKXt2YXIgbixvPXRoaXMuX2l2O28/KG49by5zbGljZSgwKSx0aGlzLl9pdj12b2lkIDApOm49dGhpcy5fcHJldkJsb2NrLGkuZW5jcnlwdEJsb2NrKG4sMCk7Zm9yKHZhciBzPTA7czxyO3MrKyl0W2Urc11ePW5bc119cmV0dXJuIHQuRW5jcnlwdG9yPXQuZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxyKXt2YXIgaT10aGlzLl9jaXBoZXIsbj1pLmJsb2NrU2l6ZTtlLmNhbGwodGhpcyx0LHIsbixpKSx0aGlzLl9wcmV2QmxvY2s9dC5zbGljZShyLHIrbil9fSksdC5EZWNyeXB0b3I9dC5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe3ZhciBpPXRoaXMuX2NpcGhlcixuPWkuYmxvY2tTaXplLG89dC5zbGljZShyLHIrbik7ZS5jYWxsKHRoaXMsdCxyLG4saSksdGhpcy5fcHJldkJsb2NrPW99fSksdH0oKSxjLm1vZGUuQ1RSPShvPWMubGliLkJsb2NrQ2lwaGVyTW9kZS5leHRlbmQoKSxzPW8uRW5jcnlwdG9yPW8uZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLl9jaXBoZXIsaT1yLmJsb2NrU2l6ZSxuPXRoaXMuX2l2LG89dGhpcy5fY291bnRlcjtuJiYobz10aGlzLl9jb3VudGVyPW4uc2xpY2UoMCksdGhpcy5faXY9dm9pZCAwKTt2YXIgcz1vLnNsaWNlKDApO3IuZW5jcnlwdEJsb2NrKHMsMCksb1tpLTFdPW9baS0xXSsxfDA7Zm9yKHZhciBhPTA7YTxpO2ErKyl0W2UrYV1ePXNbYV19fSksby5EZWNyeXB0b3I9cyxvKSwKLyoqIEBwcmVzZXJ2ZQoJICogQ291bnRlciBibG9jayBtb2RlIGNvbXBhdGlibGUgd2l0aCAgRHIgQnJpYW4gR2xhZG1hbiBmaWxlZW5jLmMKCSAqIGRlcml2ZWQgZnJvbSBDcnlwdG9KUy5tb2RlLkNUUgoJICogSmFuIEhydWJ5IGpocnVieS53ZWJAZ21haWwuY29tCgkgKi8KYy5tb2RlLkNUUkdsYWRtYW49ZnVuY3Rpb24oKXt2YXIgdD1jLmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCk7ZnVuY3Rpb24gZSh0KXtpZigyNTU9PSh0Pj4yNCYyNTUpKXt2YXIgZT10Pj4xNiYyNTUscj10Pj44JjI1NSxpPTI1NSZ0OzI1NT09PWU/KGU9MCwyNTU9PT1yPyhyPTAsMjU1PT09aT9pPTA6KytpKTorK3IpOisrZSx0PTAsdCs9ZTw8MTYsdCs9cjw8OCx0Kz1pfWVsc2UgdCs9MTw8MjQ7cmV0dXJuIHR9dmFyIHI9dC5FbmNyeXB0b3I9dC5leHRlbmQoe3Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LHIpe3ZhciBpPXRoaXMuX2NpcGhlcixuPWkuYmxvY2tTaXplLG89dGhpcy5faXYscz10aGlzLl9jb3VudGVyO28mJihzPXRoaXMuX2NvdW50ZXI9by5zbGljZSgwKSx0aGlzLl9pdj12b2lkIDApLGZ1bmN0aW9uKHQpezA9PT0odFswXT1lKHRbMF0pKSYmKHRbMV09ZSh0WzFdKSl9KHMpO3ZhciBhPXMuc2xpY2UoMCk7aS5lbmNyeXB0QmxvY2soYSwwKTtmb3IodmFyIGM9MDtjPG47YysrKXRbcitjXV49YVtjXX19KTtyZXR1cm4gdC5EZWNyeXB0b3I9cix0fSgpLGMubW9kZS5PRkI9ZnVuY3Rpb24oKXt2YXIgdD1jLmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCksZT10LkVuY3J5cHRvcj10LmV4dGVuZCh7cHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5fY2lwaGVyLGk9ci5ibG9ja1NpemUsbj10aGlzLl9pdixvPXRoaXMuX2tleXN0cmVhbTtuJiYobz10aGlzLl9rZXlzdHJlYW09bi5zbGljZSgwKSx0aGlzLl9pdj12b2lkIDApLHIuZW5jcnlwdEJsb2NrKG8sMCk7Zm9yKHZhciBzPTA7czxpO3MrKyl0W2Urc11ePW9bc119fSk7cmV0dXJuIHQuRGVjcnlwdG9yPWUsdH0oKSxjLm1vZGUuRUNCPSgoYT1jLmxpYi5CbG9ja0NpcGhlck1vZGUuZXh0ZW5kKCkpLkVuY3J5cHRvcj1hLmV4dGVuZCh7cHJvY2Vzc0Jsb2NrOmZ1bmN0aW9uKHQsZSl7dGhpcy5fY2lwaGVyLmVuY3J5cHRCbG9jayh0LGUpfX0pLGEuRGVjcnlwdG9yPWEuZXh0ZW5kKHtwcm9jZXNzQmxvY2s6ZnVuY3Rpb24odCxlKXt0aGlzLl9jaXBoZXIuZGVjcnlwdEJsb2NrKHQsZSl9fSksYSksYy5wYWQuQW5zaVg5MjM9e3BhZDpmdW5jdGlvbih0LGUpe3ZhciByPXQuc2lnQnl0ZXMsaT00KmUsbj1pLXIlaSxvPXIrbi0xO3QuY2xhbXAoKSx0LndvcmRzW28+Pj4yXXw9bjw8MjQtbyU0KjgsdC5zaWdCeXRlcys9bn0sdW5wYWQ6ZnVuY3Rpb24odCl7dmFyIGU9MjU1JnQud29yZHNbdC5zaWdCeXRlcy0xPj4+Ml07dC5zaWdCeXRlcy09ZX19LGMucGFkLklzbzEwMTI2PXtwYWQ6ZnVuY3Rpb24odCxlKXt2YXIgcj00KmUsaT1yLXQuc2lnQnl0ZXMlcjt0LmNvbmNhdChjLmxpYi5Xb3JkQXJyYXkucmFuZG9tKGktMSkpLmNvbmNhdChjLmxpYi5Xb3JkQXJyYXkuY3JlYXRlKFtpPDwyNF0sMSkpfSx1bnBhZDpmdW5jdGlvbih0KXt2YXIgZT0yNTUmdC53b3Jkc1t0LnNpZ0J5dGVzLTE+Pj4yXTt0LnNpZ0J5dGVzLT1lfX0sYy5wYWQuSXNvOTc5NzE9e3BhZDpmdW5jdGlvbih0LGUpe3QuY29uY2F0KGMubGliLldvcmRBcnJheS5jcmVhdGUoWzIxNDc0ODM2NDhdLDEpKSxjLnBhZC5aZXJvUGFkZGluZy5wYWQodCxlKX0sdW5wYWQ6ZnVuY3Rpb24odCl7Yy5wYWQuWmVyb1BhZGRpbmcudW5wYWQodCksdC5zaWdCeXRlcy0tfX0sYy5wYWQuWmVyb1BhZGRpbmc9e3BhZDpmdW5jdGlvbih0LGUpe3ZhciByPTQqZTt0LmNsYW1wKCksdC5zaWdCeXRlcys9ci0odC5zaWdCeXRlcyVyfHxyKX0sdW5wYWQ6ZnVuY3Rpb24odCl7dmFyIGU9dC53b3JkcyxyPXQuc2lnQnl0ZXMtMTtmb3Iocj10LnNpZ0J5dGVzLTE7cj49MDtyLS0paWYoZVtyPj4+Ml0+Pj4yNC1yJTQqOCYyNTUpe3Quc2lnQnl0ZXM9cisxO2JyZWFrfX19LGMucGFkLk5vUGFkZGluZz17cGFkOmZ1bmN0aW9uKCl7fSx1bnBhZDpmdW5jdGlvbigpe319LGZ1bmN0aW9uKHQpe3ZhciBlPWMscj1lLmxpYi5DaXBoZXJQYXJhbXMsaT1lLmVuYy5IZXg7ZS5mb3JtYXQuSGV4PXtzdHJpbmdpZnk6ZnVuY3Rpb24odCl7cmV0dXJuIHQuY2lwaGVydGV4dC50b1N0cmluZyhpKX0scGFyc2U6ZnVuY3Rpb24odCl7dmFyIGU9aS5wYXJzZSh0KTtyZXR1cm4gci5jcmVhdGUoe2NpcGhlcnRleHQ6ZX0pfX19KCksZnVuY3Rpb24oKXt2YXIgdD1jLGU9dC5saWIuQmxvY2tDaXBoZXIscj10LmFsZ28saT1bXSxuPVtdLG89W10scz1bXSxhPVtdLGg9W10sbD1bXSxmPVtdLHU9W10sZD1bXTshZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8MjU2O2UrKyl0W2VdPWU8MTI4P2U8PDE6ZTw8MV4yODM7dmFyIHI9MCxjPTA7Zm9yKGU9MDtlPDI1NjtlKyspe3ZhciBwPWNeYzw8MV5jPDwyXmM8PDNeYzw8NDtwPXA+Pj44XjI1NSZwXjk5LGlbcl09cCxuW3BdPXI7dmFyIF89dFtyXSx2PXRbX10seT10W3ZdLGc9MjU3KnRbcF1eMTY4NDMwMDgqcDtvW3JdPWc8PDI0fGc+Pj44LHNbcl09Zzw8MTZ8Zz4+PjE2LGFbcl09Zzw8OHxnPj4+MjQsaFtyXT1nO2c9MTY4NDMwMDkqeV42NTUzNyp2XjI1NypfXjE2ODQzMDA4KnI7bFtwXT1nPDwyNHxnPj4+OCxmW3BdPWc8PDE2fGc+Pj4xNix1W3BdPWc8PDh8Zz4+PjI0LGRbcF09ZyxyPyhyPV9edFt0W3RbeV5fXV1dLGNePXRbdFtjXV0pOnI9Yz0xfX0oKTt2YXIgcD1bMCwxLDIsNCw4LDE2LDMyLDY0LDEyOCwyNyw1NF0sXz1yLkFFUz1lLmV4dGVuZCh7X2RvUmVzZXQ6ZnVuY3Rpb24oKXtpZighdGhpcy5fblJvdW5kc3x8dGhpcy5fa2V5UHJpb3JSZXNldCE9PXRoaXMuX2tleSl7Zm9yKHZhciB0PXRoaXMuX2tleVByaW9yUmVzZXQ9dGhpcy5fa2V5LGU9dC53b3JkcyxyPXQuc2lnQnl0ZXMvNCxuPTQqKCh0aGlzLl9uUm91bmRzPXIrNikrMSksbz10aGlzLl9rZXlTY2hlZHVsZT1bXSxzPTA7czxuO3MrKylzPHI/b1tzXT1lW3NdOihoPW9bcy0xXSxzJXI/cj42JiZzJXI9PTQmJihoPWlbaD4+PjI0XTw8MjR8aVtoPj4+MTYmMjU1XTw8MTZ8aVtoPj4+OCYyNTVdPDw4fGlbMjU1JmhdKTooaD1pWyhoPWg8PDh8aD4+PjI0KT4+PjI0XTw8MjR8aVtoPj4+MTYmMjU1XTw8MTZ8aVtoPj4+OCYyNTVdPDw4fGlbMjU1JmhdLGhePXBbcy9yfDBdPDwyNCksb1tzXT1vW3Mtcl1eaCk7Zm9yKHZhciBhPXRoaXMuX2ludktleVNjaGVkdWxlPVtdLGM9MDtjPG47YysrKXtzPW4tYztpZihjJTQpdmFyIGg9b1tzXTtlbHNlIGg9b1tzLTRdO2FbY109Yzw0fHxzPD00P2g6bFtpW2g+Pj4yNF1dXmZbaVtoPj4+MTYmMjU1XV1edVtpW2g+Pj44JjI1NV1dXmRbaVsyNTUmaF1dfX19LGVuY3J5cHRCbG9jazpmdW5jdGlvbih0LGUpe3RoaXMuX2RvQ3J5cHRCbG9jayh0LGUsdGhpcy5fa2V5U2NoZWR1bGUsbyxzLGEsaCxpKX0sZGVjcnlwdEJsb2NrOmZ1bmN0aW9uKHQsZSl7dmFyIHI9dFtlKzFdO3RbZSsxXT10W2UrM10sdFtlKzNdPXIsdGhpcy5fZG9DcnlwdEJsb2NrKHQsZSx0aGlzLl9pbnZLZXlTY2hlZHVsZSxsLGYsdSxkLG4pO3I9dFtlKzFdO3RbZSsxXT10W2UrM10sdFtlKzNdPXJ9LF9kb0NyeXB0QmxvY2s6ZnVuY3Rpb24odCxlLHIsaSxuLG8scyxhKXtmb3IodmFyIGM9dGhpcy5fblJvdW5kcyxoPXRbZV1eclswXSxsPXRbZSsxXV5yWzFdLGY9dFtlKzJdXnJbMl0sdT10W2UrM11eclszXSxkPTQscD0xO3A8YztwKyspe3ZhciBfPWlbaD4+PjI0XV5uW2w+Pj4xNiYyNTVdXm9bZj4+PjgmMjU1XV5zWzI1NSZ1XV5yW2QrK10sdj1pW2w+Pj4yNF1ebltmPj4+MTYmMjU1XV5vW3U+Pj44JjI1NV1ec1syNTUmaF1ecltkKytdLHk9aVtmPj4+MjRdXm5bdT4+PjE2JjI1NV1eb1toPj4+OCYyNTVdXnNbMjU1JmxdXnJbZCsrXSxnPWlbdT4+PjI0XV5uW2g+Pj4xNiYyNTVdXm9bbD4+PjgmMjU1XV5zWzI1NSZmXV5yW2QrK107aD1fLGw9dixmPXksdT1nfV89KGFbaD4+PjI0XTw8MjR8YVtsPj4+MTYmMjU1XTw8MTZ8YVtmPj4+OCYyNTVdPDw4fGFbMjU1JnVdKV5yW2QrK10sdj0oYVtsPj4+MjRdPDwyNHxhW2Y+Pj4xNiYyNTVdPDwxNnxhW3U+Pj44JjI1NV08PDh8YVsyNTUmaF0pXnJbZCsrXSx5PShhW2Y+Pj4yNF08PDI0fGFbdT4+PjE2JjI1NV08PDE2fGFbaD4+PjgmMjU1XTw8OHxhWzI1NSZsXSlecltkKytdLGc9KGFbdT4+PjI0XTw8MjR8YVtoPj4+MTYmMjU1XTw8MTZ8YVtsPj4+OCYyNTVdPDw4fGFbMjU1JmZdKV5yW2QrK107dFtlXT1fLHRbZSsxXT12LHRbZSsyXT15LHRbZSszXT1nfSxrZXlTaXplOjh9KTt0LkFFUz1lLl9jcmVhdGVIZWxwZXIoXyl9KCksZnVuY3Rpb24oKXt2YXIgdD1jLGU9dC5saWIscj1lLldvcmRBcnJheSxpPWUuQmxvY2tDaXBoZXIsbj10LmFsZ28sbz1bNTcsNDksNDEsMzMsMjUsMTcsOSwxLDU4LDUwLDQyLDM0LDI2LDE4LDEwLDIsNTksNTEsNDMsMzUsMjcsMTksMTEsMyw2MCw1Miw0NCwzNiw2Myw1NSw0NywzOSwzMSwyMywxNSw3LDYyLDU0LDQ2LDM4LDMwLDIyLDE0LDYsNjEsNTMsNDUsMzcsMjksMjEsMTMsNSwyOCwyMCwxMiw0XSxzPVsxNCwxNywxMSwyNCwxLDUsMywyOCwxNSw2LDIxLDEwLDIzLDE5LDEyLDQsMjYsOCwxNiw3LDI3LDIwLDEzLDIsNDEsNTIsMzEsMzcsNDcsNTUsMzAsNDAsNTEsNDUsMzMsNDgsNDQsNDksMzksNTYsMzQsNTMsNDYsNDIsNTAsMzYsMjksMzJdLGE9WzEsMiw0LDYsOCwxMCwxMiwxNCwxNSwxNywxOSwyMSwyMywyNSwyNywyOF0saD1bezA6ODQyMTg4OCwyNjg0MzU0NTY6MzI3NjgsNTM2ODcwOTEyOjg0MjEzNzgsODA1MzA2MzY4OjIsMTA3Mzc0MTgyNDo1MTIsMTM0MjE3NzI4MDo4NDIxODkwLDE2MTA2MTI3MzY6ODM4OTEyMiwxODc5MDQ4MTkyOjgzODg2MDgsMjE0NzQ4MzY0ODo1MTQsMjQxNTkxOTEwNDo4Mzg5MTIwLDI2ODQzNTQ1NjA6MzMyODAsMjk1Mjc5MDAxNjo4NDIxMzc2LDMyMjEyMjU0NzI6MzI3NzAsMzQ4OTY2MDkyODo4Mzg4NjEwLDM3NTgwOTYzODQ6MCw0MDI2NTMxODQwOjMzMjgyLDEzNDIxNzcyODowLDQwMjY1MzE4NDo4NDIxODkwLDY3MTA4ODY0MDozMzI4Miw5Mzk1MjQwOTY6MzI3NjgsMTIwNzk1OTU1Mjo4NDIxODg4LDE0NzYzOTUwMDg6NTEyLDE3NDQ4MzA0NjQ6ODQyMTM3OCwyMDEzMjY1OTIwOjIsMjI4MTcwMTM3Njo4Mzg5MTIwLDI1NTAxMzY4MzI6MzMyODAsMjgxODU3MjI4ODo4NDIxMzc2LDMwODcwMDc3NDQ6ODM4OTEyMiwzMzU1NDQzMjAwOjgzODg2MTAsMzYyMzg3ODY1NjozMjc3MCwzODkyMzE0MTEyOjUxNCw0MTYwNzQ5NTY4OjgzODg2MDgsMTozMjc2OCwyNjg0MzU0NTc6Miw1MzY4NzA5MTM6ODQyMTg4OCw4MDUzMDYzNjk6ODM4ODYwOCwxMDczNzQxODI1Ojg0MjEzNzgsMTM0MjE3NzI4MTozMzI4MCwxNjEwNjEyNzM3OjUxMiwxODc5MDQ4MTkzOjgzODkxMjIsMjE0NzQ4MzY0OTo4NDIxODkwLDI0MTU5MTkxMDU6ODQyMTM3NiwyNjg0MzU0NTYxOjgzODg2MTAsMjk1Mjc5MDAxNzozMzI4MiwzMjIxMjI1NDczOjUxNCwzNDg5NjYwOTI5OjgzODkxMjAsMzc1ODA5NjM4NTozMjc3MCw0MDI2NTMxODQxOjAsMTM0MjE3NzI5Ojg0MjE4OTAsNDAyNjUzMTg1Ojg0MjEzNzYsNjcxMDg4NjQxOjgzODg2MDgsOTM5NTI0MDk3OjUxMiwxMjA3OTU5NTUzOjMyNzY4LDE0NzYzOTUwMDk6ODM4ODYxMCwxNzQ0ODMwNDY1OjIsMjAxMzI2NTkyMTozMzI4MiwyMjgxNzAxMzc3OjMyNzcwLDI1NTAxMzY4MzM6ODM4OTEyMiwyODE4NTcyMjg5OjUxNCwzMDg3MDA3NzQ1Ojg0MjE4ODgsMzM1NTQ0MzIwMTo4Mzg5MTIwLDM2MjM4Nzg2NTc6MCwzODkyMzE0MTEzOjMzMjgwLDQxNjA3NDk1Njk6ODQyMTM3OH0sezA6MTA3NDI4MjUxMiwxNjc3NzIxNjoxNjM4NCwzMzU1NDQzMjo1MjQyODgsNTAzMzE2NDg6MTA3NDI2NjEyOCw2NzEwODg2NDoxMDczNzQxODQwLDgzODg2MDgwOjEwNzQyODI0OTYsMTAwNjYzMjk2OjEwNzM3NTgyMDgsMTE3NDQwNTEyOjE2LDEzNDIxNzcyODo1NDA2NzIsMTUwOTk0OTQ0OjEwNzM3NTgyMjQsMTY3NzcyMTYwOjEwNzM3NDE4MjQsMTg0NTQ5Mzc2OjU0MDY4OCwyMDEzMjY1OTI6NTI0MzA0LDIxODEwMzgwODowLDIzNDg4MTAyNDoxNjQwMCwyNTE2NTgyNDA6MTA3NDI2NjExMiw4Mzg4NjA4OjEwNzM3NTgyMDgsMjUxNjU4MjQ6NTQwNjg4LDQxOTQzMDQwOjE2LDU4NzIwMjU2OjEwNzM3NTgyMjQsNzU0OTc0NzI6MTA3NDI4MjUxMiw5MjI3NDY4ODoxMDczNzQxODI0LDEwOTA1MTkwNDo1MjQyODgsMTI1ODI5MTIwOjEwNzQyNjYxMjgsMTQyNjA2MzM2OjUyNDMwNCwxNTkzODM1NTI6MCwxNzYxNjA3Njg6MTYzODQsMTkyOTM3OTg0OjEwNzQyNjYxMTIsMjA5NzE1MjAwOjEwNzM3NDE4NDAsMjI2NDkyNDE2OjU0MDY3MiwyNDMyNjk2MzI6MTA3NDI4MjQ5NiwyNjAwNDY4NDg6MTY0MDAsMjY4NDM1NDU2OjAsMjg1MjEyNjcyOjEwNzQyNjYxMjgsMzAxOTg5ODg4OjEwNzM3NTgyMjQsMzE4NzY3MTA0OjEwNzQyODI0OTYsMzM1NTQ0MzIwOjEwNzQyNjYxMTIsMzUyMzIxNTM2OjE2LDM2OTA5ODc1Mjo1NDA2ODgsMzg1ODc1OTY4OjE2Mzg0LDQwMjY1MzE4NDoxNjQwMCw0MTk0MzA0MDA6NTI0Mjg4LDQzNjIwNzYxNjo1MjQzMDQsNDUyOTg0ODMyOjEwNzM3NDE4NDAsNDY5NzYyMDQ4OjU0MDY3Miw0ODY1MzkyNjQ6MTA3Mzc1ODIwOCw1MDMzMTY0ODA6MTA3Mzc0MTgyNCw1MjAwOTM2OTY6MTA3NDI4MjUxMiwyNzY4MjQwNjQ6NTQwNjg4LDI5MzYwMTI4MDo1MjQyODgsMzEwMzc4NDk2OjEwNzQyNjYxMTIsMzI3MTU1NzEyOjE2Mzg0LDM0MzkzMjkyODoxMDczNzU4MjA4LDM2MDcxMDE0NDoxMDc0MjgyNTEyLDM3NzQ4NzM2MDoxNiwzOTQyNjQ1NzY6MTA3Mzc0MTgyNCw0MTEwNDE3OTI6MTA3NDI4MjQ5Niw0Mjc4MTkwMDg6MTA3Mzc0MTg0MCw0NDQ1OTYyMjQ6MTA3Mzc1ODIyNCw0NjEzNzM0NDA6NTI0MzA0LDQ3ODE1MDY1NjowLDQ5NDkyNzg3MjoxNjQwMCw1MTE3MDUwODg6MTA3NDI2NjEyOCw1Mjg0ODIzMDQ6NTQwNjcyfSx7MDoyNjAsMTA0ODU3NjowLDIwOTcxNTI6NjcxMDkxMjAsMzE0NTcyODo2NTc5Niw0MTk0MzA0OjY1NTQwLDUyNDI4ODA6NjcxMDg4NjgsNjI5MTQ1Njo2NzE3NDY2MCw3MzQwMDMyOjY3MTc0NDAwLDgzODg2MDg6NjcxMDg4NjQsOTQzNzE4NDo2NzE3NDY1NiwxMDQ4NTc2MDo2NTc5MiwxMTUzNDMzNjo2NzE3NDQwNCwxMjU4MjkxMjo2NzEwOTEyNCwxMzYzMTQ4ODo2NTUzNiwxNDY4MDA2NDo0LDE1NzI4NjQwOjI1Niw1MjQyODg6NjcxNzQ2NTYsMTU3Mjg2NDo2NzE3NDQwNCwyNjIxNDQwOjAsMzY3MDAxNjo2NzEwOTEyMCw0NzE4NTkyOjY3MTA4ODY4LDU3NjcxNjg6NjU1MzYsNjgxNTc0NDo2NTU0MCw3ODY0MzIwOjI2MCw4OTEyODk2OjQsOTk2MTQ3MjoyNTYsMTEwMTAwNDg6NjcxNzQ0MDAsMTIwNTg2MjQ6NjU3OTYsMTMxMDcyMDA6NjU3OTIsMTQxNTU3NzY6NjcxMDkxMjQsMTUyMDQzNTI6NjcxNzQ2NjAsMTYyNTI5Mjg6NjcxMDg4NjQsMTY3NzcyMTY6NjcxNzQ2NTYsMTc4MjU3OTI6NjU1NDAsMTg4NzQzNjg6NjU1MzYsMTk5MjI5NDQ6NjcxMDkxMjAsMjA5NzE1MjA6MjU2LDIyMDIwMDk2OjY3MTc0NjYwLDIzMDY4NjcyOjY3MTA4ODY4LDI0MTE3MjQ4OjAsMjUxNjU4MjQ6NjcxMDkxMjQsMjYyMTQ0MDA6NjcxMDg4NjQsMjcyNjI5NzY6NCwyODMxMTU1Mjo2NTc5MiwyOTM2MDEyODo2NzE3NDQwMCwzMDQwODcwNDoyNjAsMzE0NTcyODA6NjU3OTYsMzI1MDU4NTY6NjcxNzQ0MDQsMTczMDE1MDQ6NjcxMDg4NjQsMTgzNTAwODA6MjYwLDE5Mzk4NjU2OjY3MTc0NjU2LDIwNDQ3MjMyOjAsMjE0OTU4MDg6NjU1NDAsMjI1NDQzODQ6NjcxMDkxMjAsMjM1OTI5NjA6MjU2LDI0NjQxNTM2OjY3MTc0NDA0LDI1NjkwMTEyOjY1NTM2LDI2NzM4Njg4OjY3MTc0NjYwLDI3Nzg3MjY0OjY1Nzk2LDI4ODM1ODQwOjY3MTA4ODY4LDI5ODg0NDE2OjY3MTA5MTI0LDMwOTMyOTkyOjY3MTc0NDAwLDMxOTgxNTY4OjQsMzMwMzAxNDQ6NjU3OTJ9LHswOjIxNTE2ODIwNDgsNjU1MzY6MjE0NzQ4NzgwOCwxMzEwNzI6NDE5ODQ2NCwxOTY2MDg6MjE1MTY3Nzk1MiwyNjIxNDQ6MCwzMjc2ODA6NDE5ODQwMCwzOTMyMTY6MjE0NzQ4MzcxMiw0NTg3NTI6NDE5NDM2OCw1MjQyODg6MjE0NzQ4MzY0OCw1ODk4MjQ6NDE5NDMwNCw2NTUzNjA6NjQsNzIwODk2OjIxNDc0ODc3NDQsNzg2NDMyOjIxNTE2NzgwMTYsODUxOTY4OjQxNjAsOTE3NTA0OjQwOTYsOTgzMDQwOjIxNTE2ODIxMTIsMzI3Njg6MjE0NzQ4NzgwOCw5ODMwNDo2NCwxNjM4NDA6MjE1MTY3ODAxNiwyMjkzNzY6MjE0NzQ4Nzc0NCwyOTQ5MTI6NDE5ODQwMCwzNjA0NDg6MjE1MTY4MjExMiw0MjU5ODQ6MCw0OTE1MjA6MjE1MTY3Nzk1Miw1NTcwNTY6NDA5Niw2MjI1OTI6MjE1MTY4MjA0OCw2ODgxMjg6NDE5NDMwNCw3NTM2NjQ6NDE2MCw4MTkyMDA6MjE0NzQ4MzY0OCw4ODQ3MzY6NDE5NDM2OCw5NTAyNzI6NDE5ODQ2NCwxMDE1ODA4OjIxNDc0ODM3MTIsMTA0ODU3Njo0MTk0MzY4LDExMTQxMTI6NDE5ODQwMCwxMTc5NjQ4OjIxNDc0ODM3MTIsMTI0NTE4NDowLDEzMTA3MjA6NDE2MCwxMzc2MjU2OjIxNTE2NzgwMTYsMTQ0MTc5MjoyMTUxNjgyMDQ4LDE1MDczMjg6MjE0NzQ4NzgwOCwxNTcyODY0OjIxNTE2ODIxMTIsMTYzODQwMDoyMTQ3NDgzNjQ4LDE3MDM5MzY6MjE1MTY3Nzk1MiwxNzY5NDcyOjQxOTg0NjQsMTgzNTAwODoyMTQ3NDg3NzQ0LDE5MDA1NDQ6NDE5NDMwNCwxOTY2MDgwOjY0LDIwMzE2MTY6NDA5NiwxMDgxMzQ0OjIxNTE2Nzc5NTIsMTE0Njg4MDoyMTUxNjgyMTEyLDEyMTI0MTY6MCwxMjc3OTUyOjQxOTg0MDAsMTM0MzQ4ODo0MTk0MzY4LDE0MDkwMjQ6MjE0NzQ4MzY0OCwxNDc0NTYwOjIxNDc0ODc4MDgsMTU0MDA5Njo2NCwxNjA1NjMyOjIxNDc0ODM3MTIsMTY3MTE2ODo0MDk2LDE3MzY3MDQ6MjE0NzQ4Nzc0NCwxODAyMjQwOjIxNTE2NzgwMTYsMTg2Nzc3Njo0MTYwLDE5MzMzMTI6MjE1MTY4MjA0OCwxOTk4ODQ4OjQxOTQzMDQsMjA2NDM4NDo0MTk4NDY0fSx7MDoxMjgsNDA5NjoxNzAzOTM2MCw4MTkyOjI2MjE0NCwxMjI4ODo1MzY4NzA5MTIsMTYzODQ6NTM3MTMzMTg0LDIwNDgwOjE2Nzc3MzQ0LDI0NTc2OjU1MzY0ODI1NiwyODY3MjoyNjIyNzIsMzI3Njg6MTY3NzcyMTYsMzY4NjQ6NTM3MTMzMDU2LDQwOTYwOjUzNjg3MTA0MCw0NTA1Njo1NTM5MTA0MDAsNDkxNTI6NTUzOTEwMjcyLDUzMjQ4OjAsNTczNDQ6MTcwMzk0ODgsNjE0NDA6NTUzNjQ4MTI4LDIwNDg6MTcwMzk0ODgsNjE0NDo1NTM2NDgyNTYsMTAyNDA6MTI4LDE0MzM2OjE3MDM5MzYwLDE4NDMyOjI2MjE0NCwyMjUyODo1MzcxMzMxODQsMjY2MjQ6NTUzOTEwMjcyLDMwNzIwOjUzNjg3MDkxMiwzNDgxNjo1MzcxMzMwNTYsMzg5MTI6MCw0MzAwODo1NTM5MTA0MDAsNDcxMDQ6MTY3NzczNDQsNTEyMDA6NTM2ODcxMDQwLDU1Mjk2OjU1MzY0ODEyOCw1OTM5MjoxNjc3NzIxNiw2MzQ4ODoyNjIyNzIsNjU1MzY6MjYyMTQ0LDY5NjMyOjEyOCw3MzcyODo1MzY4NzA5MTIsNzc4MjQ6NTUzNjQ4MjU2LDgxOTIwOjE2Nzc3MzQ0LDg2MDE2OjU1MzkxMDI3Miw5MDExMjo1MzcxMzMxODQsOTQyMDg6MTY3NzcyMTYsOTgzMDQ6NTUzOTEwNDAwLDEwMjQwMDo1NTM2NDgxMjgsMTA2NDk2OjE3MDM5MzYwLDExMDU5Mjo1MzcxMzMwNTYsMTE0Njg4OjI2MjI3MiwxMTg3ODQ6NTM2ODcxMDQwLDEyMjg4MDowLDEyNjk3NjoxNzAzOTQ4OCw2NzU4NDo1NTM2NDgyNTYsNzE2ODA6MTY3NzcyMTYsNzU3NzY6MTcwMzkzNjAsNzk4NzI6NTM3MTMzMTg0LDgzOTY4OjUzNjg3MDkxMiw4ODA2NDoxNzAzOTQ4OCw5MjE2MDoxMjgsOTYyNTY6NTUzOTEwMjcyLDEwMDM1MjoyNjIyNzIsMTA0NDQ4OjU1MzkxMDQwMCwxMDg1NDQ6MCwxMTI2NDA6NTUzNjQ4MTI4LDExNjczNjoxNjc3NzM0NCwxMjA4MzI6MjYyMTQ0LDEyNDkyODo1MzcxMzMwNTYsMTI5MDI0OjUzNjg3MTA0MH0sezA6MjY4NDM1NDY0LDI1Njo4MTkyLDUxMjoyNzA1MzI2MDgsNzY4OjI3MDU0MDgwOCwxMDI0OjI2ODQ0MzY0OCwxMjgwOjIwOTcxNTIsMTUzNjoyMDk3MTYwLDE3OTI6MjY4NDM1NDU2LDIwNDg6MCwyMzA0OjI2ODQ0MzY1NiwyNTYwOjIxMDUzNDQsMjgxNjo4LDMwNzI6MjcwNTMyNjE2LDMzMjg6MjEwNTM1MiwzNTg0OjgyMDAsMzg0MDoyNzA1NDA4MDAsMTI4OjI3MDUzMjYwOCwzODQ6MjcwNTQwODA4LDY0MDo4LDg5NjoyMDk3MTUyLDExNTI6MjEwNTM1MiwxNDA4OjI2ODQzNTQ2NCwxNjY0OjI2ODQ0MzY0OCwxOTIwOjgyMDAsMjE3NjoyMDk3MTYwLDI0MzI6ODE5MiwyNjg4OjI2ODQ0MzY1NiwyOTQ0OjI3MDUzMjYxNiwzMjAwOjAsMzQ1NjoyNzA1NDA4MDAsMzcxMjoyMTA1MzQ0LDM5Njg6MjY4NDM1NDU2LDQwOTY6MjY4NDQzNjQ4LDQzNTI6MjcwNTMyNjE2LDQ2MDg6MjcwNTQwODA4LDQ4NjQ6ODIwMCw1MTIwOjIwOTcxNTIsNTM3NjoyNjg0MzU0NTYsNTYzMjoyNjg0MzU0NjQsNTg4ODoyMTA1MzQ0LDYxNDQ6MjEwNTM1Miw2NDAwOjAsNjY1Njo4LDY5MTI6MjcwNTMyNjA4LDcxNjg6ODE5Miw3NDI0OjI2ODQ0MzY1Niw3NjgwOjI3MDU0MDgwMCw3OTM2OjIwOTcxNjAsNDIyNDo4LDQ0ODA6MjEwNTM0NCw0NzM2OjIwOTcxNTIsNDk5MjoyNjg0MzU0NjQsNTI0ODoyNjg0NDM2NDgsNTUwNDo4MjAwLDU3NjA6MjcwNTQwODA4LDYwMTY6MjcwNTMyNjA4LDYyNzI6MjcwNTQwODAwLDY1Mjg6MjcwNTMyNjE2LDY3ODQ6ODE5Miw3MDQwOjIxMDUzNTIsNzI5NjoyMDk3MTYwLDc1NTI6MCw3ODA4OjI2ODQzNTQ1Niw4MDY0OjI2ODQ0MzY1Nn0sezA6MTA0ODU3NiwxNjozMzU1NTQ1NywzMjoxMDI0LDQ4OjEwNDk2MDEsNjQ6MzQ2MDQwMzMsODA6MCw5NjoxLDExMjozNDYwMzAwOSwxMjg6MzM1NTU0NTYsMTQ0OjEwNDg1NzcsMTYwOjMzNTU0NDMzLDE3NjozNDYwNDAzMiwxOTI6MzQ2MDMwMDgsMjA4OjEwMjUsMjI0OjEwNDk2MDAsMjQwOjMzNTU0NDMyLDg6MzQ2MDMwMDksMjQ6MCw0MDozMzU1NTQ1Nyw1NjozNDYwNDAzMiw3MjoxMDQ4NTc2LDg4OjMzNTU0NDMzLDEwNDozMzU1NDQzMiwxMjA6MTAyNSwxMzY6MTA0OTYwMSwxNTI6MzM1NTU0NTYsMTY4OjM0NjAzMDA4LDE4NDoxMDQ4NTc3LDIwMDoxMDI0LDIxNjozNDYwNDAzMywyMzI6MSwyNDg6MTA0OTYwMCwyNTY6MzM1NTQ0MzIsMjcyOjEwNDg1NzYsMjg4OjMzNTU1NDU3LDMwNDozNDYwMzAwOSwzMjA6MTA0ODU3NywzMzY6MzM1NTU0NTYsMzUyOjM0NjA0MDMyLDM2ODoxMDQ5NjAxLDM4NDoxMDI1LDQwMDozNDYwNDAzMyw0MTY6MTA0OTYwMCw0MzI6MSw0NDg6MCw0NjQ6MzQ2MDMwMDgsNDgwOjMzNTU0NDMzLDQ5NjoxMDI0LDI2NDoxMDQ5NjAwLDI4MDozMzU1NTQ1NywyOTY6MzQ2MDMwMDksMzEyOjEsMzI4OjMzNTU0NDMyLDM0NDoxMDQ4NTc2LDM2MDoxMDI1LDM3NjozNDYwNDAzMiwzOTI6MzM1NTQ0MzMsNDA4OjM0NjAzMDA4LDQyNDowLDQ0MDozNDYwNDAzMyw0NTY6MTA0OTYwMSw0NzI6MTAyNCw0ODg6MzM1NTU0NTYsNTA0OjEwNDg1Nzd9LHswOjEzNDIxOTgwOCwxOjEzMTA3MiwyOjEzNDIxNzcyOCwzOjMyLDQ6MTMxMTA0LDU6MTM0MzUwODgwLDY6MTM0MzUwODQ4LDc6MjA0OCw4OjEzNDM0ODgwMCw5OjEzNDIxOTc3NiwxMDoxMzMxMjAsMTE6MTM0MzQ4ODMyLDEyOjIwODAsMTM6MCwxNDoxMzQyMTc3NjAsMTU6MTMzMTUyLDIxNDc0ODM2NDg6MjA0OCwyMTQ3NDgzNjQ5OjEzNDM1MDg4MCwyMTQ3NDgzNjUwOjEzNDIxOTgwOCwyMTQ3NDgzNjUxOjEzNDIxNzcyOCwyMTQ3NDgzNjUyOjEzNDM0ODgwMCwyMTQ3NDgzNjUzOjEzMzEyMCwyMTQ3NDgzNjU0OjEzMzE1MiwyMTQ3NDgzNjU1OjMyLDIxNDc0ODM2NTY6MTM0MjE3NzYwLDIxNDc0ODM2NTc6MjA4MCwyMTQ3NDgzNjU4OjEzMTEwNCwyMTQ3NDgzNjU5OjEzNDM1MDg0OCwyMTQ3NDgzNjYwOjAsMjE0NzQ4MzY2MToxMzQzNDg4MzIsMjE0NzQ4MzY2MjoxMzQyMTk3NzYsMjE0NzQ4MzY2MzoxMzEwNzIsMTY6MTMzMTUyLDE3OjEzNDM1MDg0OCwxODozMiwxOToyMDQ4LDIwOjEzNDIxOTc3NiwyMToxMzQyMTc3NjAsMjI6MTM0MzQ4ODMyLDIzOjEzMTA3MiwyNDowLDI1OjEzMTEwNCwyNjoxMzQzNDg4MDAsMjc6MTM0MjE5ODA4LDI4OjEzNDM1MDg4MCwyOToxMzMxMjAsMzA6MjA4MCwzMToxMzQyMTc3MjgsMjE0NzQ4MzY2NDoxMzEwNzIsMjE0NzQ4MzY2NToyMDQ4LDIxNDc0ODM2NjY6MTM0MzQ4ODMyLDIxNDc0ODM2Njc6MTMzMTUyLDIxNDc0ODM2Njg6MzIsMjE0NzQ4MzY2OToxMzQzNDg4MDAsMjE0NzQ4MzY3MDoxMzQyMTc3MjgsMjE0NzQ4MzY3MToxMzQyMTk4MDgsMjE0NzQ4MzY3MjoxMzQzNTA4ODAsMjE0NzQ4MzY3MzoxMzQyMTc3NjAsMjE0NzQ4MzY3NDoxMzQyMTk3NzYsMjE0NzQ4MzY3NTowLDIxNDc0ODM2NzY6MTMzMTIwLDIxNDc0ODM2Nzc6MjA4MCwyMTQ3NDgzNjc4OjEzMTEwNCwyMTQ3NDgzNjc5OjEzNDM1MDg0OH1dLGw9WzQxNjA3NDk1NjksNTI4NDgyMzA0LDMzMDMwMTQ0LDIwNjQzODQsMTI5MDI0LDgwNjQsNTA0LDIxNDc0ODM2NzldLGY9bi5ERVM9aS5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuX2tleS53b3JkcyxlPVtdLHI9MDtyPDU2O3IrKyl7dmFyIGk9b1tyXS0xO2Vbcl09dFtpPj4+NV0+Pj4zMS1pJTMyJjF9Zm9yKHZhciBuPXRoaXMuX3N1YktleXM9W10sYz0wO2M8MTY7YysrKXt2YXIgaD1uW2NdPVtdLGw9YVtjXTtmb3Iocj0wO3I8MjQ7cisrKWhbci82fDBdfD1lWyhzW3JdLTErbCklMjhdPDwzMS1yJTYsaFs0KyhyLzZ8MCldfD1lWzI4KyhzW3IrMjRdLTErbCklMjhdPDwzMS1yJTY7aFswXT1oWzBdPDwxfGhbMF0+Pj4zMTtmb3Iocj0xO3I8NztyKyspaFtyXT1oW3JdPj4+NCooci0xKSszO2hbN109aFs3XTw8NXxoWzddPj4+Mjd9dmFyIGY9dGhpcy5faW52U3ViS2V5cz1bXTtmb3Iocj0wO3I8MTY7cisrKWZbcl09blsxNS1yXX0sZW5jcnlwdEJsb2NrOmZ1bmN0aW9uKHQsZSl7dGhpcy5fZG9DcnlwdEJsb2NrKHQsZSx0aGlzLl9zdWJLZXlzKX0sZGVjcnlwdEJsb2NrOmZ1bmN0aW9uKHQsZSl7dGhpcy5fZG9DcnlwdEJsb2NrKHQsZSx0aGlzLl9pbnZTdWJLZXlzKX0sX2RvQ3J5cHRCbG9jazpmdW5jdGlvbih0LGUscil7dGhpcy5fbEJsb2NrPXRbZV0sdGhpcy5fckJsb2NrPXRbZSsxXSx1LmNhbGwodGhpcyw0LDI1MjY0NTEzNSksdS5jYWxsKHRoaXMsMTYsNjU1MzUpLGQuY2FsbCh0aGlzLDIsODU4OTkzNDU5KSxkLmNhbGwodGhpcyw4LDE2NzExOTM1KSx1LmNhbGwodGhpcywxLDE0MzE2NTU3NjUpO2Zvcih2YXIgaT0wO2k8MTY7aSsrKXtmb3IodmFyIG49cltpXSxvPXRoaXMuX2xCbG9jayxzPXRoaXMuX3JCbG9jayxhPTAsYz0wO2M8ODtjKyspYXw9aFtjXVsoKHNebltjXSkmbFtjXSk+Pj4wXTt0aGlzLl9sQmxvY2s9cyx0aGlzLl9yQmxvY2s9b15hfXZhciBmPXRoaXMuX2xCbG9jazt0aGlzLl9sQmxvY2s9dGhpcy5fckJsb2NrLHRoaXMuX3JCbG9jaz1mLHUuY2FsbCh0aGlzLDEsMTQzMTY1NTc2NSksZC5jYWxsKHRoaXMsOCwxNjcxMTkzNSksZC5jYWxsKHRoaXMsMiw4NTg5OTM0NTkpLHUuY2FsbCh0aGlzLDE2LDY1NTM1KSx1LmNhbGwodGhpcyw0LDI1MjY0NTEzNSksdFtlXT10aGlzLl9sQmxvY2ssdFtlKzFdPXRoaXMuX3JCbG9ja30sa2V5U2l6ZToyLGl2U2l6ZToyLGJsb2NrU2l6ZToyfSk7ZnVuY3Rpb24gdSh0LGUpe3ZhciByPSh0aGlzLl9sQmxvY2s+Pj50XnRoaXMuX3JCbG9jaykmZTt0aGlzLl9yQmxvY2tePXIsdGhpcy5fbEJsb2NrXj1yPDx0fWZ1bmN0aW9uIGQodCxlKXt2YXIgcj0odGhpcy5fckJsb2NrPj4+dF50aGlzLl9sQmxvY2spJmU7dGhpcy5fbEJsb2NrXj1yLHRoaXMuX3JCbG9ja149cjw8dH10LkRFUz1pLl9jcmVhdGVIZWxwZXIoZik7dmFyIHA9bi5UcmlwbGVERVM9aS5leHRlbmQoe19kb1Jlc2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fa2V5LndvcmRzO2lmKDIhPT10Lmxlbmd0aCYmNCE9PXQubGVuZ3RoJiZ0Lmxlbmd0aDw2KXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBrZXkgbGVuZ3RoIC0gM0RFUyByZXF1aXJlcyB0aGUga2V5IGxlbmd0aCB0byBiZSA2NCwgMTI4LCAxOTIgb3IgPjE5Mi4iKTt2YXIgZT10LnNsaWNlKDAsMiksaT10Lmxlbmd0aDw0P3Quc2xpY2UoMCwyKTp0LnNsaWNlKDIsNCksbj10Lmxlbmd0aDw2P3Quc2xpY2UoMCwyKTp0LnNsaWNlKDQsNik7dGhpcy5fZGVzMT1mLmNyZWF0ZUVuY3J5cHRvcihyLmNyZWF0ZShlKSksdGhpcy5fZGVzMj1mLmNyZWF0ZUVuY3J5cHRvcihyLmNyZWF0ZShpKSksdGhpcy5fZGVzMz1mLmNyZWF0ZUVuY3J5cHRvcihyLmNyZWF0ZShuKSl9LGVuY3J5cHRCbG9jazpmdW5jdGlvbih0LGUpe3RoaXMuX2RlczEuZW5jcnlwdEJsb2NrKHQsZSksdGhpcy5fZGVzMi5kZWNyeXB0QmxvY2sodCxlKSx0aGlzLl9kZXMzLmVuY3J5cHRCbG9jayh0LGUpfSxkZWNyeXB0QmxvY2s6ZnVuY3Rpb24odCxlKXt0aGlzLl9kZXMzLmRlY3J5cHRCbG9jayh0LGUpLHRoaXMuX2RlczIuZW5jcnlwdEJsb2NrKHQsZSksdGhpcy5fZGVzMS5kZWNyeXB0QmxvY2sodCxlKX0sa2V5U2l6ZTo2LGl2U2l6ZToyLGJsb2NrU2l6ZToyfSk7dC5UcmlwbGVERVM9aS5fY3JlYXRlSGVscGVyKHApfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9YyxlPXQubGliLlN0cmVhbUNpcGhlcixyPXQuYWxnbyxpPXIuUkM0PWUuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9rZXksZT10LndvcmRzLHI9dC5zaWdCeXRlcyxpPXRoaXMuX1M9W10sbj0wO248MjU2O24rKylpW25dPW47bj0wO2Zvcih2YXIgbz0wO248MjU2O24rKyl7dmFyIHM9biVyLGE9ZVtzPj4+Ml0+Pj4yNC1zJTQqOCYyNTU7bz0obytpW25dK2EpJTI1Njt2YXIgYz1pW25dO2lbbl09aVtvXSxpW29dPWN9dGhpcy5faT10aGlzLl9qPTB9LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LGUpe3RbZV1ePW4uY2FsbCh0aGlzKX0sa2V5U2l6ZTo4LGl2U2l6ZTowfSk7ZnVuY3Rpb24gbigpe2Zvcih2YXIgdD10aGlzLl9TLGU9dGhpcy5faSxyPXRoaXMuX2osaT0wLG49MDtuPDQ7bisrKXtyPShyK3RbZT0oZSsxKSUyNTZdKSUyNTY7dmFyIG89dFtlXTt0W2VdPXRbcl0sdFtyXT1vLGl8PXRbKHRbZV0rdFtyXSklMjU2XTw8MjQtOCpufXJldHVybiB0aGlzLl9pPWUsdGhpcy5faj1yLGl9dC5SQzQ9ZS5fY3JlYXRlSGVscGVyKGkpO3ZhciBvPXIuUkM0RHJvcD1pLmV4dGVuZCh7Y2ZnOmkuY2ZnLmV4dGVuZCh7ZHJvcDoxOTJ9KSxfZG9SZXNldDpmdW5jdGlvbigpe2kuX2RvUmVzZXQuY2FsbCh0aGlzKTtmb3IodmFyIHQ9dGhpcy5jZmcuZHJvcDt0PjA7dC0tKW4uY2FsbCh0aGlzKX19KTt0LlJDNERyb3A9ZS5fY3JlYXRlSGVscGVyKG8pfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9YyxlPXQubGliLlN0cmVhbUNpcGhlcixyPXQuYWxnbyxpPVtdLG49W10sbz1bXSxzPXIuUmFiYml0PWUuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLl9rZXkud29yZHMsZT10aGlzLmNmZy5pdixyPTA7cjw0O3IrKyl0W3JdPTE2NzExOTM1Jih0W3JdPDw4fHRbcl0+Pj4yNCl8NDI3ODI1NTM2MCYodFtyXTw8MjR8dFtyXT4+PjgpO3ZhciBpPXRoaXMuX1g9W3RbMF0sdFszXTw8MTZ8dFsyXT4+PjE2LHRbMV0sdFswXTw8MTZ8dFszXT4+PjE2LHRbMl0sdFsxXTw8MTZ8dFswXT4+PjE2LHRbM10sdFsyXTw8MTZ8dFsxXT4+PjE2XSxuPXRoaXMuX0M9W3RbMl08PDE2fHRbMl0+Pj4xNiw0Mjk0OTAxNzYwJnRbMF18NjU1MzUmdFsxXSx0WzNdPDwxNnx0WzNdPj4+MTYsNDI5NDkwMTc2MCZ0WzFdfDY1NTM1JnRbMl0sdFswXTw8MTZ8dFswXT4+PjE2LDQyOTQ5MDE3NjAmdFsyXXw2NTUzNSZ0WzNdLHRbMV08PDE2fHRbMV0+Pj4xNiw0Mjk0OTAxNzYwJnRbM118NjU1MzUmdFswXV07dGhpcy5fYj0wO2ZvcihyPTA7cjw0O3IrKylhLmNhbGwodGhpcyk7Zm9yKHI9MDtyPDg7cisrKW5bcl1ePWlbcis0JjddO2lmKGUpe3ZhciBvPWUud29yZHMscz1vWzBdLGM9b1sxXSxoPTE2NzExOTM1JihzPDw4fHM+Pj4yNCl8NDI3ODI1NTM2MCYoczw8MjR8cz4+PjgpLGw9MTY3MTE5MzUmKGM8PDh8Yz4+PjI0KXw0Mjc4MjU1MzYwJihjPDwyNHxjPj4+OCksZj1oPj4+MTZ8NDI5NDkwMTc2MCZsLHU9bDw8MTZ8NjU1MzUmaDtuWzBdXj1oLG5bMV1ePWYsblsyXV49bCxuWzNdXj11LG5bNF1ePWgsbls1XV49ZixuWzZdXj1sLG5bN11ePXU7Zm9yKHI9MDtyPDQ7cisrKWEuY2FsbCh0aGlzKX19LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LGUpe3ZhciByPXRoaXMuX1g7YS5jYWxsKHRoaXMpLGlbMF09clswXV5yWzVdPj4+MTZeclszXTw8MTYsaVsxXT1yWzJdXnJbN10+Pj4xNl5yWzVdPDwxNixpWzJdPXJbNF1eclsxXT4+PjE2XnJbN108PDE2LGlbM109cls2XV5yWzNdPj4+MTZeclsxXTw8MTY7Zm9yKHZhciBuPTA7bjw0O24rKylpW25dPTE2NzExOTM1JihpW25dPDw4fGlbbl0+Pj4yNCl8NDI3ODI1NTM2MCYoaVtuXTw8MjR8aVtuXT4+PjgpLHRbZStuXV49aVtuXX0sYmxvY2tTaXplOjQsaXZTaXplOjJ9KTtmdW5jdGlvbiBhKCl7Zm9yKHZhciB0PXRoaXMuX1gsZT10aGlzLl9DLHI9MDtyPDg7cisrKW5bcl09ZVtyXTtlWzBdPWVbMF0rMTI5NTMwNzU5Nyt0aGlzLl9ifDAsZVsxXT1lWzFdKzM1NDUwNTIzNzErKGVbMF0+Pj4wPG5bMF0+Pj4wPzE6MCl8MCxlWzJdPWVbMl0rODg2MjYzMDkyKyhlWzFdPj4+MDxuWzFdPj4+MD8xOjApfDAsZVszXT1lWzNdKzEyOTUzMDc1OTcrKGVbMl0+Pj4wPG5bMl0+Pj4wPzE6MCl8MCxlWzRdPWVbNF0rMzU0NTA1MjM3MSsoZVszXT4+PjA8blszXT4+PjA/MTowKXwwLGVbNV09ZVs1XSs4ODYyNjMwOTIrKGVbNF0+Pj4wPG5bNF0+Pj4wPzE6MCl8MCxlWzZdPWVbNl0rMTI5NTMwNzU5NysoZVs1XT4+PjA8bls1XT4+PjA/MTowKXwwLGVbN109ZVs3XSszNTQ1MDUyMzcxKyhlWzZdPj4+MDxuWzZdPj4+MD8xOjApfDAsdGhpcy5fYj1lWzddPj4+MDxuWzddPj4+MD8xOjA7Zm9yKHI9MDtyPDg7cisrKXt2YXIgaT10W3JdK2Vbcl0scz02NTUzNSZpLGE9aT4+PjE2LGM9KChzKnM+Pj4xNykrcyphPj4+MTUpK2EqYSxoPSgoNDI5NDkwMTc2MCZpKSppfDApKygoNjU1MzUmaSkqaXwwKTtvW3JdPWNeaH10WzBdPW9bMF0rKG9bN108PDE2fG9bN10+Pj4xNikrKG9bNl08PDE2fG9bNl0+Pj4xNil8MCx0WzFdPW9bMV0rKG9bMF08PDh8b1swXT4+PjI0KStvWzddfDAsdFsyXT1vWzJdKyhvWzFdPDwxNnxvWzFdPj4+MTYpKyhvWzBdPDwxNnxvWzBdPj4+MTYpfDAsdFszXT1vWzNdKyhvWzJdPDw4fG9bMl0+Pj4yNCkrb1sxXXwwLHRbNF09b1s0XSsob1szXTw8MTZ8b1szXT4+PjE2KSsob1syXTw8MTZ8b1syXT4+PjE2KXwwLHRbNV09b1s1XSsob1s0XTw8OHxvWzRdPj4+MjQpK29bM118MCx0WzZdPW9bNl0rKG9bNV08PDE2fG9bNV0+Pj4xNikrKG9bNF08PDE2fG9bNF0+Pj4xNil8MCx0WzddPW9bN10rKG9bNl08PDh8b1s2XT4+PjI0KStvWzVdfDB9dC5SYWJiaXQ9ZS5fY3JlYXRlSGVscGVyKHMpfSgpLGZ1bmN0aW9uKCl7dmFyIHQ9YyxlPXQubGliLlN0cmVhbUNpcGhlcixyPXQuYWxnbyxpPVtdLG49W10sbz1bXSxzPXIuUmFiYml0TGVnYWN5PWUuZXh0ZW5kKHtfZG9SZXNldDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2tleS53b3JkcyxlPXRoaXMuY2ZnLml2LHI9dGhpcy5fWD1bdFswXSx0WzNdPDwxNnx0WzJdPj4+MTYsdFsxXSx0WzBdPDwxNnx0WzNdPj4+MTYsdFsyXSx0WzFdPDwxNnx0WzBdPj4+MTYsdFszXSx0WzJdPDwxNnx0WzFdPj4+MTZdLGk9dGhpcy5fQz1bdFsyXTw8MTZ8dFsyXT4+PjE2LDQyOTQ5MDE3NjAmdFswXXw2NTUzNSZ0WzFdLHRbM108PDE2fHRbM10+Pj4xNiw0Mjk0OTAxNzYwJnRbMV18NjU1MzUmdFsyXSx0WzBdPDwxNnx0WzBdPj4+MTYsNDI5NDkwMTc2MCZ0WzJdfDY1NTM1JnRbM10sdFsxXTw8MTZ8dFsxXT4+PjE2LDQyOTQ5MDE3NjAmdFszXXw2NTUzNSZ0WzBdXTt0aGlzLl9iPTA7Zm9yKHZhciBuPTA7bjw0O24rKylhLmNhbGwodGhpcyk7Zm9yKG49MDtuPDg7bisrKWlbbl1ePXJbbis0JjddO2lmKGUpe3ZhciBvPWUud29yZHMscz1vWzBdLGM9b1sxXSxoPTE2NzExOTM1JihzPDw4fHM+Pj4yNCl8NDI3ODI1NTM2MCYoczw8MjR8cz4+PjgpLGw9MTY3MTE5MzUmKGM8PDh8Yz4+PjI0KXw0Mjc4MjU1MzYwJihjPDwyNHxjPj4+OCksZj1oPj4+MTZ8NDI5NDkwMTc2MCZsLHU9bDw8MTZ8NjU1MzUmaDtpWzBdXj1oLGlbMV1ePWYsaVsyXV49bCxpWzNdXj11LGlbNF1ePWgsaVs1XV49ZixpWzZdXj1sLGlbN11ePXU7Zm9yKG49MDtuPDQ7bisrKWEuY2FsbCh0aGlzKX19LF9kb1Byb2Nlc3NCbG9jazpmdW5jdGlvbih0LGUpe3ZhciByPXRoaXMuX1g7YS5jYWxsKHRoaXMpLGlbMF09clswXV5yWzVdPj4+MTZeclszXTw8MTYsaVsxXT1yWzJdXnJbN10+Pj4xNl5yWzVdPDwxNixpWzJdPXJbNF1eclsxXT4+PjE2XnJbN108PDE2LGlbM109cls2XV5yWzNdPj4+MTZeclsxXTw8MTY7Zm9yKHZhciBuPTA7bjw0O24rKylpW25dPTE2NzExOTM1JihpW25dPDw4fGlbbl0+Pj4yNCl8NDI3ODI1NTM2MCYoaVtuXTw8MjR8aVtuXT4+PjgpLHRbZStuXV49aVtuXX0sYmxvY2tTaXplOjQsaXZTaXplOjJ9KTtmdW5jdGlvbiBhKCl7Zm9yKHZhciB0PXRoaXMuX1gsZT10aGlzLl9DLHI9MDtyPDg7cisrKW5bcl09ZVtyXTtlWzBdPWVbMF0rMTI5NTMwNzU5Nyt0aGlzLl9ifDAsZVsxXT1lWzFdKzM1NDUwNTIzNzErKGVbMF0+Pj4wPG5bMF0+Pj4wPzE6MCl8MCxlWzJdPWVbMl0rODg2MjYzMDkyKyhlWzFdPj4+MDxuWzFdPj4+MD8xOjApfDAsZVszXT1lWzNdKzEyOTUzMDc1OTcrKGVbMl0+Pj4wPG5bMl0+Pj4wPzE6MCl8MCxlWzRdPWVbNF0rMzU0NTA1MjM3MSsoZVszXT4+PjA8blszXT4+PjA/MTowKXwwLGVbNV09ZVs1XSs4ODYyNjMwOTIrKGVbNF0+Pj4wPG5bNF0+Pj4wPzE6MCl8MCxlWzZdPWVbNl0rMTI5NTMwNzU5NysoZVs1XT4+PjA8bls1XT4+PjA/MTowKXwwLGVbN109ZVs3XSszNTQ1MDUyMzcxKyhlWzZdPj4+MDxuWzZdPj4+MD8xOjApfDAsdGhpcy5fYj1lWzddPj4+MDxuWzddPj4+MD8xOjA7Zm9yKHI9MDtyPDg7cisrKXt2YXIgaT10W3JdK2Vbcl0scz02NTUzNSZpLGE9aT4+PjE2LGM9KChzKnM+Pj4xNykrcyphPj4+MTUpK2EqYSxoPSgoNDI5NDkwMTc2MCZpKSppfDApKygoNjU1MzUmaSkqaXwwKTtvW3JdPWNeaH10WzBdPW9bMF0rKG9bN108PDE2fG9bN10+Pj4xNikrKG9bNl08PDE2fG9bNl0+Pj4xNil8MCx0WzFdPW9bMV0rKG9bMF08PDh8b1swXT4+PjI0KStvWzddfDAsdFsyXT1vWzJdKyhvWzFdPDwxNnxvWzFdPj4+MTYpKyhvWzBdPDwxNnxvWzBdPj4+MTYpfDAsdFszXT1vWzNdKyhvWzJdPDw4fG9bMl0+Pj4yNCkrb1sxXXwwLHRbNF09b1s0XSsob1szXTw8MTZ8b1szXT4+PjE2KSsob1syXTw8MTZ8b1syXT4+PjE2KXwwLHRbNV09b1s1XSsob1s0XTw8OHxvWzRdPj4+MjQpK29bM118MCx0WzZdPW9bNl0rKG9bNV08PDE2fG9bNV0+Pj4xNikrKG9bNF08PDE2fG9bNF0+Pj4xNil8MCx0WzddPW9bN10rKG9bNl08PDh8b1s2XT4+PjI0KStvWzVdfDB9dC5SYWJiaXRMZWdhY3k9ZS5fY3JlYXRlSGVscGVyKHMpfSgpLGN9KSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPS9zbS8zZDk2ZmJjOWM0YjEzMGFkMTE1Mzc2ZDBjN2I5NTU0NmQzNTViYjdmYmVhYTc2NzZmOWYyNWYzMGM2ZGRjNGJjLm1hcA=="}]},{"name":"ÁôæÂ∫¶ÁΩëÁõòËßÜÈ¢ëÊí≠ÊîæÂ∞ä‰∫´ VIP | Ëß£ÈîÅËßÜÈ¢ëÂÄçÊï∞ | Ëß£ÈîÅÂÖ®ÈÉ®Ê∏ÖÊô∞Â∫¶","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://pan.baidu.com/play/video*","https://timer.palerock.cn/configuration*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703210,"data":{}},"enabled":true,"position":10,"file_url":"https://greasyfork.org/scripts/426952-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B0%8A%E4%BA%AB-vip-%E8%A7%A3%E9%94%81%E8%A7%86%E9%A2%91%E5%80%8D%E6%95%B0-%E8%A7%A3%E9%94%81%E5%85%A8%E9%83%A8%E6%B8%85%E6%99%B0%E5%BA%A6/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B0%8A%E4%BA%AB%20VIP%20%7C%20%E8%A7%A3%E9%94%81%E8%A7%86%E9%A2%91%E5%80%8D%E6%95%B0%20%7C%20%E8%A7%A3%E9%94%81%E5%85%A8%E9%83%A8%E6%B8%85%E6%99%B0%E5%BA%A6.user.js","uuid":"40e97cff-ddfe-496e-a4a0-799acc1eaf46","source":"CgovLyA9PVVzZXJTY3JpcHQ9PQovLyBAbmFtZSAgICAgICAgICAgIOeZvuW6pue9keebmOinhumikeaSreaUvuWwiuS6qyBWSVAgfCDop6PplIHop4bpopHlgI3mlbAgfCDop6PplIHlhajpg6jmuIXmmbDluqYKLy8gQG5hbWVzcGFjZSAgICAgICBodHRwczovL3RpbWVyLnBhbGVyb2NrLmNuCi8vIEB2ZXJzaW9uICAgICAgICAgMC4xLjAKLy8gQGRlc2NyaXB0aW9uICAgICDkvb/nlKjor6XohJrmnKzov5vlhaXnmb7luqbnvZHnm5jop4bpopHmkq3mlL7pobXpnaLvvIzoh6rliqjop6PplIEgVklQIOmZkOWItu+8jOWPr+S7peS9v+eUqCBWSVAg55qE57ud5aSn5aSa5pWw5Yqf6IO9Ci8vIEBpbmNsdWRlICAgICAgICAgaHR0cHM6Ly9wYW4uYmFpZHUuY29tL3BsYXkvdmlkZW8qCi8vIEBpbmNsdWRlICAgICAgICAgaHR0cHM6Ly90aW1lci5wYWxlcm9jay5jbi9jb25maWd1cmF0aW9uKgovLyBAYXV0aG9yICAgICAgICAgIENhbmdzaGkKLy8gQHJ1bi1hdCAgICAgICAgICBkb2N1bWVudC1zdGFydAovLyBAZ3JhbnQgICAgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IGZhY3RvcnkoZXhwb3J0cykgOgogIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnXSwgZmFjdG9yeSkgOgogIChnbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogZ2xvYmFsIHx8IHNlbGYsIGZhY3RvcnkoZ2xvYmFsLiRob29rQmFpZHVQYW5WaWRlbyA9IHt9KSk7Cn0odGhpcywgKGZ1bmN0aW9uIChleHBvcnRzKSB7ICd1c2Ugc3RyaWN0JzsKCiAgZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsKICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07CiAgICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsKICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgICBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogICAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7CiAgICByZXR1cm4gQ29uc3RydWN0b3I7CiAgfQoKICBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsKICAgIGlmIChzZWxmID09PSB2b2lkIDApIHsKICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsKICAgIH0KCiAgICByZXR1cm4gc2VsZjsKICB9CgogIGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7CiAgICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgewogICAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOwogICAgfTsKICAgIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7CiAgfQoKICBmdW5jdGlvbiBfc3VwZXJQcm9wQmFzZShvYmplY3QsIHByb3BlcnR5KSB7CiAgICB3aGlsZSAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSkgewogICAgICBvYmplY3QgPSBfZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsKICAgICAgaWYgKG9iamVjdCA9PT0gbnVsbCkgYnJlYWs7CiAgICB9CgogICAgcmV0dXJuIG9iamVjdDsKICB9CgogIGZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsKICAgIGlmICh0eXBlb2YgUmVmbGVjdCAhPT0gInVuZGVmaW5lZCIgJiYgUmVmbGVjdC5nZXQpIHsKICAgICAgX2dldCA9IFJlZmxlY3QuZ2V0OwogICAgfSBlbHNlIHsKICAgICAgX2dldCA9IGZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsKICAgICAgICB2YXIgYmFzZSA9IF9zdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpOwogICAgICAgIGlmICghYmFzZSkgcmV0dXJuOwogICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihiYXNlLCBwcm9wZXJ0eSk7CgogICAgICAgIGlmIChkZXNjLmdldCkgewogICAgICAgICAgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGRlc2MudmFsdWU7CiAgICAgIH07CiAgICB9CgogICAgcmV0dXJuIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTsKICB9CgogIGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsKICAgICAgby5fX3Byb3RvX18gPSBwOwogICAgICByZXR1cm4gbzsKICAgIH07CgogICAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsKICB9CgogIGZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgewogICAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsKICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsKICAgIH0KCiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsKICAgICAgY29uc3RydWN0b3I6IHsKICAgICAgICB2YWx1ZTogc3ViQ2xhc3MsCiAgICAgICAgd3JpdGFibGU6IHRydWUsCiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICAgIH0KICAgIH0pOwogICAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7CiAgfQoKICBmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogICAgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsKCiAgICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgewogICAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsKICAgICAgICByZXR1cm4gdHlwZW9mIG9iajsKICAgICAgfTsKICAgIH0gZWxzZSB7CiAgICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogICAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7CiAgICAgIH07CiAgICB9CgogICAgcmV0dXJuIF90eXBlb2Yob2JqKTsKICB9CgogIGZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsKICAgIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsKICAgICAgcmV0dXJuIGNhbGw7CiAgICB9CgogICAgcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7CiAgfQoKICBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgICBpZiAoa2V5IGluIG9iaikgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgICAgd3JpdGFibGU6IHRydWUKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBvYmpba2V5XSA9IHZhbHVlOwogICAgfQoKICAgIHJldHVybiBvYmo7CiAgfQoKICB2YXIgQ29uZmlnVHlwZTsKCiAgKGZ1bmN0aW9uIChDb25maWdUeXBlKSB7CiAgICBDb25maWdUeXBlWyJCT09MRUFOIl0gPSAiYm9vbGVhbiI7CiAgICBDb25maWdUeXBlWyJTVFJJTkciXSA9ICJzdHJpbmciOwogICAgQ29uZmlnVHlwZVsiTlVNQkVSIl0gPSAibnVtYmVyIjsKICAgIENvbmZpZ1R5cGVbIlNIT1JUQ1VUIl0gPSAic2hvcnRjdXQiOwogICAgQ29uZmlnVHlwZVsiTE9OR19TVFJJTkciXSA9ICJsb25nX3N0cmluZyI7CiAgICBDb25maWdUeXBlWyJEQVRFIl0gPSAiZGF0ZSI7CiAgICBDb25maWdUeXBlWyJDT0xPUiJdID0gImNvbG9yIjsKICAgIENvbmZpZ1R5cGVbIkFSUkFZIl0gPSAiYXJyYXkiOwogICAgQ29uZmlnVHlwZVsiUElDS0xJU1QiXSA9ICJwaWNrbGlzdCI7CiAgICBDb25maWdUeXBlWyJEVUVMSU5HX1BJQ0tMSVNUIl0gPSAiZHVlbGluZ19waWNrbGlzdCI7CiAgfSkoQ29uZmlnVHlwZSB8fCAoQ29uZmlnVHlwZSA9IHt9KSk7CgogIGZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICAgIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7CiAgfQoKICBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgICB2YXIgX2kgPSBhcnIgJiYgKHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFyclsiQEBpdGVyYXRvciJdKTsKCiAgICBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuOwogICAgdmFyIF9hcnIgPSBbXTsKICAgIHZhciBfbiA9IHRydWU7CiAgICB2YXIgX2QgPSBmYWxzZTsKCiAgICB2YXIgX3MsIF9lOwoKICAgIHRyeSB7CiAgICAgIGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfZCA9IHRydWU7CiAgICAgIF9lID0gZXJyOwogICAgfSBmaW5hbGx5IHsKICAgICAgdHJ5IHsKICAgICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIF9hcnI7CiAgfQoKICBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheSQxKGFyciwgbGVuKSB7CiAgICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsKCiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9CgogIGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSQxKG8sIG1pbkxlbikgewogICAgaWYgKCFvKSByZXR1cm47CiAgICBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkkMShvLCBtaW5MZW4pOwogICAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOwogICAgaWYgKG4gPT09ICJPYmplY3QiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7CiAgICBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOwogICAgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkkMShvLCBtaW5MZW4pOwogIH0KCiAgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7CiAgfQoKICBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICAgIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkkMShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKICB9CgogIGZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG8sIGFsbG93QXJyYXlMaWtlKSB7IHZhciBpdCA9IHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIG9bU3ltYm9sLml0ZXJhdG9yXSB8fCBvWyJAQGl0ZXJhdG9yIl07IGlmICghaXQpIHsgaWYgKEFycmF5LmlzQXJyYXkobykgfHwgKGl0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8pKSB8fCBhbGxvd0FycmF5TGlrZSAmJiBvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gIm51bWJlciIpIHsgaWYgKGl0KSBvID0gaXQ7IHZhciBpID0gMDsgdmFyIEYgPSBmdW5jdGlvbiBGKCkge307IHJldHVybiB7IHM6IEYsIG46IGZ1bmN0aW9uIG4oKSB7IGlmIChpID49IG8ubGVuZ3RoKSByZXR1cm4geyBkb25lOiB0cnVlIH07IHJldHVybiB7IGRvbmU6IGZhbHNlLCB2YWx1ZTogb1tpKytdIH07IH0sIGU6IGZ1bmN0aW9uIGUoX2UpIHsgdGhyb3cgX2U7IH0sIGY6IEYgfTsgfSB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7IH0gdmFyIG5vcm1hbENvbXBsZXRpb24gPSB0cnVlLCBkaWRFcnIgPSBmYWxzZSwgZXJyOyByZXR1cm4geyBzOiBmdW5jdGlvbiBzKCkgeyBpdCA9IGl0LmNhbGwobyk7IH0sIG46IGZ1bmN0aW9uIG4oKSB7IHZhciBzdGVwID0gaXQubmV4dCgpOyBub3JtYWxDb21wbGV0aW9uID0gc3RlcC5kb25lOyByZXR1cm4gc3RlcDsgfSwgZTogZnVuY3Rpb24gZShfZTIpIHsgZGlkRXJyID0gdHJ1ZTsgZXJyID0gX2UyOyB9LCBmOiBmdW5jdGlvbiBmKCkgeyB0cnkgeyBpZiAoIW5vcm1hbENvbXBsZXRpb24gJiYgaXRbInJldHVybiJdICE9IG51bGwpIGl0WyJyZXR1cm4iXSgpOyB9IGZpbmFsbHkgeyBpZiAoZGlkRXJyKSB0aHJvdyBlcnI7IH0gfSB9OyB9CgogIGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gInN0cmluZyIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gIk1hcCIgfHwgbiA9PT0gIlNldCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gIkFyZ3VtZW50cyIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9CgogIGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfQoKICB2YXIgX3dpbmRvdzsKCiAgZnVuY3Rpb24gZ2V0V2luZG93KCkgewogICAgaWYgKF93aW5kb3cgPT0gbnVsbCkgewogICAgICBfd2luZG93ID0gdHlwZW9mIHVuc2FmZVdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB1bnNhZmVXaW5kb3c7CiAgICB9CgogICAgcmV0dXJuIF93aW5kb3c7CiAgfQogIGZ1bmN0aW9uIGlzSW5JZnJhbWUoKSB7CiAgICB2YXIgaXMgPSBnZXRXaW5kb3coKS5wYXJlbnQgIT09IGdldFdpbmRvdygpOwoKICAgIHRyeSB7CiAgICAgIGlzID0gaXMgJiYgZ2V0V2luZG93KCkucGFyZW50LmRvY3VtZW50LmJvZHkudGFnTmFtZSAhPT0gJ0ZSQU1FU0VUJzsKICAgIH0gY2F0Y2ggKGUpIHsvLyBpZ25vcmUKICAgIH0KCiAgICByZXR1cm4gaXM7CiAgfQogIHZhciBMT0FEX01PRFVMRSA9ICdfX2hvb2tzX2xvYWRfbW9kdWxlJzsKICB2YXIgTE9BRF9NT0RVTEVfUEFUSCA9ICdfX19ob29rc19wcmVNb2R1bGVzJzsKICB2YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLmJpbmQoT2JqZWN0KTsKICBPYmplY3QuZ2V0UHJvdG90eXBlT2YuYmluZChPYmplY3QpOwogIHZhciBuYXRpdmVPYmplY3RzID0gW1tBcnJheS5wcm90b3R5cGVdLCBbT2JqZWN0LCBmYWxzZV1dOwoKICBmdW5jdGlvbiBnZXRNZXRob2RMaXN0KHRhcmdldCkgewogICAgdmFyIHJlc3VsdCA9IHt9OwoKICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihnZXRPd25Qcm9wZXJ0eU5hbWVzKHRhcmdldCkpLAogICAgICAgIF9zdGVwOwoKICAgIHRyeSB7CiAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgdmFyIG5hbWUgPSBfc3RlcC52YWx1ZTsKICAgICAgICByZXN1bHRbbmFtZV0gPSB0YXJnZXRbbmFtZV07CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KCiAgICByZXR1cm4gcmVzdWx0OwogIH0KCiAgbmF0aXZlT2JqZWN0cy5tYXAoZnVuY3Rpb24gKF9yZWYpIHsKICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDEpLAogICAgICAgIG5hdGl2ZU9iamVjdCA9IF9yZWYyWzBdOwoKICAgIHJldHVybiBbbmF0aXZlT2JqZWN0LCBnZXRNZXRob2RMaXN0KG5hdGl2ZU9iamVjdCldOwogIH0pOwogIGZ1bmN0aW9uIHJlcXVpcmVUb0xvYWRNb2R1bGUobW9kdWxlKSB7CiAgICBpZiAoIWdldFdpbmRvdygpW0xPQURfTU9EVUxFXSkgewogICAgICB3aW5kb3dbTE9BRF9NT0RVTEVfUEFUSF0gPSB3aW5kb3dbTE9BRF9NT0RVTEVfUEFUSF0gfHwgW107CiAgICAgIHdpbmRvd1tMT0FEX01PRFVMRV9QQVRIXS5wdXNoKG1vZHVsZSk7CiAgICB9IGVsc2UgewogICAgICBnZXRXaW5kb3coKS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChMT0FEX01PRFVMRSwgewogICAgICAgIGRldGFpbDogbW9kdWxlCiAgICAgIH0pKTsKICAgIH0KICB9CgogIHZhciBsb2dnZXIgPSB7CiAgICBsb2c6IGZ1bmN0aW9uIGxvZygpIHsKICAgICAgaWYgKCFpc0luSWZyYW1lKCkpIHsKICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgICAgfQoKICAgICAgICBhcmdzLnVuc2hpZnQoJ1tUaW1lckhvb2tdJyk7CgogICAgICAgIGlmICh0eXBlb2YgR01fbG9nID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBHTV9sb2coYXJncy5qb2luKCcgJykpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgX2NvbnNvbGU7CgogICAgICAgICAgKF9jb25zb2xlID0gY29uc29sZSkubG9nLmFwcGx5KF9jb25zb2xlLCBhcmdzKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB3YXJuOiBmdW5jdGlvbiB3YXJuKCkgewogICAgICBpZiAoIWlzSW5JZnJhbWUoKSkgewogICAgICAgIHZhciBfY29uc29sZTI7CgogICAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykgewogICAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdOwogICAgICAgIH0KCiAgICAgICAgYXJncy51bnNoaWZ0KCdbVGltZXJIb29rXScpOwoKICAgICAgICAoX2NvbnNvbGUyID0gY29uc29sZSkud2Fybi5hcHBseShfY29uc29sZTIsIGFyZ3MpOwogICAgICB9CiAgICB9CiAgfTsKCiAgdmFyIEJhc2ljTW9kdWxlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIEJhc2ljTW9kdWxlKCkgewogICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmFzaWNNb2R1bGUpOwoKICAgICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJob3N0Iiwgdm9pZCAwKTsKCiAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiaXNBY3RpdmUiLCBmYWxzZSk7CgogICAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImlzTW91bnRIb3N0IiwgZmFsc2UpOwogICAgfQoKICAgIF9jcmVhdGVDbGFzcyhCYXNpY01vZHVsZSwgW3sKICAgICAga2V5OiAibW91bnRIb3N0IiwKICAgICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50SG9zdChob3N0KSB7CiAgICAgICAgdGhpcy5ob3N0ID0gaG9zdDsKICAgICAgICB0aGlzLmlzTW91bnRIb3N0ID0gdHJ1ZTsKICAgICAgICB0aGlzLm9uTW91bnRlZCgpOwogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogImFjdGl2YXRlIiwKICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFjdGl2YXRlKCkgewogICAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlOwogICAgICAgIHRoaXMuaW5pdCgpOwogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogImRlYWN0aXZhdGUiLAogICAgICB2YWx1ZTogZnVuY3Rpb24gZGVhY3RpdmF0ZSgpIHsKICAgICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7CiAgICAgICAgdGhpcy5vbkRlc3Ryb3koKTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJtb2R1bGVOYW1lIiwKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJwcmlvcml0eSIsCiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiA1MDsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJhdXRvQWN0aXZhdGUiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJpc0NvcmVNb2R1bGUiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAiaXNPbmx5T3V0ZXJJZnJhbWUiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAiZ2V0RGVwZW5kZW5jeU1vZHVsZSIsCiAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREZXBlbmRlbmN5TW9kdWxlKG1vZHVsZUlkZW50aXR5TmFtZSkgewogICAgICAgIGlmICh0aGlzLmhvc3QgPT0gbnVsbCkgewogICAgICAgICAgLy8gbG9nZ2VyLndhcm4oJ1RoaXMgbW9kdWxlIFsnICsgdGhpcy5tb2R1bGVJZGVudGl0eU5hbWUgKyAnXSBpcyBub3QgbW91bnRlZC4nKQogICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDsKICAgICAgICB9CgogICAgICAgIHZhciB0YXJnZXRNb2R1bGUgPSB0aGlzLmhvc3QuZ2V0TW9kdWxlKG1vZHVsZUlkZW50aXR5TmFtZSk7CgogICAgICAgIGlmICh0YXJnZXRNb2R1bGUgJiYgdGFyZ2V0TW9kdWxlLm1vZHVsZUlkZW50aXR5TmFtZSkgewogICAgICAgICAgcmV0dXJuIHRhcmdldE1vZHVsZTsKICAgICAgICB9IC8vIGxvZ2dlci53YXJuKCdNb2R1bGUgbm90IGZvdW5kOicsIG1vZHVsZUlkZW50aXR5TmFtZSkKCgogICAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAiaW5pdCIsCiAgICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KCkgey8vIHRvIGJlIG92ZXJyaWRlCiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAib25Nb3VudGVkIiwKICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uTW91bnRlZCgpIHsvLyB0byBiZSBvdmVycmlkZQogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogIm9uRGVzdHJveSIsCiAgICAgIHZhbHVlOiBmdW5jdGlvbiBvbkRlc3Ryb3koKSB7Ly8gdG8gYmUgb3ZlcnJpZGUKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJkZWNsYXJlQ29uZmlncyIsCiAgICAgIHZhbHVlOiBmdW5jdGlvbiBkZWNsYXJlQ29uZmlncygpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAic2V0Q29uZmlnIiwKICAgICAgdmFsdWU6IGZ1bmN0aW9uIHNldENvbmZpZyhrZXksIHZhbHVlKSB7CiAgICAgICAgdmFyIGNvbmZpZ3MgPSB0aGlzLmdldERlcGVuZGVuY3lNb2R1bGUoJ2NvbmZpZ3MnKTsKCiAgICAgICAgaWYgKCFjb25maWdzIHx8ICFjb25maWdzLmF2YWlsYWJsZSgpKSB7CiAgICAgICAgICBsb2dnZXIud2FybignQ29uZmlnIG1vZHVsZSBub3QgZm91bmQsIGNhblwndCBzZXQgY29uZmlncyB2YWx1ZXMuJyk7CiAgICAgICAgfQoKICAgICAgICBjb25maWdzLnNldFZhbHVlKHRoaXMubW9kdWxlSWRlbnRpdHlOYW1lLCBrZXksIHZhbHVlKTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJnZXRDb25maWciLAogICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29uZmlnKGtleSkgewogICAgICAgIHZhciBfY29uZmlncyRnZXRWYWx1ZTsKCiAgICAgICAgdmFyIGNvbmZpZ3MgPSB0aGlzLmdldERlcGVuZGVuY3lNb2R1bGUoJ2NvbmZpZ3MnKTsKICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gKHRoaXMuZGVjbGFyZUNvbmZpZ3MoKS5maW5kKGZ1bmN0aW9uIChjb25maWcpIHsKICAgICAgICAgIHJldHVybiBjb25maWcua2V5ID09PSBrZXk7CiAgICAgICAgfSkgfHwge30pWyJkZWZhdWx0Il07CgogICAgICAgIGlmICghY29uZmlncyB8fCAhY29uZmlncy5hdmFpbGFibGUoKSkgewogICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAoX2NvbmZpZ3MkZ2V0VmFsdWUgPSBjb25maWdzLmdldFZhbHVlKHRoaXMubW9kdWxlSWRlbnRpdHlOYW1lLCBrZXkpKSAhPT0gbnVsbCAmJiBfY29uZmlncyRnZXRWYWx1ZSAhPT0gdm9pZCAwID8gX2NvbmZpZ3MkZ2V0VmFsdWUgOiBkZWZhdWx0VmFsdWU7CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAid2luZG93IiwKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdCA/IHRoaXMuaG9zdC5nZXRXaW5kb3coKSA6IGdldFdpbmRvdygpOwogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogImRvY3VtZW50IiwKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93LmRvY3VtZW50OwogICAgICB9CiAgICB9XSk7CgogICAgcmV0dXJuIEJhc2ljTW9kdWxlOwogIH0oKTsKCiAgZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCiAgZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH0KICB2YXIgdGFyZ2V0TG9jYWxzID0gWydsb2MnLCAnYWxzJ10uam9pbignJyk7CiAgdmFyIHByb3h5TG9jYWxzID0gWydsb2NhbHMnLCAnYmFjayddLmpvaW4oJ18nKTsKCiAgdmFyIEJhaWR1UGFuVmlkZW8gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9CYXNpY01vZHVsZSkgewogICAgX2luaGVyaXRzKEJhaWR1UGFuVmlkZW8sIF9CYXNpY01vZHVsZSk7CgogICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihCYWlkdVBhblZpZGVvKTsKCiAgICBmdW5jdGlvbiBCYWlkdVBhblZpZGVvKCkgewogICAgICB2YXIgX3RoaXM7CgogICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmFpZHVQYW5WaWRlbyk7CgogICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICBfdGhpcyA9IF9zdXBlci5jYWxsLmFwcGx5KF9zdXBlciwgW3RoaXNdLmNvbmNhdChhcmdzKSk7CgogICAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJoYXNJbml0IiwgZmFsc2UpOwoKICAgICAgcmV0dXJuIF90aGlzOwogICAgfQoKICAgIF9jcmVhdGVDbGFzcyhCYWlkdVBhblZpZGVvLCBbewogICAgICBrZXk6ICJtb2R1bGVJZGVudGl0eU5hbWUiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gJ2JhaWR1UGFuVmlkZW8nOwogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogIm1vZHVsZU5hbWUiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gJ+eZvuW6pue9keebmOinhumikSBWSVAnOwogICAgICB9CiAgICB9LCB7CiAgICAgIGtleTogImluaXQiLAogICAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgICBfZ2V0KF9nZXRQcm90b3R5cGVPZihCYWlkdVBhblZpZGVvLnByb3RvdHlwZSksICJpbml0IiwgdGhpcykuY2FsbCh0aGlzKTsKCiAgICAgICAgaWYgKCF0aGlzLmhhc0luaXQpIHsKICAgICAgICAgIHRoaXMuYXBwbHlWaXBSb2xlcygpOwogICAgICAgICAgdGhpcy5oYXNJbml0ID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAicHJpb3JpdHkiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJnZXRDb25maWdNYXBwZXIiLAogICAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29uZmlnTWFwcGVyKGtleXMpIHsKICAgICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgICAgcmV0dXJuIGtleXMucmVkdWNlKGZ1bmN0aW9uIChyZXN1bHQsIGtleSkgewogICAgICAgICAgcmVzdWx0W2tleV0gPSBfdGhpczIuZ2V0Q29uZmlnKGtleSk7CiAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIH0sIHt9KTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJnZXR0ZXJNYXBwZXIiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5nZXRDb25maWdNYXBwZXIoWydoaXR2aWRlb3NhbXBsZSddKTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJzZXR0ZXJNYXBwZXIiLAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5nZXRDb25maWdNYXBwZXIoWydpc192aXAnLCAnaXNfc3ZpcCcsICdpc19ldmlwJywgJ3Nob3dfdmlwX2FkJywgJ3ZpcF9sZXZlbCddKTsKICAgICAgfQogICAgfSwgewogICAgICBrZXk6ICJhcHBseVZpcFJvbGVzIiwKICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFwcGx5VmlwUm9sZXMoKSB7CiAgICAgICAgdmFyIGlubmVyV2luZG93ID0gdGhpcy53aW5kb3c7CiAgICAgICAgdmFyIGdldHRlck1hcHBlciA9IHRoaXMuZ2V0dGVyTWFwcGVyOwogICAgICAgIHZhciBzZXR0ZXJNYXBwZXIgPSB0aGlzLnNldHRlck1hcHBlcjsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaW5uZXJXaW5kb3csIHRhcmdldExvY2FscywgewogICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgICAgIHZhciBnZXQgPSBpbm5lcldpbmRvd1twcm94eUxvY2Fsc10uZ2V0OwoKICAgICAgICAgICAgaW5uZXJXaW5kb3dbcHJveHlMb2NhbHNdLmdldCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7CgogICAgICAgICAgICAgIGlmIChhcmdzLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3NbYXJncy5sZW5ndGggLSAxXTsKCiAgICAgICAgICAgICAgICBhcmdzW2FyZ3MubGVuZ3RoIC0gMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBpbm5lckFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICBpbm5lckFyZ3MuZm9yRWFjaChmdW5jdGlvbiAoYXJnLCBpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3NbaV0gaW4gZ2V0dGVyTWFwcGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICBpbm5lckFyZ3NbaV0gPSBnZXR0ZXJNYXBwZXJbYXJnc1tpXV07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KHRoaXMsIGlubmVyQXJncyk7CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIH0gZWxzZSBpZiAoYXJnc1swXSBpbiBnZXR0ZXJNYXBwZXIpIHsKICAgICAgICAgICAgICAgIHJldHVybiBnZXR0ZXJNYXBwZXJbYXJnc1swXV07CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gZ2V0LmFwcGx5KHRoaXMsIGFyZ3MpOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgcmV0dXJuIGlubmVyV2luZG93W3Byb3h5TG9jYWxzXTsKICAgICAgICAgIH0sCiAgICAgICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWx1ZSkgewogICAgICAgICAgICBpbm5lcldpbmRvd1twcm94eUxvY2Fsc10gPSB2YWx1ZTsKICAgICAgICAgICAgdmFyIHNldCA9IGlubmVyV2luZG93W3Byb3h5TG9jYWxzXS5zZXQ7CgogICAgICAgICAgICBpbm5lcldpbmRvd1twcm94eUxvY2Fsc10uc2V0ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc2V0dGVyTWFwcGVyKTsKCiAgICAgICAgICAgICAgaWYgKGtleXMuaW5jbHVkZXMoYXJndW1lbnRzWzBdKSkgewogICAgICAgICAgICAgICAgYXJndW1lbnRzWzFdID0gc2V0dGVyTWFwcGVyW2FyZ3VtZW50c1swXV07CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gc2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgIH07CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sIHsKICAgICAga2V5OiAiZGVjbGFyZUNvbmZpZ3MiLAogICAgICB2YWx1ZTogZnVuY3Rpb24gZGVjbGFyZUNvbmZpZ3MoKSB7CiAgICAgICAgcmV0dXJuIFt7CiAgICAgICAgICBrZXk6ICdpc192aXAnLAogICAgICAgICAgImRlZmF1bHQiOiB0cnVlLAogICAgICAgICAgdHlwZTogQ29uZmlnVHlwZS5CT09MRUFOLAogICAgICAgICAgdGl0bGU6ICfmma7pgJogVklQJwogICAgICAgIH0sIHsKICAgICAgICAgIGtleTogJ2lzX3N2aXAnLAogICAgICAgICAgImRlZmF1bHQiOiB0cnVlLAogICAgICAgICAgdHlwZTogQ29uZmlnVHlwZS5CT09MRUFOLAogICAgICAgICAgdGl0bGU6ICfotoXnuqcgVklQJwogICAgICAgIH0sIHsKICAgICAgICAgIGtleTogJ2lzX2V2aXAnLAogICAgICAgICAgImRlZmF1bHQiOiB0cnVlLAogICAgICAgICAgdHlwZTogQ29uZmlnVHlwZS5CT09MRUFOLAogICAgICAgICAgdGl0bGU6ICfkuLTml7YgVklQJwogICAgICAgIH0sIHsKICAgICAgICAgIGtleTogJ3Nob3dfdmlwX2FkJywKICAgICAgICAgICJkZWZhdWx0IjogdHJ1ZSwKICAgICAgICAgIHR5cGU6IENvbmZpZ1R5cGUuQk9PTEVBTiwKICAgICAgICAgIHRpdGxlOiAn5pKt5pS+IFZJUCDlub/lkYonCiAgICAgICAgfSwgewogICAgICAgICAga2V5OiAnaGl0dmlkZW9zYW1wbGUnLAogICAgICAgICAgImRlZmF1bHQiOiB0cnVlLAogICAgICAgICAgdHlwZTogQ29uZmlnVHlwZS5CT09MRUFOLAogICAgICAgICAgdGl0bGU6ICfkvb/nlKggVklQIOaSreaUvuWZqCcKICAgICAgICB9LCB7CiAgICAgICAgICBrZXk6ICd2aXBfbGV2ZWwnLAogICAgICAgICAgImRlZmF1bHQiOiA3LAogICAgICAgICAgdHlwZTogQ29uZmlnVHlwZS5OVU1CRVIsCiAgICAgICAgICB0aXRsZTogJ+eUqOaItyBWSVAg562J57qnJwogICAgICAgIH1dOwogICAgICB9CiAgICB9XSk7CgogICAgcmV0dXJuIEJhaWR1UGFuVmlkZW87CiAgfShCYXNpY01vZHVsZSk7CgogIHZhciBiYWlkdVBhblZpZGVvID0gbmV3IEJhaWR1UGFuVmlkZW8oKTsKICByZXF1aXJlVG9Mb2FkTW9kdWxlKGJhaWR1UGFuVmlkZW8pOwogIGJhaWR1UGFuVmlkZW8uaW5pdCgpOwoKICBleHBvcnRzLmJhaWR1UGFuVmlkZW8gPSBiYWlkdVBhblZpZGVvOwoKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pOwoKfSkpKTsK"},{"name":"ËΩ¨Êç¢ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÂõæÁâáÂà∞ÂÖºÂÆπÊ†ºÂºè","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://mp.weixin.qq.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703210,"data":{}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/390883-%E8%BD%AC%E6%8D%A2%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%9B%BE%E7%89%87%E5%88%B0%E5%85%BC%E5%AE%B9%E6%A0%BC%E5%BC%8F/code/%E8%BD%AC%E6%8D%A2%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%9B%BE%E7%89%87%E5%88%B0%E5%85%BC%E5%AE%B9%E6%A0%BC%E5%BC%8F.user.js","uuid":"c4bcfee9-c295-404d-9d7f-bf80434b5811","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDovazmjaLlvq7kv6HlhazkvJflj7flm77niYfliLDlhbzlrrnmoLzlvI8KLy8gQGRlc2NyaXB0aW9uICDlsIZXRUJQ5qC85byP5Zu+54mH6L2s5o2i5YiwSlBFR+OAgVBOR+etieWFvOWuueaAp+i+g+WlveeahOagvOW8jwovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvdXNlcnMvMTk3NTI5Ci8vIEB2ZXJzaW9uICAgICAgMC42LjQKLy8gQGF1dGhvciAgICAgICBra29jZGtvCi8vIEBsaWNlbnNlICAgICAgVW5saWNlbnNlCi8vIEBtYXRjaCAgICAgICAgKjovL21wLndlaXhpbi5xcS5jb20vKgovLyA9PS9Vc2VyU2NyaXB0PT0KInVzZSBzdHJpY3QiOwoKY29uc3QgeyBhZGRGbG9hdEJ1dHRvbiB9ID0gewogIGFkZEZsb2F0QnV0dG9uKHRleHQsIG9uY2xpY2spIC8qIDIwMjIwMzI0LTA5NTAgKi8gewogICAgaWYgKCFkb2N1bWVudC5hZGRGbG9hdEJ1dHRvbikgewogICAgICBjb25zdCBob3N0ID0gZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSk7CiAgICAgIGNvbnN0IHJvb3QgPSBob3N0LmF0dGFjaFNoYWRvdyh7IG1vZGU6ICJvcGVuIiB9KTsKICAgICAgcm9vdC5pbm5lckhUTUwgPSBgPHN0eWxlPjpob3N0e3Bvc2l0aW9uOmZpeGVkO3RvcDo0cHg7bGVmdDo0cHg7ei1pbmRleDoyMTQ3NDgzNjQ3O2hlaWdodDowfSNpe2Rpc3BsYXk6bm9uZX0qe2Zsb2F0OmxlZnQ7cGFkZGluZzoxZW07bWFyZ2luOjRweDtsaW5lLWhlaWdodDowO2NvbG9yOiNmZmY7dXNlci1zZWxlY3Q6bm9uZTtiYWNrZ3JvdW5kOiMyOGU7Ym9yZGVyOjFweCBzb2xpZCAjZmZmYTtib3JkZXItcmFkaXVzOjhweDt0cmFuc2l0aW9uOi4zc31bZm9yXX46YWN0aXZle2JhY2tncm91bmQ6IzRhZjt0cmFuc2l0aW9uOjBzfTpjaGVja2Vkfip7b3BhY2l0eTouMzt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtM2VtKX06Y2hlY2tlZCsqe3RyYW5zZm9ybTp0cmFuc2xhdGVZKDNlbSl9PC9zdHlsZT48aW5wdXQgaWQ9aSB0eXBlPWNoZWNrYm94PjxsYWJlbCBmb3I9aT5gOwogICAgICBkb2N1bWVudC5hZGRGbG9hdEJ1dHRvbiA9ICh0ZXh0LCBvbmNsaWNrKSA9PiB7CiAgICAgICAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOwogICAgICAgIGVsLnRleHRDb250ZW50ID0gdGV4dDsKICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIG9uY2xpY2spOwogICAgICAgIHJldHVybiByb290LmFwcGVuZENoaWxkKGVsKTsKICAgICAgfTsKICAgIH0KICAgIHJldHVybiBkb2N1bWVudC5hZGRGbG9hdEJ1dHRvbih0ZXh0LCBvbmNsaWNrKTsKICB9LAp9OwoKYWRkRmxvYXRCdXR0b24oIui9rOaNouWFqOmDqOWbvueJh+WIsOWFvOWuueagvOW8jyIsIGZ1bmN0aW9uICgpIHsKICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJpbWciKS5mb3JFYWNoKChlbCkgPT4gewogICAgY29uc3QgaW1nVXJsU3RyID0gZWwuZGF0YXNldC5zcmMgfHwgZWwuc3JjOwogICAgaWYgKCFpbWdVcmxTdHIpIHJldHVybjsKICAgIGNvbnN0IGltZ1VybCA9IG5ldyBVUkwoaW1nVXJsU3RyKTsKICAgIGltZ1VybC5zZWFyY2hQYXJhbXMuc2V0KCJ0cCIsICJwbmciKTsKICAgIGNvbnN0IG5ld0ltZyA9IGVsLmNsb25lTm9kZSgpOwogICAgbmV3SW1nLnNyYyA9IGltZ1VybC5ocmVmOwogICAgZWwucmVwbGFjZVdpdGgobmV3SW1nKTsKICB9KTsKICB0aGlzLnN0eWxlLmJhY2tncm91bmQgPSAiIzRjYWY1MCI7CiAgdGhpcy50ZXh0Q29udGVudCA9ICLlhajpg6jlm77niYfpg73lt7LovazmjaLlrozmiJDvvIEiOwp9KTsK"},{"name":"Â§©Áøº‰∫ëÁõòÂä©Êâã","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*//cloud.189.cn/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1656858703214,"data":{}},"enabled":true,"position":12,"file_url":"https://greasyfork.org/scripts/427633-%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E5%8A%A9%E6%89%8B/code/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E5%8A%A9%E6%89%8B.user.js","uuid":"f3aab01b-f9bc-4542-92d4-2d3bc93f7f68","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery/2.1.4/jquery.min.js","ts":1657118213735,"mimetype":"text/javascript"},"source":""}]},{"name":"Github Â¢ûÂº∫ - È´òÈÄü‰∏ãËΩΩ","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://github.com/*","*://hub.fastgit.xyz/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1657329004971,"data":{"xiu2_menu_raw_fast":"n1"}},"enabled":false,"position":13,"file_url":"https://greasyfork.org/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/code/Github%20%E5%A2%9E%E5%BC%BA%20-%20%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD.user.js","uuid":"dbfc3a21-ad5d-4c3b-bd02-2ac6ce5156bc","source":""},{"name":"V2EX Â¢ûÂº∫","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v2ex.com/*","*://*.v2ex.com/*","*://www.sov2ex.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1658229613419,"data":{"menu_autoClockIn":"btrue","menu_backToTop":"btrue","menu_clockInTime":"s2022/7/19","menu_fish":"btrue","menu_linksBlank":"btrue","menu_linksToImgs":"btrue","menu_pageLoading":"btrue","menu_pageLoading_reply":"btrue","menu_quickReply":"btrue","menu_sov2ex":"bfalse"}},"enabled":true,"position":14,"file_url":"https://greasyfork.org/scripts/424246-v2ex-%E5%A2%9E%E5%BC%BA/code/V2EX%20%E5%A2%9E%E5%BC%BA.user.js","uuid":"831aa842-9f2f-4322-a305-51ef094e6288","source":""},{"name":"üî•ÊåÅÁª≠Êõ¥Êñ∞üî• CSDNÂπøÂëäÂÆåÂÖ®ËøáÊª§„ÄÅ‰∫∫ÊÄßÂåñËÑöÊú¨‰ºòÂåñÔºöüÜï ‰∏çÁî®ÂÜçÁôªÂΩï‰∫ÜÔºÅËÆ©‰Ω†‰ΩìÈ™å‰ª§‰∫∫ÊÉäÂñúÁöÑÂ¥≠Êñ∞CSDN„ÄÇ","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.csdn.net"],"orig_excludes":[],"orig_includes":["*://*.csdn.net/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1657416957356,"data":{}},"enabled":true,"position":15,"file_url":"https://greasyfork.org/scripts/378351-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-csdn%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4-%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96-%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86-%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0csdn/code/%F0%9F%94%A5%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%F0%9F%94%A5%20CSDN%E5%B9%BF%E5%91%8A%E5%AE%8C%E5%85%A8%E8%BF%87%E6%BB%A4%E3%80%81%E4%BA%BA%E6%80%A7%E5%8C%96%E8%84%9A%E6%9C%AC%E4%BC%98%E5%8C%96%EF%BC%9A%F0%9F%86%95%20%E4%B8%8D%E7%94%A8%E5%86%8D%E7%99%BB%E5%BD%95%E4%BA%86%EF%BC%81%E8%AE%A9%E4%BD%A0%E4%BD%93%E9%AA%8C%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%96%9C%E7%9A%84%E5%B4%AD%E6%96%B0CSDN%E3%80%82.user.js","uuid":"48e78849-e152-4f2e-820d-aafe7b6d28cc","source":"","requires":[{"meta":{"name":"jquery.cookie.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery-cookie/1.4.1/jquery.cookie.min.js","ts":1657416957534,"mimetype":"text/javascript"},"source":"LyohIGpxdWVyeS5jb29raWUgdjEuNC4xIHwgTUlUICovCiFmdW5jdGlvbihhKXsiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbImpxdWVyeSJdLGEpOiJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9hKHJlcXVpcmUoImpxdWVyeSIpKTphKGpRdWVyeSl9KGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7cmV0dXJuIGgucmF3P2E6ZW5jb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGMoYSl7cmV0dXJuIGgucmF3P2E6ZGVjb2RlVVJJQ29tcG9uZW50KGEpfWZ1bmN0aW9uIGQoYSl7cmV0dXJuIGIoaC5qc29uP0pTT04uc3RyaW5naWZ5KGEpOlN0cmluZyhhKSl9ZnVuY3Rpb24gZShhKXswPT09YS5pbmRleE9mKCciJykmJihhPWEuc2xpY2UoMSwtMSkucmVwbGFjZSgvXFwiL2csJyInKS5yZXBsYWNlKC9cXFxcL2csIlxcIikpO3RyeXtyZXR1cm4gYT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKGcsIiAiKSksaC5qc29uP0pTT04ucGFyc2UoYSk6YX1jYXRjaChiKXt9fWZ1bmN0aW9uIGYoYixjKXt2YXIgZD1oLnJhdz9iOmUoYik7cmV0dXJuIGEuaXNGdW5jdGlvbihjKT9jKGQpOmR9dmFyIGc9L1wrL2csaD1hLmNvb2tpZT1mdW5jdGlvbihlLGcsaSl7aWYodm9pZCAwIT09ZyYmIWEuaXNGdW5jdGlvbihnKSl7aWYoaT1hLmV4dGVuZCh7fSxoLmRlZmF1bHRzLGkpLCJudW1iZXIiPT10eXBlb2YgaS5leHBpcmVzKXt2YXIgaj1pLmV4cGlyZXMsaz1pLmV4cGlyZXM9bmV3IERhdGU7ay5zZXRUaW1lKCtrKzg2NGU1KmopfXJldHVybiBkb2N1bWVudC5jb29raWU9W2IoZSksIj0iLGQoZyksaS5leHBpcmVzPyI7IGV4cGlyZXM9IitpLmV4cGlyZXMudG9VVENTdHJpbmcoKToiIixpLnBhdGg/IjsgcGF0aD0iK2kucGF0aDoiIixpLmRvbWFpbj8iOyBkb21haW49IitpLmRvbWFpbjoiIixpLnNlY3VyZT8iOyBzZWN1cmUiOiIiXS5qb2luKCIiKX1mb3IodmFyIGw9ZT92b2lkIDA6e30sbT1kb2N1bWVudC5jb29raWU/ZG9jdW1lbnQuY29va2llLnNwbGl0KCI7ICIpOltdLG49MCxvPW0ubGVuZ3RoO28+bjtuKyspe3ZhciBwPW1bbl0uc3BsaXQoIj0iKSxxPWMocC5zaGlmdCgpKSxyPXAuam9pbigiPSIpO2lmKGUmJmU9PT1xKXtsPWYocixnKTticmVha31lfHx2b2lkIDA9PT0ocj1mKHIpKXx8KGxbcV09cil9cmV0dXJuIGx9O2guZGVmYXVsdHM9e30sYS5yZW1vdmVDb29raWU9ZnVuY3Rpb24oYixjKXtyZXR1cm4gdm9pZCAwPT09YS5jb29raWUoYik/ITE6KGEuY29va2llKGIsIiIsYS5leHRlbmQoe30sYyx7ZXhwaXJlczotMX0pKSwhYS5jb29raWUoYikpfX0pOw=="},{"meta":{"name":"nprogress.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js","ts":1657416957540,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKG4sZSl7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWUoKTpuLk5Qcm9ncmVzcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sZSx0KXtyZXR1cm4gZT5uP2U6bj50P3Q6bn1mdW5jdGlvbiBlKG4pe3JldHVybiAxMDAqKC0xK24pfWZ1bmN0aW9uIHQobix0LHIpe3ZhciBpO3JldHVybiBpPSJ0cmFuc2xhdGUzZCI9PT1jLnBvc2l0aW9uVXNpbmc/e3RyYW5zZm9ybToidHJhbnNsYXRlM2QoIitlKG4pKyIlLDAsMCkifToidHJhbnNsYXRlIj09PWMucG9zaXRpb25Vc2luZz97dHJhbnNmb3JtOiJ0cmFuc2xhdGUoIitlKG4pKyIlLDApIn06eyJtYXJnaW4tbGVmdCI6ZShuKSsiJSJ9LGkudHJhbnNpdGlvbj0iYWxsICIrdCsibXMgIityLGl9ZnVuY3Rpb24gcihuLGUpe3ZhciB0PSJzdHJpbmciPT10eXBlb2Ygbj9uOm8obik7cmV0dXJuIHQuaW5kZXhPZigiICIrZSsiICIpPj0wfWZ1bmN0aW9uIGkobixlKXt2YXIgdD1vKG4pLGk9dCtlO3IodCxlKXx8KG4uY2xhc3NOYW1lPWkuc3Vic3RyaW5nKDEpKX1mdW5jdGlvbiBzKG4sZSl7dmFyIHQsaT1vKG4pO3IobixlKSYmKHQ9aS5yZXBsYWNlKCIgIitlKyIgIiwiICIpLG4uY2xhc3NOYW1lPXQuc3Vic3RyaW5nKDEsdC5sZW5ndGgtMSkpfWZ1bmN0aW9uIG8obil7cmV0dXJuKCIgIisobi5jbGFzc05hbWV8fCIiKSsiICIpLnJlcGxhY2UoL1xzKy9naSwiICIpfWZ1bmN0aW9uIGEobil7biYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobil9dmFyIHU9e307dS52ZXJzaW9uPSIwLjIuMCI7dmFyIGM9dS5zZXR0aW5ncz17bWluaW11bTouMDgsZWFzaW5nOiJlYXNlIixwb3NpdGlvblVzaW5nOiIiLHNwZWVkOjIwMCx0cmlja2xlOiEwLHRyaWNrbGVSYXRlOi4wMix0cmlja2xlU3BlZWQ6ODAwLHNob3dTcGlubmVyOiEwLGJhclNlbGVjdG9yOidbcm9sZT0iYmFyIl0nLHNwaW5uZXJTZWxlY3RvcjonW3JvbGU9InNwaW5uZXIiXScscGFyZW50OiJib2R5Iix0ZW1wbGF0ZTonPGRpdiBjbGFzcz0iYmFyIiByb2xlPSJiYXIiPjxkaXYgY2xhc3M9InBlZyI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0ic3Bpbm5lciIgcm9sZT0ic3Bpbm5lciI+PGRpdiBjbGFzcz0ic3Bpbm5lci1pY29uIj48L2Rpdj48L2Rpdj4nfTt1LmNvbmZpZ3VyZT1mdW5jdGlvbihuKXt2YXIgZSx0O2ZvcihlIGluIG4pdD1uW2VdLHZvaWQgMCE9PXQmJm4uaGFzT3duUHJvcGVydHkoZSkmJihjW2VdPXQpO3JldHVybiB0aGlzfSx1LnN0YXR1cz1udWxsLHUuc2V0PWZ1bmN0aW9uKGUpe3ZhciByPXUuaXNTdGFydGVkKCk7ZT1uKGUsYy5taW5pbXVtLDEpLHUuc3RhdHVzPTE9PT1lP251bGw6ZTt2YXIgaT11LnJlbmRlcighcikscz1pLnF1ZXJ5U2VsZWN0b3IoYy5iYXJTZWxlY3Rvciksbz1jLnNwZWVkLGE9Yy5lYXNpbmc7cmV0dXJuIGkub2Zmc2V0V2lkdGgsbChmdW5jdGlvbihuKXsiIj09PWMucG9zaXRpb25Vc2luZyYmKGMucG9zaXRpb25Vc2luZz11LmdldFBvc2l0aW9uaW5nQ1NTKCkpLGYocyx0KGUsbyxhKSksMT09PWU/KGYoaSx7dHJhbnNpdGlvbjoibm9uZSIsb3BhY2l0eToxfSksaS5vZmZzZXRXaWR0aCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZihpLHt0cmFuc2l0aW9uOiJhbGwgIitvKyJtcyBsaW5lYXIiLG9wYWNpdHk6MH0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt1LnJlbW92ZSgpLG4oKX0sbyl9LG8pKTpzZXRUaW1lb3V0KG4sbyl9KSx0aGlzfSx1LmlzU3RhcnRlZD1mdW5jdGlvbigpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdS5zdGF0dXN9LHUuc3RhcnQ9ZnVuY3Rpb24oKXt1LnN0YXR1c3x8dS5zZXQoMCk7dmFyIG49ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dS5zdGF0dXMmJih1LnRyaWNrbGUoKSxuKCkpfSxjLnRyaWNrbGVTcGVlZCl9O3JldHVybiBjLnRyaWNrbGUmJm4oKSx0aGlzfSx1LmRvbmU9ZnVuY3Rpb24obil7cmV0dXJuIG58fHUuc3RhdHVzP3UuaW5jKC4zKy41Kk1hdGgucmFuZG9tKCkpLnNldCgxKTp0aGlzfSx1LmluYz1mdW5jdGlvbihlKXt2YXIgdD11LnN0YXR1cztyZXR1cm4gdD8oIm51bWJlciIhPXR5cGVvZiBlJiYoZT0oMS10KSpuKE1hdGgucmFuZG9tKCkqdCwuMSwuOTUpKSx0PW4odCtlLDAsLjk5NCksdS5zZXQodCkpOnUuc3RhcnQoKX0sdS50cmlja2xlPWZ1bmN0aW9uKCl7cmV0dXJuIHUuaW5jKE1hdGgucmFuZG9tKCkqYy50cmlja2xlUmF0ZSl9LGZ1bmN0aW9uKCl7dmFyIG49MCxlPTA7dS5wcm9taXNlPWZ1bmN0aW9uKHQpe3JldHVybiB0JiYicmVzb2x2ZWQiIT09dC5zdGF0ZSgpPygwPT09ZSYmdS5zdGFydCgpLG4rKyxlKyssdC5hbHdheXMoZnVuY3Rpb24oKXtlLS0sMD09PWU/KG49MCx1LmRvbmUoKSk6dS5zZXQoKG4tZSkvbil9KSx0aGlzKTp0aGlzfX0oKSx1LnJlbmRlcj1mdW5jdGlvbihuKXtpZih1LmlzUmVuZGVyZWQoKSlyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5wcm9ncmVzcyIpO2koZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCJucHJvZ3Jlc3MtYnVzeSIpO3ZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO3QuaWQ9Im5wcm9ncmVzcyIsdC5pbm5lckhUTUw9Yy50ZW1wbGF0ZTt2YXIgcixzPXQucXVlcnlTZWxlY3RvcihjLmJhclNlbGVjdG9yKSxvPW4/Ii0xMDAiOmUodS5zdGF0dXN8fDApLGw9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjLnBhcmVudCk7cmV0dXJuIGYocyx7dHJhbnNpdGlvbjoiYWxsIDAgbGluZWFyIix0cmFuc2Zvcm06InRyYW5zbGF0ZTNkKCIrbysiJSwwLDApIn0pLGMuc2hvd1NwaW5uZXJ8fChyPXQucXVlcnlTZWxlY3RvcihjLnNwaW5uZXJTZWxlY3RvciksciYmYShyKSksbCE9ZG9jdW1lbnQuYm9keSYmaShsLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpLGwuYXBwZW5kQ2hpbGQodCksdH0sdS5yZW1vdmU9ZnVuY3Rpb24oKXtzKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwibnByb2dyZXNzLWJ1c3kiKSxzKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYy5wYXJlbnQpLCJucHJvZ3Jlc3MtY3VzdG9tLXBhcmVudCIpO3ZhciBuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKTtuJiZhKG4pfSx1LmlzUmVuZGVyZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJucHJvZ3Jlc3MiKX0sdS5nZXRQb3NpdGlvbmluZ0NTUz1mdW5jdGlvbigpe3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUsZT0iV2Via2l0VHJhbnNmb3JtImluIG4/IldlYmtpdCI6Ik1velRyYW5zZm9ybSJpbiBuPyJNb3oiOiJtc1RyYW5zZm9ybSJpbiBuPyJtcyI6Ik9UcmFuc2Zvcm0iaW4gbj8iTyI6IiI7cmV0dXJuIGUrIlBlcnNwZWN0aXZlImluIG4/InRyYW5zbGF0ZTNkIjplKyJUcmFuc2Zvcm0iaW4gbj8idHJhbnNsYXRlIjoibWFyZ2luIn07dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dmFyIHQ9ZS5zaGlmdCgpO3QmJnQobil9dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKHQpe2UucHVzaCh0KSwxPT1lLmxlbmd0aCYmbigpfX0oKSxmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuKXtyZXR1cm4gbi5yZXBsYWNlKC9eLW1zLS8sIm1zLSIpLnJlcGxhY2UoLy0oW1xkYS16XSkvZ2ksZnVuY3Rpb24obixlKXtyZXR1cm4gZS50b1VwcGVyQ2FzZSgpfSl9ZnVuY3Rpb24gZShuKXt2YXIgZT1kb2N1bWVudC5ib2R5LnN0eWxlO2lmKG4gaW4gZSlyZXR1cm4gbjtmb3IodmFyIHQscj1pLmxlbmd0aCxzPW4uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrbi5zbGljZSgxKTtyLS07KWlmKHQ9aVtyXStzLHQgaW4gZSlyZXR1cm4gdDtyZXR1cm4gbn1mdW5jdGlvbiB0KHQpe3JldHVybiB0PW4odCksc1t0XXx8KHNbdF09ZSh0KSl9ZnVuY3Rpb24gcihuLGUscil7ZT10KGUpLG4uc3R5bGVbZV09cn12YXIgaT1bIldlYmtpdCIsIk8iLCJNb3oiLCJtcyJdLHM9e307cmV0dXJuIGZ1bmN0aW9uKG4sZSl7dmFyIHQsaSxzPWFyZ3VtZW50cztpZigyPT1zLmxlbmd0aClmb3IodCBpbiBlKWk9ZVt0XSx2b2lkIDAhPT1pJiZlLmhhc093blByb3BlcnR5KHQpJiZyKG4sdCxpKTtlbHNlIHIobixzWzFdLHNbMl0pfX0oKTtyZXR1cm4gdX0pOw=="},{"meta":{"name":"clipboard.min.js","url":"https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.10/clipboard.min.js","ts":1657416957500,"mimetype":"text/javascript"},"source":""}]},{"name":"Spotify Web - Copy track info to clipboard","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://open.spotify.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1657808098365,"data":{}},"enabled":true,"position":16,"file_url":"https://greasyfork.org/scripts/36788-spotify-web-copy-track-info-to-clipboard/code/Spotify%20Web%20-%20Copy%20track%20info%20to%20clipboard.user.js","uuid":"f82e9842-e8c3-4d7e-8dd1-7c3ba3f8c203","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js","ts":1657808098972,"mimetype":"text/javascript"},"source":""}]}]}